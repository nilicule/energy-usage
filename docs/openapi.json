{
    "openapi": "3.0.0",
    "info": {
        "title": "NET2GRID Customer Engagement API",
        "description": "This is the B2C NET2GRID API that can be used by mobile and web apps to manage the accounts and the data that are provided by the NET2GRID Meter Data Analytics Platform.",
        "version": "13.63.0"
    },
    "servers": [
        {
            "url": "https://api.n2g-ynni.net",
            "description": "API server"
        }
    ],
    "paths": {
        "/v2/appliances/categories/mapping": {
            "get": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/appliances/categories/mapping",
                "description": "Returns the categories of appliance types mapping.",
                "operationId": "v2getApplianceCategoriesMapping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAppliancesMappingResponseDTO"
                                },
                                "examples": {
                                    "GetAppliancesCategoriesMappingExample": {
                                        "$ref": "#/components/examples/GetAppliancesCategoriesMappingExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/appliances/definitions": {
            "get": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/appliances/definitions",
                "description": "Returns information about each appliance that is supported by the platform.",
                "operationId": "v2getApplianceDefinitions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "The status of the call, “ok” if it was successful, “error” if it went wrong.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The data of the response.Contains the list of all appliance objects that\n                            are supported in the platform along with their relevant information.",
                                            "properties": {
                                                "applianceCode": {
                                                    "description": "The unique code that represents a specific appliance.",
                                                    "properties": {
                                                        "description": {
                                                            "description": "The description of this appliance as it can be shown\n                                   in an end customer (used in export files)",
                                                            "type": "string"
                                                        },
                                                        "identifier": {
                                                            "description": "The identifier of the appliance\n                                   (used mostly for internal communication within services in NET2GRID platform).",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "applianceObject": {
                                                    "description": "The object that contains all relevant information about an appliance.\n                                           It can contain the fields: “description”, “identifier”, “attributes”",
                                                    "properties": {
                                                        "description": {
                                                            "description": "The description of this appliance as it can be shown in an end customer\n                                   (used in export files).",
                                                            "type": "string"
                                                        },
                                                        "identifier": {
                                                            "description": "The identifier of the appliance\n                                   (used mostly for internal communication within services in NET2GRID platform).",
                                                            "type": "string"
                                                        },
                                                        "attributes": {
                                                            "description": "An array of metadata attributes objects that can be set via\n                                   the `Post profile attributes` call.\n                                   The array may be empty if no metadata is supported for a device.\n                                   Each object can contain fields “attributeName” and “allowedValues”.",
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "attributeName": {
                                                                        "description": "The attribute name that can be used\n                                                  as metadata attribute. The usually supported names\n                                                  are: “description”, “applianceAge”, “applianceType”,\n                                                  “applianceVolume” and “brand”.",
                                                                        "type": "string"
                                                                    },
                                                                    "allowedValues": {
                                                                        "description": " This is a list of allowed values in cases where\n                                                    there should be a constraint in the values that can be setup for a\n                                                    metadata attribute field via `Post profile attributes` call.",
                                                                        "type": "object",
                                                                        "nullable": true,
                                                                        "additionalProperties": {}
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object",
                                            "additionalProperties": {}
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "GetAppliancesDefinitionsExample": {
                                        "$ref": "#/components/examples/GetAppliancesDefinitionsExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>265: Analytics Portal Service Generic Exception<br/>666: Not authorized exception<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/smartbridge/authentication/settings": {
            "post": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/smartbridge/authentication/settings",
                "description": "Enable/disable the API key authentication on the Local API from the application.",
                "operationId": "v2/postAuthSettingsConfig",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostAuthSettingsConfigDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n                    152: User does not have a valid household object.<br/>\n                    153: No valid meter found for user.<br/>\n                    406: Gateway service generic exception.<br/>\n                    422: Invalid input: Missing attributes.<br/>\n                    425: Disabled API call.<br/>\n                    999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/bill/{energyType}/prediction": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/bill/{energyType}/prediction",
                "description": "Returns the bill prediction for the user.",
                "operationId": "v2getBillPrediction",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The type of energy for which the call is performed.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity",
                                "gas",
                                "amr_electricity",
                                "amr_gas"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillPredictionResponseDTO"
                                },
                                "examples": {
                                    "GetBillPredictionExample": {
                                        "$ref": "#/components/examples/GetBillPredictionExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.\n                <br/>256: Unable to calculate bill prediction for 'user' of type ELECTRICITY and channel HOME_AREA_NETWORK\n                <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/{energyType}/bill/prediction": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/{energyType}/bill/prediction",
                "description": "Returns the bill prediction for the user.",
                "operationId": "v2getBillPredictionDeprecated",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The type of energy for which the call is performed.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity",
                                "gas",
                                "amr_electricity",
                                "amr_gas"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillPredictionResponseDTO"
                                },
                                "examples": {
                                    "GetBillPredictionExample": {
                                        "$ref": "#/components/examples/GetBillPredictionExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.\n                  <br/>256: Unable to calculate bill prediction for 'user' of type {energyType} and channel HOME_AREA_NETWORK\n                  <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/capacity-peak/electricity/mains/{year}/{month}": {
            "get": {
                "tags": [
                    "Energy Measurements"
                ],
                "summary": "/capacity-peak/electricity/mains/{year}/{month}",
                "description": "Returns the capacity peak value of the requested month, the date and the interval in which the peak happened. The capacity peak value is in kW. The monthly capacity peak is available only for months that have ended or for the current month.",
                "operationId": "v2/getMonthlyCapacityPeak",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the capacity peak is requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which the capacity peak is requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCapacityPeakResponseDTO"
                                },
                                "examples": {
                                    "GetCapacityPeakExample": {
                                        "$ref": "#/components/examples/GetCapacityPeakExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>152: User does not have a valid household object.<br/>153: No valid meter found for user.<br/>185: Labelpartner not specified for household.<br/>422: Future months are not allowed.<br/>426: Invalid month/year provided.<br/>433: There are no available measurements to perform calculation.<br/>999: Unable to read monthly capacity peak.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/capacitypeaks/config": {
            "get": {
                "tags": [
                    "Edge Analytics and Alerts"
                ],
                "summary": "/capacitypeaks/config",
                "description": "Returns the capacity peaks configuration that is used for alerting the user when exceeded.\n    It is required that:<br/>\n    1) the capacity peaks functionality has been enabled for the platform or labelpartner of the user<br/>\n    2) a NET2GRID device is connected to the user’s account and the device is online<br/>\n    Note: The hardware device may not be able to update immediately.\n    It can take a few seconds until changes are visible by this call.",
                "operationId": "v2/getCapacityPeakConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CapacityPeaksConfigResponseDTO"
                                },
                                "examples": {
                                    "GetCapacityPeaksConfigExample": {
                                        "$ref": "#/components/examples/GetCapacityPeaksConfigExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n    110: Unable to get capacity peak threshold because gateway is offline and cached value duration expired.<br/>\n    116: Firmware Version is not updated to support setting capacity peak thresholds.<br/>\n    152: User does not have a valid household object.<br/>\n    153: No valid meter found for user.<br/>\n    425: Capacity Peaks Alerts are disabled.<br/>\n    999: Unable to read monthly capacity peak.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Edge Analytics and Alerts"
                ],
                "summary": "/capacitypeaks/config",
                "description": "Sets capacity peaks thresholds to alert the end user when exceeded.<br/>\n    To succesfully set the capacity peaks configuration, it is required that:<br/>\n    1) the capacity peaks functionality has been enabled for the platform or labelpartner of the user <br/>\n    2) a NET2GRID device is connected to the user’s account and the device is online<br/>\n    This API call has a cooldown period of 30 seconds before the user is able to execute it again.<br/>\n    Note: The hardware device may not be able to store the value immediately.\n    It can take a few seconds until the new capacity peaks configuration is visible.",
                "operationId": "v2/putCapacityPeakConfig",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetCapacityPeaksConfigDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n    117: Gateway is processing the last configuration. Please try again in a few seconds.<br/>\n    152: User does not have a valid household object.<br/>\n    153: No valid meter found for user.<br/>\n    422: Invalid input: Missing attributes.<br/>\n    425: Capacity Peaks Alerts are disabled.<br/>\n    999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/configuration/dashboard": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/configuration/dashboard",
                "description": "Returns the stored dashboard configuration of the current user.",
                "operationId": "v2getDashboardConfiguration",
                "responses": {
                    "200": {
                        "description": "The stored dashboard configuration of the current user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "example_name": {
                                            "type": "string",
                                            "example": "Resource Name"
                                        },
                                        "example_description": {
                                            "type": "string",
                                            "example": "Resource Description"
                                        },
                                        "example_value": {
                                            "type": "number",
                                            "example": 42
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/v2/configuration/dashboard",
                "description": "Update the dashboard configuration that is stored in the database for a specific user.",
                "operationId": "v2postConfigurationDashboard",
                "requestBody": {
                    "description": "Dashboard configuration information in JSON format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "example_name": {
                                        "type": "string",
                                        "example": "Resource Name"
                                    },
                                    "example_description": {
                                        "type": "string",
                                        "example": "Resource Description"
                                    },
                                    "example_value": {
                                        "type": "number",
                                        "example": 42
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n                              <br/>422:Invalid json format.\n                              <br/>422:Missing attributes (config).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/configuration": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/configuration",
                "description": "Returns the stored dashboard configuration of the current user.",
                "operationId": "v2getConfiguration",
                "responses": {
                    "200": {
                        "description": "The stored dashboard configuration of the current user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "example_name": {
                                            "type": "string",
                                            "example": "Resource Name"
                                        },
                                        "example_description": {
                                            "type": "string",
                                            "example": "Resource Description"
                                        },
                                        "example_value": {
                                            "type": "number",
                                            "example": 42
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/v2/configuration",
                "description": "Update the dashboard configuration that is stored in the database for a specific user.",
                "operationId": "v2postConfiguration",
                "requestBody": {
                    "description": "Dashboard configuration information in JSON format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "example_name": {
                                        "type": "string",
                                        "example": "Resource Name"
                                    },
                                    "example_description": {
                                        "type": "string",
                                        "example": "Resource Description"
                                    },
                                    "example_value": {
                                        "type": "number",
                                        "example": 42
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n                             <br/>422:Invalid json format.\n                             <br/>422:Missing attributes (config).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/consumption/{energyType}/daily": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/consumption/{energyType}/daily",
                "description": "Returns the users’ total energy used (in Whs) and its cost from the start of the current day.",
                "operationId": "v2getDailyConsumption",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The energy type for which the day's consumption is requested.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity",
                                "amr_electricity",
                                "gas",
                                "amr_gas"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DailyConsumptionResponseDTO"
                                },
                                "examples": {
                                    "GetDailyConsumptionExample": {
                                        "$ref": "#/components/examples/GetDailyConsumptionExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request <br/>152: User does not have a valid household object.<br/>153: No valid meter found for user.<br/>422: Invalid energy type.<br/>426: Invalid Date format.<br/>429: No data available.<br/>999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/consumption/{energyType}/compare/{periodType}": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/consumption/{energyType}/compare/{periodType}",
                "description": "Compares the consumption of the current and previous month.",
                "operationId": "v2getCompareConsumptionPeriod",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The energy type for which the comparison is requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "periodType",
                        "in": "path",
                        "description": "The type of period for which the comparison is requested (month).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConsumptionCompareResponseDTO"
                                },
                                "examples": {
                                    "GetConsumptionCompareExample": {
                                        "$ref": "#/components/examples/GetConsumptionCompareExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>152: User does not have a valid household object. <br/>153: No valid meter found for user. <br/>422: Invalid energy type. <br/>426: Invalid Date format. <br/>429: No data available.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/energy-measurements/{metricType}/{feedType}/{interval}/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Energy Measurements"
                ],
                "summary": "/energy-measurements/{metricType}/{feedType}/{interval}/{startDate}/{endDate}",
                "description": "Returns the energy measurements of the provided metric in the provided interval for the period between the start and end date provided.",
                "operationId": "v2getEnergyMeasurementsDaysHours",
                "parameters": [
                    {
                        "name": "metricType",
                        "in": "path",
                        "description": "The metric for which the energy measurements will be returned.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity-offtake",
                                "electricity-feedin",
                                "gas",
                                "electricity-offtake-tier-1",
                                "electricity-offtake-tier-2",
                                "electricity-feedin-tier-1",
                                "electricity-feedin-tier-2"
                            ]
                        }
                    },
                    {
                        "name": "feedType",
                        "in": "path",
                        "description": "The feed type for which the energy measurements will be returned.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "real-time",
                                "smart-meter"
                            ]
                        }
                    },
                    {
                        "name": "interval",
                        "in": "path",
                        "description": "The interval for which the energy measurements will be returned.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "quarter-hours",
                                "hours",
                                "days"
                            ]
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "path",
                        "description": "The start date from which the energy measurements will be returned in YYYY-MM-DD format. The returned results will be in the timezone of the end-user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "description": "The end date until which the energy measurements will be returned in YYYY-MM-DD format. The returned results will be in the timezone of the end-user and will contain all measurements until the end of that day.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEnergyMeasurementResponseDTO"
                                },
                                "examples": {
                                    "GetEnergyMeasurementDaysExample": {
                                        "$ref": "#/components/examples/GetEnergyMeasurementDaysExample"
                                    },
                                    "GetEnergyMeasurementWithMissingDataExample": {
                                        "$ref": "#/components/examples/GetEnergyMeasurementWithMissingDataExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>142: Invalid interval. <br/>152: User does not have a valid household object. <br/>153: No valid meter found for user. <br/>422: Invalid energy type. <br/>426: Invalid Date format. <br/>429: No data available.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/energy-measurements/{metricType}/{feedType}/weeks/{year}/{quarter}": {
            "get": {
                "tags": [
                    "Energy Measurements"
                ],
                "summary": "/energy-measurements/{metricType}/{feedType}/weeks/{year}/{quarter}",
                "description": "Returns the energy measurements of the provided metric in weekly elements over the provided quarter.",
                "operationId": "v2getEnergyMeasurementsWeeks",
                "parameters": [
                    {
                        "name": "metricType",
                        "in": "path",
                        "description": "The metric for which the energy measurements will be returned.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity-offtake",
                                "electricity-feedin",
                                "gas",
                                "electricity-offtake-tier-1",
                                "electricity-offtake-tier-2",
                                "electricity-feedin-tier-1",
                                "electricity-feedin-tier-2"
                            ]
                        }
                    },
                    {
                        "name": "feedType",
                        "in": "path",
                        "description": "The feed type for which the energy measurements will be returned.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "real-time",
                                "smart-meter"
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year from which the energy measurements will be returned in YYYY format. The returned results will be in the timezone of the end-user.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "quarter",
                        "in": "path",
                        "description": "The quarter for which the energy measurements will be returned. The returned results will be in the timezone of the end-user and will contain all measurements until the end of that day of the provided quarter.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEnergyMeasurementResponseDTO"
                                },
                                "examples": {
                                    "GetEnergyMeasurementDaysExample": {
                                        "$ref": "#/components/examples/GetEnergyMeasurementDaysExample"
                                    },
                                    "GetEnergyMeasurementWithMissingDataExample": {
                                        "$ref": "#/components/examples/GetEnergyMeasurementWithMissingDataExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>142: Invalid interval. <br/>152: User does not have a valid household object. <br/>153: No valid meter found for user. <br/>422: Invalid energy type. <br/>426: Invalid Date format. <br/>429: No data available.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/energy-measurements/{metricType}/{feedType}/months/{startMonth}/{endMonth}": {
            "get": {
                "tags": [
                    "Energy Measurements"
                ],
                "summary": "/energy-measurements/{metricType}/{feedType}/months/{startMonth}/{endMonth}",
                "description": "Returns the energy measurements of the provided metric for every month between the start date and end date provided.",
                "operationId": "v2getEnergyMeasurementsMonths",
                "parameters": [
                    {
                        "name": "metricType",
                        "in": "path",
                        "description": "The metric for which the energy measurements will be returned.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity-offtake",
                                "electricity-feedin",
                                "gas",
                                "electricity-offtake-tier-1",
                                "electricity-offtake-tier-2",
                                "electricity-feedin-tier-1",
                                "electricity-feedin-tier-2"
                            ]
                        }
                    },
                    {
                        "name": "feedType",
                        "in": "path",
                        "description": "The feed type for which the energy measurements will be returned.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "real-time",
                                "smart-meter"
                            ]
                        }
                    },
                    {
                        "name": "startMonth",
                        "in": "path",
                        "description": "The start month from which the energy measurements will be returned in YYYY-MM format. The returned results will be in the timezone of the end-user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endMonth",
                        "in": "path",
                        "description": "The end month until which the energy measurements will be returned in YYYY-MM format. The returned results will be in the timezone of the end-user and will contain all measurements until the end of that day.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEnergyMeasurementResponseDTO"
                                },
                                "examples": {
                                    "GetEnergyMeasurementMonthsExample": {
                                        "$ref": "#/components/examples/GetEnergyMeasurementMonthsExample"
                                    },
                                    "GetEnergyMeasurementWithMissingDataExample": {
                                        "$ref": "#/components/examples/GetEnergyMeasurementWithMissingDataExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>142: Invalid interval. <br/>152: User does not have a valid household object. <br/>153: No valid meter found for user. <br/>422: Invalid energy type. <br/>426: Invalid Date format. <br/>429: No data available.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/consumption/{energyType}/appliances/{periodType}/{periodValue1}/{periodValue2}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/consumption/{energyType}/appliances/{periodType}/{periodValue1}/{periodValue2}",
                "description": "Returns the estimated breakdown of the energy used per hour by appliance category.",
                "operationId": "v2getConsumptionAppliances",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The type of energy.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity",
                                "amr_electricity"
                            ]
                        }
                    },
                    {
                        "name": "periodType",
                        "in": "path",
                        "description": "The type of time scale.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hours",
                                "days",
                                "weeks",
                                "months"
                            ]
                        }
                    },
                    {
                        "name": "periodValue1",
                        "in": "path",
                        "description": "The start date of the data according to the following formats, in case of months: YYYY-MM, in case of weeks: YYYY/Q (quarter), in case of days/hours: YYYY-MM-DD-HH.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "periodValue2",
                        "in": "path",
                        "description": "The end date of the data according to the following formats, in case of months: YYYY-MM, in case of weeks: YYYY/Q (quarter), in case of days/hours: YYYY-MM-DD-HH.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConsumptionAppliancesResponseDTO"
                                },
                                "examples": {
                                    "GetConsumptionAppliancesResponse": {
                                        "$ref": "#/components/examples/GetConsumptionAppliancesResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>142: Invalid Interval<br/>113: Gateway not found.</br>156: User or meter validation failed.<br/>153: No valid meter found for user</br>422: Invalid Energy Type</br>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/consumption/electricity/alwayson/breakdown/{year}/{month}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/consumption/electricity/alwayson/breakdown/{year}/{month}",
                "description": "Returns an estimated breakdown of the AlwaysOn energy used for the requested month and year.",
                "operationId": "v2/getMonthlyAlwaysOnBreakdown",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which data needs to be retrieved. Accepted format is YYYY (2022).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which data needs to be retrieved. Accepted formats for month are numeric representations with 2 digits with leading zeros (08) or without leading zeros (8).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConsumptionAlwaysOnBreakdownResponseDTO"
                                },
                                "examples": {
                                    "ConsumptionAlwaysOnBreakdownExample": {
                                        "$ref": "#/components/examples/ConsumptionAlwaysOnBreakdownExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No Valid Meter found for user.<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/customer/service-type": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/customer/service-type",
                "description": "Returns the information about the service type that is applicable for the installation.",
                "operationId": "v2getCustomerServiceType",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceTypeDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n                <br/>400: Smart-Bridge not found\n                <br/>400: User not provisioned\n                <br/>428: Multiple installations with different service types found\n                <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/datahub/subscription": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/datahub/subscription",
                "description": "Returns which datahub is applicable to the installation. The datahub name returned can be used to identify if a datahub is relevant for the installation.",
                "operationId": "v2getDatahubName",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDatahubSubscriptionResponseDTO"
                                },
                                "examples": {
                                    "DatahubExampleRespnse": {
                                        "$ref": "#/components/examples/DatahubExampleResponse"
                                    },
                                    "NoDatahubExampleRespnse": {
                                        "$ref": "#/components/examples/NoDatahubExampleResponse"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/datahub/mandate": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/datahub/mandate",
                "description": "Returns the status of the user's mandate that is necessary so that NET2GRID can receive energy measurements from the datahub on behalf of the user.",
                "operationId": "v2getDataHubMandate",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MandateResponseDTO"
                                },
                                "examples": {
                                    "GetApprovedMandateWithoutRenewalStatus": {
                                        "$ref": "#/components/examples/GetApprovedMandateWithoutRenewalStatus"
                                    },
                                    "GetApprovedMandateWithRenewalStatus": {
                                        "$ref": "#/components/examples/GetApprovedMandateWithRenewalStatus"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request\n    <br/>422: Multiple Installations are not supported\n    <br/>425: Datahub GET mandate call is disabled\n    <br/>999: Datahub Client generic error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/datahub/mandate",
                "description": "Used to request the creation of a mandate towards the Datahub API for a user.<br/>\n    In case of the Fluvius datahub, the consumer is required to provide consent in the Fluvius portal. Once completed,\n    they can be redirected to the customer's landing page using two predefined return URLs, the success and failure URLs.\n    This endpoint allows the client application to specify these success and failure URLs.<br/>\n    - If none of these URLs is provided then the Label Partner default configurations are going to be used.<br/>\n    - If no URLs are specified in this endpoint and the default URLs are not specified at the Label Partner configuration,\n    then no URLs will be sent to the datahub at all.<br/>\n    - If only one of the URLs is provided in the request, the request will return an error.<br/><br/>\n    Additionally, validation of the URLs is performed to ensure they are valid.<br/>\n    - The validation process checks whether the provided string follows the URL format but does not perform domain\n    validation.<br/>\n    - Fluvius is required to whitelist these URLs for them to be accepted from their end. If a URL is not whitelisted,\n    any request to Fluvius will fail.\n    ",
                "operationId": "v2postDataHubMandate",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDatahubMandateDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MandateCreationResponseDTO"
                                },
                                "examples": {
                                    "Mandate Creation": {
                                        "$ref": "#/components/examples/PostMandateCreation"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request<br/>102: User already active on platform\n    <br/>425: datahub POST mandate call is disabled\n    <br/>434: Create mandate failed by Datahub\n    <br/>435: Either none or both return URLs should be provided\n    <br/>436: Invalid URL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/debug/details-user": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/debug/details-user",
                "description": "Returns details about the user, his households and their meters.",
                "operationId": "getDebugDetailsUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DebugResponseDTO"
                                },
                                "examples": {
                                    "GetDebugDetailsUserExample": {
                                        "$ref": "#/components/examples/GetDebugDetailsUserExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/debug/is-admin": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/debug/is-admin",
                "description": "Returns if the current user is an admin.",
                "operationId": "getDebugIsAdmin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "GetDebugAdminExample": {
                                        "$ref": "#/components/examples/GetDebugAdminExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/disaggregation/year/{year}/week/{week}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/disaggregation/year/{year}/week/{week}",
                "description": "Returns the disaggregation data for the requested week. Weekly disaggregation is available for\n    weeks up to (and excluding) the one we currently are in.",
                "operationId": "v2/getWeeklyDisaggregation",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the disaggregation data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "The week for which the disaggregation data are requested. It needs to be in ISO8601\n    format (Www, e.g. W15).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisaggregationResponseDTO"
                                },
                                "examples": {
                                    "DisaggregationResponseExample": {
                                        "$ref": "#/components/examples/DisaggregationResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n    <br/>113: Gateway not found.\n    <br/>118: An error occurred in the cloud.\n    <br/>120: Unexpected exception while retrieving the report.\n    <br/>122: Corrupted report.\n    <br/>152: User does not have a valid household object.\n    <br/>153: No valid meter found for user.\n    <br/>170: No disaggregation available.\n    <br/>185: Labelpartner not specified for household.\n    <br/>186: Cannot find a profile for this household.\n    <br/>250: Unexpected exception while retrieving tariffs information.\n    <br/>251: No cost calculation available.\n    <br/>252: Tariff agreement not found.\n    <br/>265: Unexpected exception while retrieving customer information.\n    <br/>272: Invalid meter type.\n    <br/>274: Unit conversion not applicable.\n    <br/>400: User not provisioned.\n    <br/>422: Invalid week/year provided.\n    <br/>425: Functionality is not enabled.\n    <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/disaggregation/forecast": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/disaggregation/forecast",
                "description": "Legacy call that returns the disaggregation data for the current month. This call requires that tariff and budget information have been set for the installation on the period of the requested month or earlier.",
                "operationId": "v2getDisaggregationForecast",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisaggregationForecastResponseDTO"
                                },
                                "examples": {
                                    "DisaggregationForecastResponseExample": {
                                        "$ref": "#/components/examples/DisaggregationForecastResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>113: Gateway not found.<br/>152: User does not have a valid household object.<br/>153: No valid meter found for user.<br/>170: No disaggregation available.<br/>184: Profile is incomplete<br/>185: Labelpartner not specified for household.<br/>186: Cannot find a profile for this household.<br/>250: Unexpected exception while retrieving tariffs information.<br/>251: No cost calculation available.<br/>252: Tariff agreement not found.<br/>265: Unexpected exception while retrieving customer information.<br/>272: Invalid meter type.<br/>274: Unit conversion not applicable.<br/>400: User not provisioned.<br/>422: Invalid month/year provided.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/disaggregation/year/{year}/month/{month}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/disaggregation/year/{year}/month/{month}",
                "description": "Returns the disaggregation data for the requested month.\n     When there is no disaggregation available for the requested month yet (for instance on the 1st day of\n     that month), an estimation based on the preceding month’s relative disaggregation distribution (if available)\n     and the requested month’s actual consumption is returned.",
                "operationId": "v2/getMonthlyDisaggregation",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the disaggregation data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which the disaggregation data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisaggregationResponseDTO"
                                },
                                "examples": {
                                    "DisaggregationResponseExample": {
                                        "$ref": "#/components/examples/DisaggregationResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n     <br/>113: Gateway not found.\n     <br/>152: User does not have a valid household object.\n     <br/>153: No valid meter found for user.\n     <br/>170: No disaggregation available.\n     <br/>184: Profile is incomplete\n     <br/>185: Labelpartner not specified for household.\n     <br/>186: Cannot find a profile for this household.\n     <br/>250: Unexpected exception while retrieving tariffs information.\n     <br/>251: No cost calculation available.\n     <br/>252: Tariff agreement not found.\n     <br/>265: Unexpected exception while retrieving customer information.\n     <br/>272: Invalid meter type.\n     <br/>274: Unit conversion not applicable.\n     <br/>400: User not provisioned.\n     <br/>422: Invalid month/year provided.\n     <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/disaggregation/{year}/{month}": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/disaggregation/{year}/{month}",
                "description": "To be deprecated, please use the disaggregation/monthly endpoint. Returns the disaggregation\n     data for the requested month. When there is no disaggregation available for the requested month yet\n     (for instance on the 1st day of that month), an estimation based on the preceding month’s relative disaggregation\n     distribution (if available) and the requested month’s actual consumption is returned.",
                "operationId": "v2/getMonthlyDisaggregation2",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the disaggregation data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which the disaggregation data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisaggregationResponseDTO"
                                },
                                "examples": {
                                    "DisaggregationResponseExample": {
                                        "$ref": "#/components/examples/DisaggregationResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n    <br/>113: Gateway not found.\n    <br/>152: User does not have a valid household object.\n    <br/>153: No valid meter found for user.\n    <br/>170: No disaggregation available.\n    <br/>184: Profile is incomplete\n    <br/>185: Labelpartner not specified for household.\n    <br/>186: Cannot find a profile for this household.\n    <br/>250: Unexpected exception while retrieving tariffs information.\n    <br/>251: No cost calculation available.\n    <br/>252: Tariff agreement not found.\n    <br/>265: Unexpected exception while retrieving customer information.\n    <br/>272: Invalid meter type.\n    <br/>274: Unit conversion not applicable.\n    <br/>400: User not provisioned.\n    <br/>422: Invalid month/year provided.\n    <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/disaggregation/history/{year}/{month}": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/disaggregation/history/{year}/{month}",
                "description": "Legacy endpoint that returns the disaggregation data for the requested month and provides additional information related to the budget that has been defined for that month. When there is no disaggregation available for the requested month yet (for instance on the 1st day of that month), an estimation based on the preceding month’s relative disaggregation distribution (if available) and the requested month’s actual consumption is returned. This call requires that tariff and budget information have been set for the installation on the period of the requested month or earlier.",
                "operationId": "v2getMonthlyDisaggregationWithBudgetForHistoricMonth",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the disaggregation data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which the disaggregation data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisaggregationHistoryResponseDTO"
                                },
                                "examples": {
                                    "DisaggregationHistoryResponseExample": {
                                        "$ref": "#/components/examples/DisaggregationHistoryResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>113: Gateway not found.<br/>152: User does not have a valid household object.<br/>153: No valid meter found for user.<br/>170: No disaggregation available.<br/>184: Profile is incomplete<br/>185: Labelpartner not specified for household.<br/>186: Cannot find a profile for this household.<br/>250: Unexpected exception while retrieving tariffs information.<br/>251: No cost calculation available.<br/>252: Tariff agreement not found.<br/>265: Unexpected exception while retrieving customer information.<br/>272: Invalid meter type.<br/>274: Unit conversion not applicable.<br/>400: User not provisioned.<br/>422: Invalid month/year provided.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/events/hourly/{year}/{month}/{day}/{hour}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/events/hourly/{year}/{month}/{day}/{hour}",
                "description": "Returns the appliance events of the user for the given hour.",
                "operationId": "v2getApplianceEventsForHour",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the appliance events are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which the appliance events are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "day",
                        "in": "path",
                        "description": "The day for which the appliance events are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hour",
                        "in": "path",
                        "description": "The hour for which the appliance events are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsHourlyResponseDTO"
                                },
                                "examples": {
                                    "EventsHourlyResponseExample": {
                                        "$ref": "#/components/examples/EventsHourlyResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>113: Gateway not found.<br/>152: User does not have a valid household object.<br/>153: No valid meter found for user.<br/>185: Labelpartner not specified for household.<br/>186: Cannot find a profile for this household.<br/>250: Unexpected exception while retrieving tariffs information.<br/>251: No cost calculation available.<br/>252: Tariff agreement not found.<br/>265: Unexpected exception while retrieving customer information.<br/>274: Unit conversion not applicable.<br/>400: User not provisioned.<br/>422: Invalid day/month/year provided.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/events/daily/{year}/{month}/{day}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/events/daily/{year}/{month}/{day}",
                "description": "Returns the appliance events of the user for the given day.",
                "operationId": "v2getApplianceEventsForDay",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the appliance events are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which the appliance events are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "day",
                        "in": "path",
                        "description": "The day for which the appliance events are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsDailyResponseDTO"
                                },
                                "examples": {
                                    "EventsDailyResponseExample": {
                                        "$ref": "#/components/examples/EventsDailyResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>113: Gateway not found.<br/>152: User does not have a valid household object.<br/>153: No valid meter found for user.<br/>185: Labelpartner not specified for household.<br/>186: Cannot find a profile for this household.<br/>250: Unexpected exception while retrieving tariffs information.<br/>251: No cost calculation available.<br/>252: Tariff agreement not found.<br/>265: Unexpected exception while retrieving customer information.<br/>274: Unit conversion not applicable.<br/>400: User not provisioned.<br/>422: Invalid day/month/year provided.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/events/summary/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/events/summary/{startDate}/{endDate}",
                "description": "Returns the appliance events summary of the user for the given period.",
                "operationId": "v2getApplianceEventsSummary",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "description": "The start date to calculate the appliance events summary.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "description": "The end date to calculate the appliance events summary.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsSummaryResponseDTO"
                                },
                                "examples": {
                                    "EventsSummaryResponseExample": {
                                        "$ref": "#/components/examples/EventsSummaryResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>113: Gateway not found.<br/>152: User does not have a valid household object.<br/>153: No valid meter found for user.<br/>185: Labelpartner not specified for household.<br/>186: Cannot find a profile for this household.<br/>250: Unexpected exception while retrieving tariffs information.<br/>251: No cost calculation available.<br/>252: Tariff agreement not found.<br/>265: Unexpected exception while retrieving customer information.<br/>274: Unit conversion not applicable.<br/>400: User not provisioned.<br/>422: Invalid day/month/year provided.<br/>426: Invalid date format.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/export": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/export",
                "description": "Asynchronous export of the end-users' PII information. The data will be sent\n           to the account's registered e-mail",
                "operationId": "v2getExport",
                "responses": {
                    "200": {
                        "description": "okResponse",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "acceptedResponse",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "GetExportAcceptedResponse": {
                                        "$ref": "#/components/examples/GetExportAcceptedResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n               <br/>118: Export request email couldn't be sent.\n               <br/>152: User does not have a valid household object.\n               <br/>167: LabelPartner configuration missing.\n               <br/>168: Unexpected exception while sending the email.\n               <br/>185: Labelpartner configuration issues.\n               <br/>210: Registration issues exception.\n               <br/>240: User doesn't have an email address.\n               <br/>265: Unexpected exception while retrieving user information.\n               <br/>293: User not eligible for this action.\n               <br/>400: User not provisioned.\n               <br/>999: Unspecified error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/feedin/{energyType}/daily": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/feedin/{energyType}/daily",
                "description": "Returns the users' total energy fed back into the grid in Watts and it's cost from the start of the current day.",
                "operationId": "v2getFeedinDaily",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The energy type for which the feedin is requested.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity",
                                "amr_electricity"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedinDailyResponseDTO"
                                },
                                "examples": {
                                    "GetFeedinDailyExample": {
                                        "$ref": "#/components/examples/GetFeedinDailyExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>143: Could not find the requested summation for this energy meter.<br/>152: User does not have a valid household object.<br/>153: No valid meter found for user.<br/>251: Error while calculating cost: Tariffs not specified for this period for this household.<br/>422: Invalid energy type.<br/>999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/feedin/{energyType}/{periodType}/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/feedin/{energyType}/{periodType}/{startDate}/{endDate}",
                "description": "Returns the current summation received for the specified period, and period type.",
                "operationId": "v2getFeedinForPeriod",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The type of energy.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity",
                                "amr_electricity"
                            ]
                        }
                    },
                    {
                        "name": "periodType",
                        "in": "path",
                        "description": "The period type for the data.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "quarter-hours",
                                "hours",
                                "days",
                                "months"
                            ]
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "path",
                        "description": "The start date of the period for the data (in Y-m-d)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "2022-11-01"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "description": "The end date of the period for the data (in Y-m-d)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "2022-11-02"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFeedinDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>142: Invalid interval<br/>153: No valid meter found for user<br/>422: Invalid energy type<br/>426: Invalid Date format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/feedin/{energyType}/compare/{periodType}": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/feedin/{energyType}/compare/{periodType}",
                "description": "Compares the feedin of the current and previous month.",
                "operationId": "v2getCompareFeedinPeriod",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The energy type for which the comparison is requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "periodType",
                        "in": "path",
                        "description": "The type of period for which the comparison is requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConsumptionCompareResponseDTO"
                                },
                                "examples": {
                                    "GetFeedinCompareExample": {
                                        "$ref": "#/components/examples/GetFeedinCompareExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>143: Could not find the requested summation for this energy meter. <br/>152: User does not have a valid household object. <br/>153: No valid meter found for user. <br/>251: Error while calculating cost: Tariffs not specified for household with id 37 for this period. <br/>422: Invalid energy type. <br/>426: Invalid Date format. <br/>999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/feedtype": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/feedtype",
                "description": "Returns the existing meters of a user.",
                "operationId": "v2getFeedtype",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFeedtypeResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>152: User does not have a valid household object\n               <br/>153: No valid meter found for user\n               <br/>272: Invalid meter type\n               <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/firmware/approve-immediate-update": {
            "post": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/firmware/approve-immediate-update",
                "description": "It is used to approve immediate\n    update available on firmware of the user's device.",
                "operationId": "v2postFirmwareApproveImmediateUpdate",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.\n    <br/>281: Gateway failed to initiate firmware immediate update.<br/>999: Unspecified error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/homestate/config": {
            "get": {
                "tags": [
                    "Edge Analytics and Alerts"
                ],
                "summary": "/homestate/config",
                "description": "Returns the automatically calculated power thresholds that segregate the household's activity level into activity zones, along with the last time when the household was identified in the Hyper Active zone. These ranges are used by the Smart Bridge to report the current zone at any given time.",
                "operationId": "v2getHomestateConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HomestateConfigResponseDTO"
                                },
                                "examples": {
                                    "Homestate Config": {
                                        "$ref": "#/components/examples/GetHomestateConfig"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user\n    <br/>290: Current home state not found\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/homestate/current": {
            "get": {
                "tags": [
                    "Edge Analytics and Alerts"
                ],
                "summary": "/homestate/current",
                "description": "Returns the current household's zone along with the timestamp when it first entered that zone.",
                "operationId": "v2getHomestateCurrent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HomestateCurrentResponseDTO"
                                },
                                "examples": {
                                    "Homestate Current": {
                                        "$ref": "#/components/examples/GetHomestateCurrent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user\n    <br/>290: Current home state not found\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/initialisation": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/initialisation",
                "description": "Returns the initialisation data of the user",
                "operationId": "v2getInitialization",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInitialisationResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>125: User not yet onboarded\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/insights/year/{year}/month/{month}": {
            "get": {
                "tags": [
                    "Energy Insights"
                ],
                "summary": "/insights/year/{year}/month/{month}",
                "description": "This endpoint provides personalized insights to the end-user that can incentivize meaningful\n     actions, targeting the reduction of energy consumption. It contains a comparative overview of the household’s\n     appliances, activities and the overall consumption for the past month. <br/><br/>The consumption comparison is\n     performed at the appliance or activity level and consists of two types: the self and peer comparison.\n    <br/><br/>1. In the self comparison, each category's consumption is compared with the own historical consumption.\n    <br/>2. In the peer comparison, each category's consumption is compared with the consumption of other installations\n     with similar profile characteristics. <br/><br/>Also there can be different insights based on the Time-of-Use:\n    <br/>1. Peak insights consider only the consumption for a category during the Peak Hours regarding the tariff of\n    the day/month <br/>2. Total insights consider the total consumption for a category during the whole day/month.",
                "operationId": "v2/getMonthlyInsights",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the user's insights data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which the user's insights data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsightResponseDTO"
                                },
                                "examples": {
                                    "InsightResponseExample": {
                                        "$ref": "#/components/examples/InsightResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request\n     <br/>191: Document error\n     <br/>195: No insight available.\n     <br/>422: Invalid input: year is not correct/month is not correct, must be between 0 and 12.\n     <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/insights/{year}/{month}": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/insights/{year}/{month}",
                "description": "This endpoint provides personalized insights to the end-user that can incentivize meaningful\n    actions, targeting the reduction of energy consumption. It contains a comparative overview of the household’s\n    appliances, activities and the overall consumption for the past month. <br/><br/>The consumption comparison is\n    performed at the appliance or activity level and consists of two types: the self and peer comparison.\n    <br/><br/>1. In the self comparison, each category's consumption is compared with the own historical consumption.\n    <br/>2. In the peer comparison, each category's consumption is compared with the consumption of other installations\n    with similar profile characteristics. <br/><br/>Also there can be different insights based on the Time-of-Use:\n    <br/>1. Peak insights consider only the consumption for a category during the Peak Hours regarding the tariff of\n    the day/month <br/>2. Total insights consider the total consumption for a category during the whole day/month.",
                "operationId": "v2/getMonthlyInsights2",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the user's insights data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month for which the user's insights data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsightResponseDTO"
                                },
                                "examples": {
                                    "InsightResponseExample": {
                                        "$ref": "#/components/examples/InsightResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request\n    <br/>191: Document error\n    <br/>195: No insight available.\n    <br/>422: Invalid input: year is not correct/month is not correct, must be between 0 and 12.\n    <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/insights/year/{year}/week/{week}": {
            "get": {
                "tags": [
                    "Energy Insights"
                ],
                "summary": "/insights/year/{year}/week/{week}",
                "description": "This endpoint provides personalized insights to the end-user that can incentivize\n     meaningful actions, targeting the reduction of energy consumption. It contains a comparative overview\n     of the household’s appliances, activities and the overall consumption for the specified week.\n     <br/><br/>The consumption comparison is performed at the appliance or activity level and consists of two types:\n     the self and peer comparison. <br/><br/>1. In the self comparison, each category's consumption is compared with\n     the own historical consumption. <br/>2. In the peer comparison, each category's consumption is compared with the\n     consumption of other installations with similar profile characteristics. <br/><br/>Also there can be different\n     insights based on the Time-of-Use: <br/>1. Peak insights consider only the consumption for a category during the\n     Peak Hours regarding the tariff of the day/month <br/>2. Total insights consider the total consumption for a\n     category during the whole day/month.",
                "operationId": "v2/getWeeklyInsights",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the user's insights data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "The week for which the user's insights data are requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsightResponseDTO"
                                },
                                "examples": {
                                    "InsightResponseExample": {
                                        "$ref": "#/components/examples/InsightResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request\n     <br/>118: Issue with AWS connection.\n     <br/>120: Issue with analytics integration service.\n     <br/>153: No valid meter found for user.\n     <br/>191: Document error.\n     <br/>195: No insight available.\n     <br/>265: Unexpected exception while retrieving customer information.\n     <br/>400: User not provisioned.\n     <br/>422: Invalid input: year is not correct/month is not correct, must be between 0 and 12.\n     <br/>425: Endpoint is disabled.\n     <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/installations": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/installations",
                "description": "Returns a list with all the installations of the end-user",
                "operationId": "v2getInstallations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstallationsSelectionResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/installation/{externalInstallationId}/label": {
            "put": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/installation/{externalInstallationId}/label",
                "description": "Sets a user-defined label name for the provided installation. This label serves as a customizable name assigned by the user to easily identify and manage their installations within the App.",
                "operationId": "v2putLabel",
                "parameters": [
                    {
                        "name": "externalInstallationId",
                        "in": "path",
                        "description": "The external installation id of the installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutLabelNameDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n    <br/>422: Invalid input\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/primary-installation": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/primary-installation",
                "description": "Returns the primary installation selected for the end-user",
                "operationId": "v2getPrimaryInstallation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPrimaryInstallationResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/installation/{externalInstallationId}/primary-installation": {
            "put": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/installation/{externalInstallationId}/primary-installation",
                "description": "Sets the provided installation as the primary installation for the end-user",
                "operationId": "v2putPrimaryInstallation",
                "parameters": [
                    {
                        "name": "externalInstallationId",
                        "in": "path",
                        "description": "The external installation id of the installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/instantaneous": {
            "get": {
                "tags": [
                    "Energy Measurements"
                ],
                "summary": "/instantaneous",
                "description": "Returns users' instantaneous demand data. In case of no electricity/gas meter present, the block for that specific result will be empty.",
                "operationId": "v2getInstantaneousDemand",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstantaneousDemandResponseDTO"
                                },
                                "examples": {
                                    "GetInstantaneousExample": {
                                        "$ref": "#/components/examples/GetInstantaneousExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>142: Invalid interval. <br/>143: Could not find the requested summation for this energy meter. <br/>152: User does not have a valid household object. <br/>153: No valid meter found for user <br/>155: Action not supported by current Report Mode. <br/>275: Result set not found. <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/instantaneous/power/{startDate}/{endDate}/{interval}/{max}": {
            "get": {
                "tags": [
                    "Energy Measurements"
                ],
                "summary": "/instantaneous/power/{startDate}/{endDate}/{interval}/{max}",
                "description": "The request to get the users' instantaneous power data for a certain date-time range and sample rate for meters reporting high resolution measurements. The interval determines the sample rate. When the combination of date range and interval leads to more than 8640 values, the start of the date range is adjusted to stay within this limit of 8640. This allows for 10s samples for 24 hours, or over 2 hours of 1s samples. Please note that even 8640 results requires gathering and sending a substantial amount of data (430kB) that takes noticeable time, so it is wise to keep the requested range as small as possible.\n           Additionally, it is recommended to follow these guidelines:<br>\n           1. When retrieving data for a historical period, ensure that the interval is a multiple of 60 seconds.<br>\n           2. Start and end dates should be in the format YYYY-M-DTHH:MM:00 (with seconds set to 0). Otherwise, the start time will be rounded down, and the end time will be rounded up to the nearest time with minute precision.",
                "operationId": "v2getInstantaneousPower",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "description": "The start date of the data. The format is YYYY-M-DTHH:MM:SS.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2021-08-01T00:00:00"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "description": "The end date of the data. The format is YYYY-M-DTHH:MM:S.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2022-08-05T00:00:00"
                    },
                    {
                        "name": "interval",
                        "in": "path",
                        "description": "The interval with which to display the data in seconds.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "max",
                        "in": "path",
                        "description": "When the string max is added as the last parameter, the maximum value for each interval is returned instead of the average value.<br/> If this parameter is not set, the maximum and minimum instantaneous demand delivered in the last 24 hours is also returned.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstantaneousPowerResponseDTO"
                                },
                                "examples": {
                                    "GetInstantaneousPowerExample": {
                                        "$ref": "#/components/examples/GetInstantaneousPowerExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "152: User does not have a valid household object. <br/>153: No valid meter found for user. <br/>422: Invalid energy type. <br/>426: Invalid Date format. <br/>999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/instantaneous/appliances": {
            "get": {
                "tags": [
                    "Edge Analytics and Alerts"
                ],
                "summary": "/instantaneous/appliances",
                "description": "Returns users' instantaneous demand data for each application. In case of no electricity/gas meter present, the block for that specific result will be empty.",
                "operationId": "v2/getInstantaneousDemandAndAppliances",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstantaneousAppliancesResponseDTO"
                                },
                                "examples": {
                                    "GetInstantaneousAppliancesExample": {
                                        "$ref": "#/components/examples/GetInstantaneousAppliancesExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>142: Invalid interval. <br/>143: Could not find the requested summation for this energy meter. Invalid interval. <br/>152: User does not have a valid household object. <br/>153: No valid meter found for user <br/>155: Action not supported by current Report Mode. <br/>275: Result set not found. <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/instantaneous/phases/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Energy Measurements"
                ],
                "summary": "/instantaneous/phases/{startDate}/{endDate}",
                "description": "The request to get the total and per phase Instantaneous demand delivered for a requested date range.",
                "operationId": "v2getTotalAndPhaseIDDForPeriod",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "description": "The start date of the data, the format of the date must be YYYY-MM-DD.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "description": "The end date of the data, the format of the date must be YYYY-MM-DD.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstantaneousPhasesResponseDTO"
                                },
                                "examples": {
                                    "GetInstantaneousPhasesIDD": {
                                        "$ref": "#/components/examples/GetInstantaneousPhasesIDD"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>152: User does not have a valid household object</br>153: No valid meter found for user</br>155: Action not supported by current Report Mode</br>275: Result set not found</br>422: Invalid Input<br/>426: Invalid Date Format<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/lan/token": {
            "get": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/lan/token",
                "description": "Returns the regular user token that is needed for calls to the gateway using the LAN API",
                "operationId": "v2getLanToken",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanTokenResponseDTO"
                                },
                                "examples": {
                                    "GetUserLanApiTokenExample": {
                                        "$ref": "#/components/examples/GetUserLanApiTokenExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.\n     <br/>999: Unspecified error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/meter/info": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/meter/info",
                "description": "This endpoint returns the meter readings of a smart meter along with the meter serial number.",
                "operationId": "v2getMeterInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeterInfoResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>152: User does not have a valid household object.\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/meter/status": {
            "get": {
                "tags": [
                    "Registration"
                ],
                "summary": "/meter/status",
                "description": "Returns the last known smart meter connection status and connection progress.",
                "operationId": "v2getMeterStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeterStatusResponseDTO"
                                },
                                "examples": {
                                    "GetMeterStatusResponse": {
                                        "$ref": "#/components/examples/GetMeterStatusResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request\n\n153: No valid meter/household  found for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/meter/connect": {
            "put": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/meter/connect",
                "description": "Updates the meter provisioning data of the user and then initiates a connection to the meter.<br/>\n               1) Uses the provided pincode in the request body, if present, and also provisions it in the backend<br/>\n               2) If pincode is not provided in the request body, uses the provisioned one <br/>\n               3) If there is no commissioned optical reader and there is an optical reader in the vicinity that reports the provisioned serial number, initiates the commissioning process<br/>",
                "operationId": "v2putMeterConnect",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeterAuthRequestDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>265: Customer Service Generic Exception<br/>281: Gateway failed to pair a smart reader using the provided Serial Number<br/>400: Resource not found<br/>422: Invalid meter key data provided or there is no meter key data already assigned to the user (if not provided in the request body).<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/meterreader/status": {
            "get": {
                "tags": [
                    "Registration"
                ],
                "summary": "/meterreader/status",
                "description": "Returns the meter reader type and the connection of the meter with the meter reader.",
                "operationId": "v2getMeterReaderStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/MeterReaderStatusSmartReaderResponseDTO"
                                        },
                                        {
                                            "$ref": "#/components/schemas/MeterReaderStatusMedaResponseDTO"
                                        }
                                    ]
                                },
                                "examples": {
                                    "GetMeterReaderStatusSmartReaderResponse": {
                                        "$ref": "#/components/examples/GetMeterReaderStatusSmartReaderResponse"
                                    },
                                    "GetMeterReaderStatusMedaResponse": {
                                        "$ref": "#/components/examples/GetMeterReaderStatusMedaResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>152: User does not have a valid household object.<br/>153: No valid meter found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/opticalsmartbridge/status": {
            "get": {
                "tags": [
                    "Registration"
                ],
                "summary": "/opticalsmartbridge/status",
                "description": "Returns information about the connection between a SmartBridge and a smart meter, given the fact that they are connected directly using an optical probe.",
                "operationId": "v2getOpticalSmartbridgeStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpticalSmartbridgeStatusResponseDTO"
                                },
                                "examples": {
                                    "GetOpticalSmartbridgeStatusResponse": {
                                        "$ref": "#/components/examples/GetOpticalSmartbridgeStatusResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<br/>152: User does not have a valid household object.<br/>153: No valid meter found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/meterreader/commission": {
            "put": {
                "tags": [
                    "Registration"
                ],
                "summary": "/meterreader/commission",
                "description": "Initiates the connection between a smart bridge (gateway) and a smart reader, mandating the smart bridge to connect to the smart meter with the specified MAC address. The connection will fail if the smart reader has not previously been detected by the smart bridge, so it is important that the reader has been powered up and is within range before calling this endpoint.",
                "operationId": "v2putmeterreadercommission",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeterReaderCommissionRequestDTO"
                            },
                            "examples": {
                                "MeterReaderCommission": {
                                    "$ref": "#/components/examples/MeterReaderCommission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request<br/>\n    153: No valid meter found for user<br/>\n    265: Customer Service Generic Exception<br/>\n    281: Unable to Send Command Exception<br/>\n    400: User not provisioned<br/>\n    405: Gateway is off-line<br/>\n    408: Gateway Connection Exception<br/>\n    422: Invalid Input Exception<br/>\n    424: MAC Address is required<br/>\n    999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/metric/range/{energyType}/{phase}/{metricType}": {
            "get": {
                "tags": [
                    "Energy Measurements"
                ],
                "summary": "/metric/range/{energyType}/{phase}/{metricType}",
                "description": "Returns the first and last measurements of a time series for a provided energy type, phase, and metric type.",
                "operationId": "v2getFirstLastValues",
                "parameters": [
                    {
                        "name": "energyType",
                        "in": "path",
                        "description": "The type of energy for which the call is performed.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electricity",
                                "gas",
                                "amr_electricity",
                                "amr_gas"
                            ]
                        }
                    },
                    {
                        "name": "phase",
                        "in": "path",
                        "description": "The selected phase.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mains",
                                "1",
                                "2",
                                "3"
                            ]
                        }
                    },
                    {
                        "name": "metricType",
                        "in": "path",
                        "description": "The type of metric.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "consumption",
                                "consumption-tier-1",
                                "consumption-tier-2",
                                "instantaneous",
                                "feedin",
                                "feedin-tier-1",
                                "feedin-tier-2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FirstLastValuesResponseDTO"
                                },
                                "examples": {
                                    "GetFirstLastValuesExample": {
                                        "$ref": "#/components/examples/GetFirstLastValuesExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": " <br/>152: User does not have a valid household object. <br/>153: No valid meter found for user. <br/>422: Invalid phase/energy/metric type. <br/>429: Metric not found for energy type.  <br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/mfa/status": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/mfa/status",
                "description": "Returns whether MFA is enabled or not for user.",
                "operationId": "v2getMFAStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MFAStatusResponseDTO"
                                },
                                "examples": {
                                    "MFAStatusResponse": {
                                        "$ref": "#/components/examples/MFAStatusResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "999: Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/mfa/enable": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/mfa/enable",
                "description": "Initiates the process to enable MFA for a user. Returns a secret code. The App can display the secret code as text or translate it to a QR code, in order to be used by the authenticator app.",
                "operationId": "v2postMFAEnable",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecretCodeResponseDTO"
                                },
                                "examples": {
                                    "SecretCodeResponse": {
                                        "$ref": "#/components/examples/SecretCodeResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "430: Mfa is not supported for this user<br/>999: Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/mfa/disable": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/mfa/disable",
                "description": "Disables MFA for user.",
                "operationId": "v2postMFADisable",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/mfa/verify-software-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/mfa/verify-software-token",
                "description": "Verifies the software token returned from the authenticator app. If the provided software token is the correct one, then MFA is set for this user.",
                "operationId": "v2postMFAVerifyToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCodeDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "422: Invalid input: User_code is required<br/>424: User code should have a length of 6<br/>431: User code provided is expired or incorrect<br/>999: Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/migrate/user": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/migrate/user",
                "description": "Migrate users from pincode to password and register them into cognito user pools.",
                "operationId": "v2postMigrateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MigrateUserBodyDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n                <br/>264: New password not valid\n                <br/>278: Invalid credentials\n                <br/>279: Passwords should be identical\n                <br/>422: Invalid input\n                <br/>424: Invalid email address fromat\n                <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/nilm/status": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/nilm/status",
                "description": "Returns the most recently available training status of NILM service.",
                "operationId": "v2getNILMStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NilmStatusReportResponseDTO"
                                },
                                "examples": {
                                    "getNilmStatusResponse": {
                                        "$ref": "#/components/examples/getNilmStatusResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>999: No NILM status report found for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/channel/enable": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/channel/enable",
                "description": "Enables notifications for the device on specified channel. A channel is the designated delivery method be it inbox, push notification or email.",
                "operationId": "v2/putNotificationChannelEnable",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutChannelEnableDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>160: Unable to enable push<br/>165: PUSH_NOTIFICATIONS_NOT_SUPPORTED<br/>422: Invalid input<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/channel/disable": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/channel/disable",
                "description": "Disables notifications for the device on specified channel. A channel is the designated delivery method be it inbox, push notification or email. Inbox notifications cannot be disabled.",
                "operationId": "v2/putNotificationChannelDisable",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutChannelDisableDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>166: Unable to disable push notifications<br/>422: Invalid input<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/channel/mute_topic": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/channel/mute_topic",
                "description": "Mutes a topic for a specified channel. Within a channel, topics are use to distinguish between separate notification needs (for instance  ‘reminders’, ‘news’, ‘warning’, etc). Using this call, a specific topic can be muted for a specific channel. Notifications need to be enabled first.",
                "operationId": "v2/putNotificationTopicMute",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TopicBodyDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>162: Unable to mute topic<br/>422: Invalid input<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/channel/unmute_topic": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/channel/unmute_topic",
                "description": "Unmutes a topic for a specified channel.Within a channel, topics are use to distinguish between separate notification needs (for instance  ‘reminders’, ‘news’, ‘warning’, etc). Using this call, a specific topic can be muted for a specific channel. Notifications need to be enabled and a topic needs to be muted first.",
                "operationId": "v2/putNotificationTopicUnmute",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TopicBodyDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>163: Unable to unmute topic<br/>422: Invalid input<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/channel/status/{channelType}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/channel/status/{channelType}",
                "description": "Returns information on whether notifications are enabled and all topics that have been muted for the specified channel.",
                "operationId": "v2/getNotificationChannelStatus",
                "parameters": [
                    {
                        "name": "channelType",
                        "in": "path",
                        "description": "The type of channel that needs to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "INBOX",
                                "MOBILE_PUSH",
                                "EMAIL",
                                "REST"
                            ]
                        }
                    },
                    {
                        "name": "device_id",
                        "in": "query",
                        "description": "The device id of the user’s device. It is required and used only for MOBILE_PUSH channels.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChannelStatusResponseDTO"
                                },
                                "examples": {
                                    "GetChannelExample": {
                                        "$ref": "#/components/examples/GetChannelExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>164: Unable to get channel status (unknown channel type, recipient not found)<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/push/check/{device_id}/{channel}": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/notification/push/check/{device_id}/{channelType}",
                "description": "Checks if notifications are enabled for this device.",
                "operationId": "getPushNotificationStatus",
                "parameters": [
                    {
                        "name": "channel",
                        "in": "path",
                        "description": "Defaults to MOBILE_PUSH regardless being provided.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device_id",
                        "in": "path",
                        "description": "The device id of the user’s device.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPushCheckResponseDTO"
                                },
                                "examples": {
                                    "GetPushStatusExample": {
                                        "$ref": "#/components/examples/GetPushStatusExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/push/check/{device_id}": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/push/check/{device_id}",
                "description": "The deprecated route of the call that checks if notifications are enabled for this device.",
                "operationId": "getPushCheckDeviceId",
                "parameters": [
                    {
                        "name": "device_id",
                        "in": "path",
                        "description": "The device id of the user’s device.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPushCheckResponseDTO"
                                },
                                "examples": {
                                    "GetPushStatusExample": {
                                        "$ref": "#/components/examples/GetPushStatusExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/push/enable": {
            "put": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/push/enable",
                "description": "Enables push notifications for the specified device.",
                "operationId": "v2/putPushEnable",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutChannelEnableDTO"
                            },
                            "examples": {
                                "PutPushEnableExample": {
                                    "$ref": "#/components/examples/PutPushEnableExample"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n                <br/>160: Unable to enable push notifications\n                <br/>165: PUSH_NOTIFICATIONS_NOT_SUPPORTED\n                <br/>422: Invalid input\n                <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/push/disable": {
            "put": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/push/disable",
                "description": " Disables push notifications for the device.",
                "operationId": "v2/putPushDisable",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutChannelDisableDTO"
                            },
                            "examples": {
                                "PutPushDisableExample": {
                                    "$ref": "#/components/examples/PutPushDisableExample"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n                 <br/>161: Unable to disable push\n                 <br/>422: Invalid input: 'device_id' can't be null\n                 <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/push": {
            "post": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/notification/push",
                "description": "Used to test push notifications. Sends the specified notification to all enabled channels.",
                "operationId": "v2postNotificationPush",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostNotificationPushBodyDTO"
                            },
                            "examples": {
                                "NotificationPushExampleNoGatewayEui": {
                                    "$ref": "#/components/examples/NotificationPushExampleNoGatewayEui"
                                },
                                "NotificationPushExampleWithGatewayEui": {
                                    "$ref": "#/components/examples/NotificationPushExampleWithGatewayEui"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n               <br/>223: Not a valid answer\n               <br/>422: Invalid input: missing attributes (code)\n               <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/dispatch": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/dispatch",
                "description": "Test call to send notifications. This call should only be used to test notifications. When this call is triggered it is expected that the user will receive the relevant notification in all eligible channels that have been enabled.",
                "operationId": "v2/postTestNotification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDispatchNotificationBodyDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>223: Not a valid answer<br/>422: Invalid input<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/messages": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/messages",
                "description": "Get the users' messages.",
                "operationId": "v2/getInboxMessages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMessagesResponseDTO"
                                },
                                "examples": {
                                    "GetMessagesExample": {
                                        "$ref": "#/components/examples/GetMessagesExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>400: Resource not found<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/{inboxNotificationId}/read": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/{inboxNotificationId}/read",
                "description": "Set the specific message as having been read.",
                "operationId": "v2/putInboxMessagesRead",
                "parameters": [
                    {
                        "name": "inboxNotificationId",
                        "in": "path",
                        "description": "The id of the specific message that has to be marked as read.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>400: Resource not found<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/{inboxNotificationId}/unread": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/{inboxNotificationId}/unread",
                "description": "Set the specific message as not having been read.",
                "operationId": "v2/putInboxMessagesUnread",
                "parameters": [
                    {
                        "name": "inboxNotificationId",
                        "in": "path",
                        "description": "The id of the specific message that has to be marked as not read.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>400: Resource not found<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/{inboxNotificationId}/delete": {
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/{inboxNotificationId}/delete",
                "description": "Set the specific message as having been deleted.",
                "operationId": "v2/deleteInboxMessage",
                "parameters": [
                    {
                        "name": "inboxNotificationId",
                        "in": "path",
                        "description": "The id of the specific message that has to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>400: Resource not found<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/notification/stop-repetitive-alarm": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "/notification/stop-repetitive-alarm",
                "description": "Stop recurring notifications for the given notification code.",
                "operationId": "v2/putNotificationStopRepetitiveAlarm",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StopRepetitiveAlarmDTO"
                            },
                            "examples": {
                                "StopRepetitiveAlarmExample": {
                                    "$ref": "#/components/examples/StopRepetitiveAlarmExample"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n    123: Notification recipient not found.<br/>\n    156: User or meter validation failed.<br/>\n    168: Unexpected exception in notification service client.<br/>\n    999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/optin/{operationCode}": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/optin/{operationCode}",
                "description": "Returns the opt-in value of the provided {operationCode}. This GET call accepts the ‘TRACKING’ and ‘ANALYTICS’ operations. The ‘TRACKING’ operation is intended to retrieve the value for the Google Analytics opt in. The ‘ANALYTICS’ operation is intended to retrieve the value for the data anlytics opt in.",
                "operationId": "v2getOptinOperationCode",
                "parameters": [
                    {
                        "name": "operationCode",
                        "in": "path",
                        "description": "The code of the operation. The supported codes are 'TRACKING' and 'ANALYTICS'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OptinStatusResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n                            <br/>422:Error retrieving value for tracking operation.\n                            <br/>422:Operation provided is not supported.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/optin/{operationCode}",
                "description": "Sets the opt-in value of the provided {operationCode}. This PUT call accepts the ‘TRACKING’ and ‘ANALYTICS’ operations. The ‘TRACKING’ operation is intended to store the value for the Google Analytics opt in. The ‘ANALYTICS’ operation is intended to store the value for the data anlytics opt in.",
                "operationId": "v2putOptinOperationCode",
                "parameters": [
                    {
                        "name": "operationCode",
                        "in": "path",
                        "description": "The code of the operation. The supported codes are 'TRACKING' and 'ANALYTICS'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutOptinStatusDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n     *                      <br/>112:Failed to perform opt in tracking operation.\n     *                      <br/>422:Invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/plug/relay": {
            "get": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/plug/relay",
                "description": "This endpoint returns the state of the relay button of the Smart Plug.\n     It is applicable only to gateways with Smart Plug functionality like SPLR4911.\n     These devices can measure and/or control the load of an appliance\n     that is directly connected to it's integrated schuko socket.",
                "operationId": "v2getPlugRelay",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPlugRelayResponseDTO"
                                },
                                "examples": {
                                    "GetPlugRelayExample": {
                                        "$ref": "#/components/examples/GetPlugRelayExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request <br/>152: User does not have a valid household object.\n     <br/>153: No valid meter found for user.<br/>270: The gateway doesn't support this command.\n     <br/>999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/plug/relay",
                "description": "This endpoint controls the relay button of the Smart Plug. It is applicable only to gateways\n     with Smart Plug functionality like SPLR4911. These devices can measure and/or control the load of an appliance\n     that is directly connected to it's integrated schuko socket",
                "operationId": "v2putPlugRelay",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlugRelayRequestDTO"
                            },
                            "examples": {
                                "PutPlugRelayRequest": {
                                    "$ref": "#/components/examples/PutPlugRelayRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request <br/>153: No valid meter found for user.\n     <br/>271: Unable to perform switch.<br/>999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/power-thresholds/config": {
            "get": {
                "tags": [
                    "Edge Analytics and Alerts"
                ],
                "summary": "/power-thresholds/config",
                "description": "Returns the power thresholds that the user has previously set if:\n1. the power thresholds functionality has been enabled for the platform or labelpartner of the user.\n2. a NET2GRID device is connected to the user’s account and the device is online.\n\nNote: The hardware device may not be able to update immediately.\nIt can take a few seconds until changes are visible by this call.",
                "operationId": "v2/getPowerThresholdsConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PowerThresholdsConfigResponseDTO"
                                },
                                "examples": {
                                    "GetPowerThresholdsConfigExample": {
                                        "$ref": "#/components/examples/GetPowerThresholdsConfigExample"
                                    },
                                    "GetPowerThresholdsConfigExampleWithDisabledThreshold": {
                                        "$ref": "#/components/examples/GetPowerThresholdsConfigExampleWithDisabledThreshold"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n110: Unable to get capacity peak/power thresholds because the gateway is offline and cached value duration expired.<br/>\n116: Firmware version is not updated to support setting capacity peak/power thresholds.<br/>\n152: User does not have a valid household object.<br/>\n153: No valid meter found for user.<br/>\n185: Default labelpartner not configured properly/Default labelpartner could not be found.<br/>\n425: Real time power alerts are disabled.<br/>\n437: Power thresholds are not available right now.<br/>\n999: Unable to read power thresholds.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Edge Analytics and Alerts"
                ],
                "summary": "/power-thresholds/config",
                "description": "Sets power thresholds for an electricity meter to alert the end user when exceeded.\nTo successfully set the power thresholds configuration, it is required that:\n1. the power thresholds functionality has been enabled for the platform or labelpartner of the user.\n2. a NET2GRID device is connected to the user’s account and the device is online.\n\nThis API call has a cooldown period of 5 seconds before the user is able to execute it again.\n\nNote: The hardware device may not be able to store the value immediately.\nIt can take a few seconds until the new power thresholds configuration is visible.",
                "operationId": "v2/putPowerThresholdsConfig",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetPowerThresholdsConfigDTO"
                            },
                            "examples": {
                                "PutPowerThresholdsConfigExample": {
                                    "$ref": "#/components/examples/PutPowerThresholdsConfigExample"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>\n110: Unable to get capacity peak/power threshold because gateway is offline and cached value duration expired.<br/>\n116: Firmware Version is not updated to support setting capacity peak/power thresholds.<br/>\n117: Gateway is processing the last configuration. Please try again in a few seconds.<br/>\n152: User does not have a valid household object.<br/>\n153: No valid meter found for user.<br/>\n185: Default labelpartner not configured properly/Default labelpartner could not be found.<br/>\n422: Invalid input.<br/>\n425: Real time power alerts are disabled.<br/>\n437: Power thresholds are not available right now.<br/>\n999: Unspecified error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/profile": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/profile",
                "description": "Returns the tariff and budget information of the user. Tariff values returned are expected to have up to 6 decimal digits.",
                "operationId": "v2getTariffAndBudgetProfile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProfileResponseDTO"
                                },
                                "examples": {
                                    "GetProfileExample": {
                                        "$ref": "#/components/examples/GetProfileExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>113: Gateway not found<br/>250: Unexpected exception while retrieving tariffs information<br/>252: Tariff agreement not found<br/>259: Unable to retrieve tariff definition for user's tariff agreement<br/>265: Unexpected exception while retrieving customer information<br/>400: User not provisioned<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/profile",
                "description": "Sets the budget and tariff information of the user.",
                "operationId": "v2postTariffAndBudgetProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostProfileBodyDTO"
                            },
                            "examples": {
                                "PostProfileExample": {
                                    "$ref": "#/components/examples/PostProfileExample"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostProfileBodyDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>113: Gateway not found<br/>152: User does not have a valid household object<br/>184: Profile is incomplete<br/>185: Labelpartner not specified for household<br/>186: Cannot find a profile for this household<br/>250: Unexpected exception while retrieving tariffs information<br/>252: Tariff agreement not found<br/>253: Energy meter could not be associated with user's tariff agreement<br/>254: Unable to add budget definition to user's tariff agreement<br/>259: Unable to retrieve tariff definition for user's tariff agreement<br/>265: Unexpected exception while retrieving customer information<br/>400: User not provisioned<br/>422: Invalid input<br/>425: Post profile call is disabled<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/billing/budget-definition": {
            "get": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/billing/budget-definition",
                "description": "Returns the budget definition of the user that is applicable at the time of the request.",
                "operationId": "v2getBudgetDefinition",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBudgetDefinitionResponseDTO"
                                },
                                "examples": {
                                    "GetBudgetDefinitionExample": {
                                        "$ref": "#/components/examples/GetBudgetDefinitionExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>152: User does not have a valid household object<br/>250: Unexpected exception while retrieving tariffs information.<br/>265: Unexpected exception while retrieving customer information.<br/>269: No budget set for the moment for household object.<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/billing/budget-definition",
                "description": "Defines the budget definition of the user.",
                "operationId": "v2postBudgetDefinition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostBudgetDefinitionRequestDTO"
                            },
                            "examples": {
                                "PostBudgetDefinitionExample": {
                                    "$ref": "#/components/examples/PostBudgetDefinitionExample"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>152: User does not have a valid household object<br/>185: Labelpartner not specified for household<br/>186: Cannot find a profile for this household<br/>250: Unexpected exception while retrieving tariffs information<br/>265: Unexpected exception while retrieving customer information<br/>422: Electricity monthly budget is not provided<br/>425: This call has been disabled for the user.<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/billing/tariff-definition": {
            "get": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/billing/tariff-definition",
                "description": "Returns the tariff definition of the user that is applicable at the time of the request.",
                "operationId": "v2getTariffDefinition",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTariffDefinitionResponseDTO"
                                },
                                "examples": {
                                    "GetTariffDefinitionExample": {
                                        "$ref": "#/components/examples/GetTariffDefinitionExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>152: User does not have a valid household object<br/>250: Unexpected exception while retrieving tariffs information<br/>265: Unexpected exception while retrieving customer information<br/>275: No tariff definition set for the moment for the user.<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/billing/tariff-definition",
                "description": "Defines the tariff information of the user and the date since when they are to be applied.",
                "operationId": "v2postTariffDefinition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTariffDefinitionRequestDTO"
                            },
                            "examples": {
                                "PostTariffDefinitionExample": {
                                    "$ref": "#/components/examples/PostTariffDefinitionExample"
                                },
                                "PostTariffDefinitionExample2": {
                                    "$ref": "#/components/examples/PostTariffDefinitionExample2"
                                },
                                "PostTariffDefinitionExample3": {
                                    "$ref": "#/components/examples/PostTariffDefinitionExample3"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>152: User does not have a valid household object<br/>185: Labelpartner not specified for household<br/>186: Cannot find a profile for this household<br/>250: Unexpected exception while retrieving tariffs information<br/>265: Unexpected exception while retrieving customer information<br/>422: Invalid input<br/>425: This call has been disabled for this user<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/profile/properties": {
            "get": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/profile/properties",
                "description": "Returns all the possible profile properties and their choices plus the possible appliances.",
                "operationId": "v2getProfileProperties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "PropertyType": {
                                            "description": "Property type",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "PropertySize": {
                                            "description": "Property size",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "PropertyAge": {
                                            "description": "Property age",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "Ownership": {
                                            "description": "Property ownership",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "Occupants": {
                                            "description": "Number of occupants",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "OccupantType": {
                                            "description": "Occupant type",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "SpaceHeating": {
                                            "description": "Space heating type",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "WaterHeating": {
                                            "description": "Water heating type",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "StoveHeating": {
                                            "description": "Stove heating type",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "GrillHeating": {
                                            "description": "Grill heating type",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "OvenHeating": {
                                            "description": "Oven heating type",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "SpaceHeatingExchangerType": {
                                            "description": "Space heating exchanger type",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "Photovoltaic": {
                                            "description": "Photovoltaic solar power",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "Appliances": {
                                            "description": "Appliances",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "GetProfilePropertiesExample": {
                                        "$ref": "#/components/examples/GetProfilePropertiesExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>401: Unauthorized<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/profile/complete": {
            "get": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/profile/complete",
                "description": "Returns if the profile is complete or not and informs about the fraction of profile's completion.",
                "operationId": "v2getProfileComplete",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProfileCompleteResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>187: Fraction completion is out of valid range<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/profile/attributes": {
            "get": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/profile/attributes",
                "description": "Returns the installation properties\n    (attributes) and appliances of the user as well as the metadata of the appliances if present.",
                "operationId": "v2/getInstallationProfile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProfileAttributesResponseDTO"
                                },
                                "examples": {
                                    "GetProfileAttributesExample": {
                                        "$ref": "#/components/examples/GetProfileAttributesExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n    <br/>113: Gateway not found\n    <br/>152: User does not have a valid household object\n    <br/>185: Labelpartner not specified for household\n    <br/>265: Unexpected exception while retrieving customer information\n    <br/>400: User not provisioned<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/profile/attributes",
                "description": "Updates the installation profile of the user with the provided installation properties\n            (attributes), appliances or metadata of the appliances.",
                "operationId": "v2/postInstallationProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfileAttributesDataDTO"
                            },
                            "examples": {
                                "PostMinimalProfileInformationExample": {
                                    "$ref": "#/components/examples/PostMinimalProfileInformationExample"
                                },
                                "PostNormalProfileInformationExample": {
                                    "$ref": "#/components/examples/PostNormalProfileInformationExample"
                                },
                                "PostFullProfileInformationExample": {
                                    "$ref": "#/components/examples/PostFullProfileInformationExample"
                                },
                                "PostFullProfileInformationExampleWithMultipleHeatingOptions": {
                                    "$ref": "#/components/examples/PostFullProfileInformationExampleWithMultipleHeatingOptions"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>113: Gateway not found\n    <br/>152: User does not have a valid household object\n    <br/>185: Labelpartner not specified for household\n    <br/>265: Unexpected exception while retrieving customer information\n    <br/>400: User not provisioned<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Installation Profile"
                ],
                "summary": "/profile/attributes",
                "description": "Deletes the installation properties, appliances and metadata of appliances of the user.",
                "operationId": "v2/deleteInstallationProfile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n    <br/>113: Gateway not found\n    <br/>152: User does not have a valid household object\n    <br/>265: Unexpected exception while retrieving customer information\n    <br/>400: User not provisioned\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/recommendations/weekly": {
            "get": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "/recommendations/weekly",
                "description": "Returns an array of recommendation attributes for the previous week.\n    For the first 7 days, users receive demographic-based disaggregation reports and there are no personalized insights.\n    During this period, only generic recommendations are sent, omitting deltaPerc and savingCostsKWh.",
                "operationId": "v2/getWeeklyRecommendations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecommendationsReportResponseDTO"
                                },
                                "examples": {
                                    "GetRecommendationsReportResponse": {
                                        "$ref": "#/components/examples/GetRecommendationsReportResponse"
                                    },
                                    "GetRecommendationsReportFirstWeek": {
                                        "$ref": "#/components/examples/GetRecommendationsReportFirstWeek"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request\n    <br/>122: Corrupted report.\n    <br/>156: User or meter validation failed..\n    <br/>190: No recommendations available.\n    <br/>424: Invalid time period or timezone.\n    <br/>425: Functionality is not enabled.\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/recommendations/monthly": {
            "get": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "/recommendations/monthly",
                "description": "Returns an array of recommendation attributes for the previous month.\n    For the first 7 days, users receive demographic-based disaggregation reports and there are no personalized insights.\n    During this period, only generic recommendations are sent, omitting deltaPerc and savingCostsKWh.",
                "operationId": "v2/getMonthlyRecommendations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecommendationsReportResponseDTO"
                                },
                                "examples": {
                                    "GetRecommendationsReportResponse": {
                                        "$ref": "#/components/examples/GetRecommendationsReportResponse"
                                    },
                                    "GetRecommendationsReportFirstWeek": {
                                        "$ref": "#/components/examples/GetRecommendationsReportFirstWeek"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request\n    <br/>122: Corrupted report.\n    <br/>156: User or meter validation failed..\n    <br/>190: No recommendations available.\n    <br/>424: Invalid time period or timezone.\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/recommendations": {
            "get": {
                "tags": [
                    "Deprecated"
                ],
                "summary": "/recommendations",
                "description": "Returns an array of recommendation attributes.",
                "operationId": "v2getRecommendations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecommendationsResponseDTO"
                                },
                                "examples": {
                                    "GetRecommendtaionsResponse": {
                                        "$ref": "#/components/examples/GetRecommendationsResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request<br/>190: No recommendations available<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/registration/onboard/{eui64}/{force}": {
            "put": {
                "tags": [
                    "Registration"
                ],
                "summary": "/registration/onboard/{eui64}/{force}",
                "description": "Success depends on the state of the addressed gateway (eui64). The gateway must be online and not be registered to another account.",
                "operationId": "v2putOnboardGateway",
                "parameters": [
                    {
                        "name": "eui64",
                        "in": "path",
                        "description": "The gateway EUI64 address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "force",
                        "in": "path",
                        "description": "In case the value is true, the onboarding process can succeed even if the gateway is offline,\n    as the check to verify that gateway is online is skipped.\n    This should always be set to false in production environments. Defaults to false.",
                        "required": true,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n    <br/>102: User already active on platform\n    <br/>103: User is not eligible for onboarding a device\n    <br/>153: No valid meter found for user\n    <br/>422: Address is not valid\n    <br/>110: ZGD offline or the node does not exist\n    <br/>265: Unexpected error while retrieving customer information\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/registration/no-gateway": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "/registration/no-gateway",
                "description": "Registers the account of a provisioned user. If voucher code is provided in the api call it should match with the voucher code/web shop coupon value set during provisioning.",
                "operationId": "v2postActivateAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivateAccountDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>102: User already active on platform<br/>114: User not verified<br/>210: User not provisioned\n     *                       <br/>240: Invalid email address<br/>264: Invalid password<br/>422: Invalid input: Attributes missing for account activation<br/>427: Voucher code provided is not valid<br/>999: Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/registration/provision": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "/registration/provision",
                "description": "Initiates email verification. Sends email to the user\n    to confirm that the email is valid. The link in the email must be followed\n    to complete the provisioning.",
                "operationId": "v2postProvisionAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProvisionAccountDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>126: Unverified user not found\n    <br/>115: User is already verified\n    <br/>422: Invalid input\n    <br/>240: Invalid email address\n    <br/>185: Labelpartner not specified for household\n    <br/>265: Unexpected exception while retrieving customer information\n    <br/>210: User not provisioned<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/registration/email": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/registration/email",
                "description": "Updates user's email address. If given email address is used from another account, update is not allowed.",
                "operationId": "v2putChangeEmailAddress",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailAddressDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>104: Unable to change email, not a valid email address<br/>105: Error updating email with<br/>140:\n     *                       Invalid input: Attributes missing for<br/> 422: Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/registration/online": {
            "get": {
                "tags": [
                    "Registration"
                ],
                "summary": "/registration/online",
                "description": "Checks if the gateway of the user is connected to the platform.",
                "operationId": "v2getGetewayOnline",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>110: ZGD offline<br/>134: No gateway assigned to user\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/registration/setpassword": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/registration/setpassword",
                "description": "Sets a new password for a user. Old password given must match the old password of the user. New password is given twice for validation",
                "operationId": "v2putUpdatePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "264: Invalid password</br>>n999: Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/registration/resetpassword/{verificationAttribute}": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/registration/resetpassword/{verificationAttribute}",
                "description": "Sends a password reset email to the provided (user or agent) email address (if it exists) containing a URL that links to the password reset web page where the actual password change needs to be executed.",
                "operationId": "v2putResetPassword",
                "parameters": [
                    {
                        "name": "verificationAttribute",
                        "in": "path",
                        "description": "The email address or uid for a user or the uid for an agent.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/registration/opt-in": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/registration/opt-in",
                "description": "Returns the opt-in status of the gateway. The opt-in status can influence the attributes that\n    are submitted (or not) to the platform.",
                "operationId": "v2getRegistrationOptin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationOptinStatusResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": " <br/>153: No valid meter found for user.\n    <br/>275: Result set not found.\n    <br/>406: Gateway service is unavailable.\n    <br/>422: Something went wrong when retrieving attribute of fqaa.\n    <br/>422: No household found for user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/registration/opt-in",
                "description": "Sets the opt-in status of the gateway.",
                "operationId": "v2/putRegistrationOptIn",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationOptInBodyDTO"
                            },
                            "examples": {
                                "PutRegistrationOptInExample": {
                                    "$ref": "#/components/examples/PutRegistrationOptInExample"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n    <br/>153: No valid meter found for user\n    <br/>422: Invalid input\n    <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/registration/verify/{emailAddress}/{hash}": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "/registration/verify/{emailAddress}/{hash}",
                "description": "Verifies the account specified by the provided email address and hash value.",
                "operationId": "v2postVerifyEmail",
                "parameters": [
                    {
                        "name": "emailAddress",
                        "in": "path",
                        "description": "The email address of the unverified user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "The hash value of the unverified user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>115: The user is already verified\n    <br/>102: User already active on platform\n    <br/>126: Unverified user not found\n    <br/>265: Unexpected exception while retrieving customer information\n    <br/>185: Labelpartner not found<br/>999: Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/registration/delete-account": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "/registration/delete-account",
                "description": "Initiates the account deletion process, which is an asynchronous process.",
                "operationId": "v2postDeleteAccount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>400: Resource not found<br/>185: LabelPartner not found<br/>265: Unexpected error while retrieving customer information<br/>293: User not eligible for this action<br/>999: Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/registration/introspection/migrate-sso-user": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "/registration/introspection/migrate-sso-user",
                "description": "Used to migrate an active NET2GRID user to the SSO introspection flow. NET2GRID verifies that the user is active on NET2GRID platform using the `access_token`. Also verifies (via B2B communication with the external provider) that the provided `external_provider_access_token` is active and migrates the user by updating the `external_authentication_provider_id` provided by the external provider via introspection. The returned `access_token` (in the response body) is a token that can be used in CE-API.",
                "operationId": "v2postIntrospectionMigrateSSOUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThirdPartyTokenDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request<br/>422: Invalid input: Access token missing\n     *                      <br/>666: Not Authorized.<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenDTO"
                                },
                                "examples": {
                                    "TokenResponse": {
                                        "$ref": "#/components/examples/TokenResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/registration/introspection/sso-user": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "/registration/introspection/sso-user",
                "description": "Registers a user that has performed sign in via an external provider using the introspection flow. Relevant only for registration via SSO introspection. NET2GRID validates the user based on the given identifiers and retrieves the `external_authentication_provider_id` using the `external_provider_access_token` via introspection (via B2B communication with the external authentication provider). The user gets registered and the `access_token` that can be used in CE-API is returned in the response.",
                "operationId": "v2postIntrospectionRegisterSSOUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request<br/>210: User not provisioned<br/>666: Not Authorized\n     *                      <br/>999: Unspecified Error<br/>287: Registration not allowed\n     *                      <br/>240: Invalid email address",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenDTO"
                                },
                                "examples": {
                                    "TokenResponse": {
                                        "$ref": "#/components/examples/TokenResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ]
            }
        },
        "/v2/nilm/retraining": {
            "post": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/nilm/retraining",
                "description": "Specifies the appliances requested to be retrained by the user.",
                "operationId": "v2postNilmRetraining",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "appliances": {
                                        "description": "List of appliances that have been requested to be retrained.\n                       Each element of the list must have the appliance_type as key and the value must be an object\n                       that can contain the “immediate” and “removeOldModel” optional boolean parameters.",
                                        "required": [
                                            "application_type"
                                        ],
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object",
                                            "properties": {
                                                "immediate": {
                                                    "type": "boolean",
                                                    "description": "Optional, default false. When true the retraining will be performed\n                                   asap (the customer acknowledges that the appliance is in use for the past 30 days).\n                                   If false, the retrain will be scheduled in 30 days."
                                                },
                                                "removeOldModel": {
                                                    "type": "boolean",
                                                    "description": "Optional, default false. When True, any existing models in the database\n                                   for this appliance will be deleted. When False, the existing model will be retained\n                                   and the Analytics will continue to send appliance events normally. It will only be\n                                   replaced after the retraining process takes place."
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "examples": {
                                "NilmRetrainingExample": {
                                    "$ref": "#/components/examples/NilmRetrainingExample"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\n               <br/>153 No valid meter found for user\n               <br/>265: Analytics Portal Service Generic Exception\n               <br/>268: Retraining not allowed for the appliance type\n               <br/>666: Not authorized exception\n               <br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/sso/exchange-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/sso/exchange-token",
                "description": "Exchange external's provider token with a NET2GRID token through introspection. This endpoint is used to exchange a thrid-party access token with a NET2GRID access token.",
                "operationId": "v2getSSOExchangeToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThirdPartyTokenDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request<br/>210: User not provisioned<br/>422: Invalid input<br/>666: Not Authorized<br/>999: Unspecified Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CamelCaseTokenDTO"
                                },
                                "examples": {
                                    "TokenResponseCamelCase": {
                                        "$ref": "#/components/examples/TokenResponseCamelCase"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ]
            }
        },
        "/v2/smartbridge/status": {
            "get": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/smartbridge/status",
                "description": "Returns the smartbridge status and other\n    smartbridge information like: hardware version, firmware version, model identifier, connection info etc.",
                "operationId": "v2getSmartbridgeStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartbridgeStatusResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>152: User does not have a valid household object<br/>999: Unspecified error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/smartbridge/report-mode/settings": {
            "get": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/smartbridge/report-mode/settings",
                "description": "Returns the load curve threshold  which controls\n    how often the smart reader will communicate measurements to the gateway.",
                "operationId": "v2getSmartbridgeReportModeSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartbridgeLCThresholdResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.\n    <br/>210: User not provisioned.<br/>265: Customer Service Generic Exception.<br/>999: Unspecified error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/smartbridge/report-mode/settings",
                "description": "Sets the load curve threshold  which controls how often the smart reader will communicate measurements to the gateway.",
                "operationId": "v2putSmartbridgeReportModeSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartbridgeLCThresholdRequestDTO"
                            },
                            "examples": {
                                "PutSmartbridgeLCThresholdRequest": {
                                    "$ref": "#/components/examples/PutSmartbridgeLCThresholdRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.\n    <br/>210: User not provisioned.<br/>265: Customer Service Generic Exception.<br/>400: User not provisioned.\n    <br/>405: Gateway is offline.<br/>406: Gateway service is unavailable.<br/>\n    407: Gateway couldn’t process the command.<br/>422: Invalid input<br/>999: Unspecified error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/smartbridge/report-mode/real-time": {
            "put": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/smartbridge/report-mode/real-time",
                "description": "This call is relevant only for users with a hardware device. Enables the real time mode of the gateway for a specific duration. This real time mode isn't supported when using smart readers.",
                "operationId": "v2putSmartbridgeRealTimeMode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartbridgeRealTimeOverrideDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.\n    <br/>155: Action not supported by current Report Mode.\n    <br/>210: User not provisioned.<br/>265: Customer Service Generic Exception.<br/>400: User not provisioned.\n    <br/>405: Gateway is offline.<br/>406: Gateway service is unavailable.\n    <br/>422: Real time override duration should not be greater than 15 minutes.\n    <br/>407: Gateway couldn’t process the command.<br/><br/>999: Unspecified error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/smartbridge/replace/{newEui64}": {
            "put": {
                "tags": [
                    "Device Management"
                ],
                "summary": "/smartbridge/replace/{newEui64}",
                "description": "Replaces the old (faulty) smartbridge with a new one",
                "operationId": "v2putReplaceSmartbridge",
                "parameters": [
                    {
                        "name": "newEui64",
                        "in": "path",
                        "description": "The EUI that will replace the old one.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Gateway is offline."
                    },
                    "422": {
                        "description": "Invalid input: Gateway is already assigned |\n     *                       Invalid input: Address is not valid |\n     *                       Invalid input: Address is out of range"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/solar/production/daily/{year}/{month}/{day}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/solar/production/daily/{year}/{month}/{day}",
                "description": "Returns the derived solar production metrics for a specific day.",
                "operationId": "v2getSolarProductionForDay",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the solar production metrics are requested. Accepted format is YYYY (2022).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month of the year for which the solar production metrics are requested. Accepted formats are numeric representations with 2 digits with leading zeros (08) or without leading zeros (8).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "day",
                        "in": "path",
                        "description": "The day of the month for which the solar production metrics are requested. Accepted formats are numeric representations with 2 digits with leading zeros (08) or without leading zeros (8).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SolarProductionResponseDTO"
                                },
                                "examples": {
                                    "GetDailySolarProductionExample": {
                                        "$ref": "#/components/examples/GetDailySolarProductionExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.<br/>274: Unit conversion not applicable. Unable to convert from Wh to kWh.<br/>282: Solar production for this period was not found.<br/>422: The filled in date is not correct.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/solar/production/{periodType}/{year}/{monthOrWeek}": {
            "get": {
                "tags": [
                    "NILM - Disaggregation"
                ],
                "summary": "/solar/production/{periodType}/{year}/{monthOrWeek}",
                "description": "Returns the derived solar production metrics for a specific month. In the case where solar production metrics are available for only part of the specified month, the included CSD and CSR data will be calculated up to the latest day for which solar production metric data exists.",
                "operationId": "v2getSolarProductionForPeriod",
                "parameters": [
                    {
                        "name": "periodType",
                        "in": "path",
                        "description": "The type of period for which we request data.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "weekly",
                                "monthly",
                                "yearly"
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year for which the solar production metrics are requested. Accepted format is YYYY (2022).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "monthOrWeek",
                        "in": "path",
                        "description": "The month or the week of the year for which the solar production metrics are requested. Accepted formats for month are numeric representations with 2 digits with leading zeros (08) or without leading zeros (8). Accepted format, in case of week, is W{numeric representation of week} (W26). In case of yearly call, this parameter is not required.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SolarProductionResponseDTO"
                                },
                                "examples": {
                                    "GetPeriodicSolarProductionExample": {
                                        "$ref": "#/components/examples/GetPeriodicSolarProductionExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request<br/>153: No valid meter found for user.<br/>251: No available cost calculation for solar data.<br/>274: Unit conversion not applicable. Unable to convert from Wh to kWh.<br/>282: Solar production for this period was not found.<br/>293: User not eligible for this action.<br/>422: The filled in date is not correct.<br/>999: Unspecified Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/timezone": {
            "post": {
                "tags": [
                    "Account Status"
                ],
                "summary": "/timezone",
                "description": "Sets/updates a user's timezone.",
                "operationId": "v2postAccountTimezone",
                "requestBody": {
                    "description": "Timezone input request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "timezone"
                                ],
                                "properties": {
                                    "timezone": {
                                        "description": "The user's timezone",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponseDTO"
                                },
                                "examples": {
                                    "OkResponse": {
                                        "$ref": "#/components/examples/OkResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "241: Invalid timezone",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/token",
                "description": "Requests token for a user. If MFA is not enabled for this user, token response will be returned. If MFA is enabled, challenge response will be returned.",
                "operationId": "v2getToken",
                "requestBody": {
                    "description": "Input data format",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "client_secret",
                                    "grant_type"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "The ID of an app client.",
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "description": "The client secret for the app client id given.",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "Username that is used for user to log in.",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "password": {
                                        "description": "Password that is linked with the username.",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "grant_type": {
                                        "description": "Grant type that is related with the authentication method. If username password fields are given, this should be set to password, if refresh token field is filled, then it should be set to refresh token",
                                        "type": "string",
                                        "default": "password"
                                    },
                                    "refresh_token": {
                                        "description": "Refresh token used to generate a new access token.",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/TokenDTO"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ChallengeMFADTO"
                                        }
                                    ]
                                },
                                "examples": {
                                    "TokenResponse": {
                                        "$ref": "#/components/examples/TokenResponse"
                                    },
                                    "ChallengeMFAResponse": {
                                        "$ref": "#/components/examples/ChallengeMFAResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unsupported Grant Type<br/>Invalid Client<br/>Invalid Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Authorized<br/>Invalid Grant</br>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/mfa/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "/mfa/token",
                "description": "Responds to mfa challenge to retrieve token.",
                "operationId": "v2getMFAToken",
                "requestBody": {
                    "description": "Input data format",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "client_secret",
                                    "software_challenge_name",
                                    "user_id_for_srp",
                                    "session",
                                    "user_code"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "The ID of an app client.",
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "description": "The client secret for the app client id given.",
                                        "type": "string"
                                    },
                                    "software_challenge_name": {
                                        "description": "The challenge name. SOFTWARE_TOKEN_MFA, in case of MFA Enabling flow.",
                                        "type": "string",
                                        "default": "SOFTWARE_TOKEN_MFA"
                                    },
                                    "user_id_for_srp": {
                                        "description": "User id retrieved from the authenticator provider.",
                                        "type": "string"
                                    },
                                    "session": {
                                        "description": "The session that should be passed both ways in challenge-response calls.",
                                        "type": "string"
                                    },
                                    "user_code": {
                                        "description": "6-digit code retrieved from the authenticator app to verify the authenticator app.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenDTO"
                                },
                                "examples": {
                                    "TokenResponse": {
                                        "$ref": "#/components/examples/TokenResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request<br/>Session, user id or challenge name is incorrect<br/>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDTO"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GetAppliancesMappingResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "description": "The status of the call, “ok” if it was successful, “error” if it went wrong.",
                        "type": "string"
                    },
                    "data": {
                        "description": "Contains the message the call returns. It has the following format:\n    <br>“data”: {\n    <br>“Appliance_type”:”category”\n    <br>}",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CamelCaseTokenDTO": {
                "required": [
                    "accessToken",
                    "refreshToken",
                    "idToken",
                    "expiresIn",
                    "tokenType",
                    "scope"
                ],
                "properties": {
                    "accessToken": {
                        "description": "Access token. Used for the authenticated calls.",
                        "type": "string"
                    },
                    "refreshToken": {
                        "description": "Refresh token, by default is valid for 30 days. Used for retrieving new access token.",
                        "type": "string"
                    },
                    "idToken": {
                        "description": "Id Token.",
                        "type": "string"
                    },
                    "expiresIn": {
                        "description": "Defines expiration time of access token.",
                        "type": "integer"
                    },
                    "tokenType": {
                        "description": "Defines type of token returned.",
                        "type": "string"
                    },
                    "scope": {
                        "description": "Defines scope of access token returned.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ChallengeMFADTO": {
                "required": [
                    "software_challenge_name",
                    "user_id_for_srp",
                    "session"
                ],
                "properties": {
                    "software_challenge_name": {
                        "description": "The challenge name. SOFTWARE_TOKEN_MFA, in case of MFA Enabling flow.",
                        "type": "string",
                        "enum": [
                            "SOFTWARE_TOKEN_MFA"
                        ]
                    },
                    "user_id_for_srp": {
                        "description": "User id retrieved from the authenticator provider.",
                        "type": "string"
                    },
                    "session": {
                        "description": "The session that should be passed both ways in challenge-response calls.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MFAStatusDTO": {
                "required": [
                    "mfa_enabled"
                ],
                "properties": {
                    "mfa_status": {
                        "description": "Indicates whether MFA is enabled or not for user.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "MFAStatusResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MFAStatusDTO"
                    }
                },
                "type": "object"
            },
            "SecretCodeDTO": {
                "required": [
                    "secret_code"
                ],
                "properties": {
                    "secret_code": {
                        "description": "6-digit code returned to be given as input to the authenticator app to enable MFA.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SecretCodeResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/SecretCodeDTO"
                    }
                },
                "type": "object"
            },
            "UserCodeDTO": {
                "required": [
                    "user_code"
                ],
                "properties": {
                    "user_code": {
                        "description": "6-digit code retrieved from the authenticator app to verify the authenticator app.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PostAuthSettingsConfigDTO": {
                "required": [
                    "user_auth"
                ],
                "properties": {
                    "user_auth": {
                        "description": "Indicates the current status of the user authentication settings for local API.\n\nIf set to true, authentication is enabled, and the user cannot access the LAN without credentials.\nIf set to false, authentication is disabled, and the user can access the LAN without credentials.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ServiceTypeDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "description": "The status of the call, it displays “ok” if it is successful.",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ServiceTypeDataDTO"
                    }
                },
                "type": "object"
            },
            "ServiceTypeDataDTO": {
                "required": [
                    "data_type",
                    "intraday",
                    "data_granularity",
                    "n2g_hw",
                    "nilm",
                    "resolution"
                ],
                "properties": {
                    "data_type": {
                        "description": "The meter reporting type. Possible values: rt|amr for real time\n           and automatic meter readings (15’ / 30’ etc) accordingly.",
                        "type": "string"
                    },
                    "intraday": {
                        "description": "Whether the reporting is in real-time or in batches.",
                        "type": "boolean"
                    },
                    "data_granularity": {
                        "description": "Whether the measurements are obtained at a high or low resolution.",
                        "type": "string"
                    },
                    "n2g_hw": {
                        "description": "Whether the data acquisition equipment is manufactured by Net2Grid.",
                        "type": "boolean"
                    },
                    "nilm": {
                        "description": "Whether NILM services are enabled.",
                        "type": "boolean"
                    },
                    "resolution": {
                        "description": "The data resolution in seconds.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ThirdPartyTokenDTO": {
                "required": [
                    "external_provider_access_token"
                ],
                "properties": {
                    "external_provider_access_token": {
                        "description": "Access token received from the external provider.\nThis token is provided during the introspection call,\nin order to be exchanged with an access, and a refresh token.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TokenDTO": {
                "required": [
                    "access_token",
                    "refresh_token",
                    "id_token",
                    "expires_in",
                    "token_type",
                    "scope"
                ],
                "properties": {
                    "access_token": {
                        "description": "Access token. Used for the authenticated calls.",
                        "type": "string"
                    },
                    "refresh_token": {
                        "description": "Refresh token, by default is valid for 30 days. Used for retrieving new access token.",
                        "type": "string"
                    },
                    "id_token": {
                        "description": "Id Token.",
                        "type": "string"
                    },
                    "expires_in": {
                        "description": "Defines expiration time of access token.",
                        "type": "integer"
                    },
                    "token_type": {
                        "description": "Defines type of token returned.",
                        "type": "string"
                    },
                    "scope": {
                        "description": "Defines scope of access token returned.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "BillPredictionDataDTO": {
                "required": [
                    "billing_period_from",
                    "billing_period_until",
                    "planned_meter_reading",
                    "actual_consumption",
                    "estimated_consumption_billing_period",
                    "base_fee",
                    "current_tariff",
                    "sum_of_prepayments",
                    "energy_covered_by_prepayments",
                    "estimated_cost_billing_period",
                    "timestamp"
                ],
                "properties": {
                    "billing_period_from": {
                        "description": "The timestamp of the start of the billing period in ISO-8601 format",
                        "type": "string"
                    },
                    "billing_period_until": {
                        "description": "The timestamp of the end of the billing period in ISO-8601 format",
                        "type": "string"
                    },
                    "planned_meter_reading": {
                        "description": "The timestamp of the planned meter reading in ISO-8601 format",
                        "type": "string"
                    },
                    "actual_consumption": {
                        "description": "The actual consumption of the bill",
                        "type": "integer"
                    },
                    "estimated_consumption_billing_period": {
                        "description": "The estimated consumption for the billing period.",
                        "type": "integer"
                    },
                    "base_fee": {
                        "description": "The base fee of the bill",
                        "type": "integer"
                    },
                    "current_tariff": {
                        "description": "The current tariff for the energy commodity",
                        "type": "number"
                    },
                    "sum_of_prepayments": {
                        "description": "The total summary of the prepayments.",
                        "type": "integer"
                    },
                    "energy_covered_by_prepayments": {
                        "description": "The amount of energy consumption covered by prepayments.",
                        "type": "integer"
                    },
                    "estimated_cost_billing_period": {
                        "description": "The estimated cost for the billing period.",
                        "type": "number"
                    },
                    "timestamp": {
                        "description": "The timestamp of the request in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BillPredictionResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/BillPredictionDataDTO"
                    }
                },
                "type": "object"
            },
            "BudgetDefinitionDTO": {
                "required": [
                    "electricity_monthly_budget"
                ],
                "properties": {
                    "electricity_monthly_budget": {
                        "description": "The amount that will be allocated to be spent for the electricity every month.",
                        "type": "number"
                    },
                    "gas_monthly_budget": {
                        "description": "The amount that will be allocated to be spent for the gas every month. Defaults to 0.",
                        "type": "number",
                        "default": "0"
                    },
                    "applicable_since": {
                        "description": "The point in time when the provided budget definition becomes valid in ISO-8601 format. Defaults to 2000-01-01T00:00:00Z.",
                        "type": "string",
                        "default": "2000-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "GetBudgetDefinitionResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/BudgetDefinitionDTO"
                    }
                },
                "type": "object"
            },
            "PostBudgetDefinitionRequestDTO": {
                "required": [
                    "budget_definition"
                ],
                "properties": {
                    "budget_definition": {
                        "$ref": "#/components/schemas/BudgetDefinitionDTO"
                    }
                },
                "type": "object"
            },
            "CapacityPeaksConfigDataDTO": {
                "required": [
                    "enabled"
                ],
                "properties": {
                    "enabled": {
                        "description": "Indicates the current status of capacity peaks alerts configuration.",
                        "type": "boolean"
                    },
                    "threshold_value": {
                        "description": "Contains threshold value in Watts. This threshold is the value that is currently set in the hardware.",
                        "type": "integer"
                    },
                    "last_updated": {
                        "description": "Timestamp of when threshold configuration was retrieved from the gateway. This value can be used </br>\nto identify if setting thresholds to the gateway has completed, because the process is asynchronous </br>\nand may take a few minutes to update. If no set capacity peak call is made this value is expected </br>\nto be updated weekly.",
                        "type": "string"
                    },
                    "last_pending_threshold": {
                        "description": "Contains the threshold value in Watts, that is still pending to be stored at the hardware, </br>\nbut has nοt finished yet. This will only appear if there is a threshold that is being updated </br>\nin the hardware, but has not yet finished updating.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CapacityPeaksConfigResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/CapacityPeaksConfigDataDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SetCapacityPeaksConfigDTO": {
                "required": [
                    "threshold_value",
                    "enabled"
                ],
                "properties": {
                    "threshold_value": {
                        "description": "Contains threshold value in Watts. Value provided should be divisible by 4. Otherwise, there will be a </br>\nmisalignment between the value that is being set as a capacity peak config and the value retrieved from </br>\nGET call. Required when enabled is set to true.",
                        "type": "integer"
                    },
                    "enabled": {
                        "description": "Indicates the current status of capacity peaks alerts configuration.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AppliancesDTO": {
                "properties": {
                    "appliances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsumptionAppliancesDTO"
                        }
                    }
                },
                "type": "object"
            },
            "ConsumptionAlwaysOnBreakdownDTO": {
                "properties": {
                    "category": {
                        "description": "The AlwaysOn category for which consumption is estimated.",
                        "type": "string",
                        "example": "Laundry"
                    },
                    "cost": {
                        "description": "Cost associated with estimated consumption for the associated AlwaysOn category.",
                        "type": "number",
                        "example": "3.0"
                    },
                    "energy_wh": {
                        "description": "Total consumption for the specified AlwaysOn category for {year} and {month} (in Wh).",
                        "type": "number",
                        "example": "3900"
                    },
                    "percentage": {
                        "description": "Percentage of AlwaysOn category consumption against total AlwaysOn consumption.",
                        "type": "number",
                        "example": "16.065382370110914"
                    }
                },
                "type": "object"
            },
            "ConsumptionAlwaysOnBreakdownResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "description": "The list of appliance events items for this activity.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsumptionAlwaysOnBreakdownDTO"
                        }
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConsumptionAppliancesDTO": {
                "properties": {
                    "start_time": {
                        "description": "Timestamp of the start of the hour reported.",
                        "type": "integer",
                        "example": "1667257200"
                    },
                    "energy_per_appliance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnergyPerApplianceDTO"
                        }
                    }
                },
                "type": "object"
            },
            "ConsumptionAppliancesResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/AppliancesDTO"
                    }
                },
                "type": "object"
            },
            "ConsumptionCompareDataDTO": {
                "required": [
                    "historic_summation_delta",
                    "historic_cost_associated",
                    "current_summation_delta",
                    "current_cost_associated",
                    "timestamp"
                ],
                "properties": {
                    "historic_summation_delta": {
                        "description": "Delta of previous months’ summation (in Wh for electricity or liters for gas).",
                        "type": "number"
                    },
                    "historic_cost_associated": {
                        "description": "Associated cost of previous months’ summation.",
                        "type": "number"
                    },
                    "current_summation_delta": {
                        "description": "Delta of this month's summation (in Wh for electricity or liters for gas).",
                        "type": "number"
                    },
                    "current_cost_associated": {
                        "description": "Associated cost of this month's summation.",
                        "type": "number"
                    },
                    "timestamp": {
                        "description": "The timestamp of the result in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConsumptionCompareResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ConsumptionCompareDataDTO"
                    }
                },
                "type": "object"
            },
            "DailyConsumptionDTO": {
                "required": [
                    "usage",
                    "cost",
                    "timestamp",
                    "fixed_cost"
                ],
                "properties": {
                    "usage": {
                        "description": "The energy usage since the start of the day today until now.",
                        "type": "number"
                    },
                    "cost": {
                        "description": "Cost associated with the energy usage.",
                        "type": "number"
                    },
                    "timestamp": {
                        "description": "Timestamp of the call.",
                        "type": "string"
                    },
                    "fixed_cost": {
                        "description": "Fixed cost of the time period.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "DailyConsumptionResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/DailyConsumptionDTO"
                    }
                },
                "type": "object"
            },
            "DeltaEnergyResultsDTO": {
                "required": [
                    "timestamp",
                    "measured",
                    "cost_measured"
                ],
                "properties": {
                    "timestamp": {
                        "description": "The timestamp of the start of the time slot for which the energy measurement is returned.",
                        "type": "string"
                    },
                    "measured": {
                        "description": "The energy measurement that was consumed or produced in the requested interval in the unit\nthat the meter reports data. This attribute is populated only in periods for which the meter\nhas reported data. In case of no data being available in the specified interval (data gaps)\n0 will be returned.",
                        "type": "number"
                    },
                    "cost_measured": {
                        "description": "The cost associated with the \"measured\" energy in the currency of the end-user.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "EnergyPerApplianceDTO": {
                "required": [
                    "energy_ws",
                    "appliance_instance_id",
                    "cost"
                ],
                "properties": {
                    "energy_ws": {
                        "description": "Estimated consumption of the appliance for the start time (in Ws).",
                        "type": "number"
                    },
                    "appliance_instance_id": {
                        "description": "Appliance identifier, the definition of each code along with their supported metadata can be retrieved from the GET /v2/appliances/definitions endpoint.",
                        "type": "string"
                    },
                    "cost": {
                        "description": "Cost associated with estimated consumption.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "GetCapacityPeakDataDTO": {
                "properties": {
                    "usage": {
                        "description": "The delta usage in a 15-minute period in the unit in which the meter reports their attributes.",
                        "type": "number"
                    },
                    "capacity_peak": {
                        "description": "The monthly capacity peak in kW. The formula used for calculating this value is: usage in kWh * 4.",
                        "type": "number"
                    },
                    "start": {
                        "description": "The start of the interval on which capacity peak is found in ISO-8601 format.",
                        "type": "string"
                    },
                    "end": {
                        "description": "The end of the interval on which capacity peak is found in ISO-8601 format.",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetCapacityPeakResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/GetCapacityPeakDataDTO"
                    }
                },
                "type": "object"
            },
            "GetEnergyMeasurementResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeltaEnergyResultsDTO"
                        }
                    }
                },
                "type": "object"
            },
            "DatahubSubscriptionDTO": {
                "description": "Represents a datahub subscription.",
                "required": [
                    "datahub"
                ],
                "properties": {
                    "datahub": {
                        "description": "The datahub that is applicable for the installation. The returned value can be used by the app to set the endpoints that will provide more information related to the datahub.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetDatahubSubscriptionResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "description": "The status of the subscription response",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/DatahubSubscriptionDTO"
                    }
                },
                "type": "object"
            },
            "MandateCreationDataDTO": {
                "required": [
                    "customer_id",
                    "url"
                ],
                "properties": {
                    "customer_id": {
                        "description": "Customer identifier as of the datahub (reference number).",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL provided by the datahub.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MandateCreationResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "description": "The status of the call, it displays “ok” if it is successful.",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MandateCreationDataDTO"
                    }
                },
                "type": "object"
            },
            "MandateDataAccessPeriodDTO": {
                "properties": {
                    "start": {
                        "description": "Data access period start date in the format: YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    "end": {
                        "description": "Data access period end date in the format: YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MandateDataDTO": {
                "properties": {
                    "customer_id": {
                        "description": "Customer identifier as of the datahub (reference number).",
                        "type": "string"
                    },
                    "status": {
                        "description": "An aggregated status of all mandates of this customer. Allowed values are:\n     INITIAL|REQUESTED|APPROVED|REJECTED. Once the customer gets created in the backend, the status will be set to\n     INITIAL. When the datahub responds, the value will be either REQUESTED|APPROVED|REJECTED depending on the status\n     of the corresponding metering points:<br/>\n     REQUESTED: If all metering-point mandates are REQUESTED.<br/>\n     APPROVED: If at least one metering-point mandate is APPROVED.<br/>\n     REJECTED: If all metering-point mandates are REJECTED.",
                        "type": "string",
                        "enum": [
                            "INITIAL",
                            "REQUESTED",
                            "APPROVED",
                            "REJECTED"
                        ]
                    },
                    "url": {
                        "description": "URL provided by the datahub.",
                        "type": "string"
                    },
                    "metering_points": {
                        "description": "Contains the metering points information of the authenticated user.",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/MandateMeteringPointDTO"
                        }
                    }
                },
                "type": "object"
            },
            "MandateMeteringPointDTO": {
                "properties": {
                    "commodity": {
                        "description": "Contains the commodity of the metering point. Allowed values: ELECTRICITY|GAS.",
                        "type": "string",
                        "enum": [
                            "ELECTRICITY",
                            "GAS"
                        ]
                    },
                    "status": {
                        "description": "The status of the mandate. If there is no mandate available the status will not be returned\n     at all. The stages where the mandates get updated are the following:<br/>\n     INITIAL: The metering point has been created in the NET2GRID backend but the user has not requested a mandate yet.<br/>\n     REQUESTED: The user requested the mandate but NET2GRID hasn’t received an update from the datahub yet.<br/>\n     APPROVED: The user has approved the mandate.<br/>\n     REJECTED: There user has rejected/terminated the mandate.",
                        "type": "string",
                        "enum": [
                            "INITIAL",
                            "REQUESTED",
                            "APPROVED",
                            "REJECTED"
                        ]
                    },
                    "granularity": {
                        "description": "The data granularity to which the mandate corresponds. Allowed value is: PT15M (15-minute)",
                        "type": "string",
                        "enum": [
                            "PT15M"
                        ]
                    },
                    "data_access_period": {
                        "$ref": "#/components/schemas/MandateDataAccessPeriodDTO"
                    },
                    "expiration_date": {
                        "description": "The expiration date of the mandate in the format: YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    "renewal_status": {
                        "description": "The renewal status of the mandate. This field will appear 3 months before the mandate expires,\n     to help end users renew their mandate proactively, before it expires. Despite representing the need for renewal,\n     it also showcases the status of the renewal process. Allowed values:<br/>\n     TO_BE_RENEWED: The mandate should be renewed soon.<br/>\n     RENEWAL_REQUESTED: The renewal of the mandate has been requested by the user.<br/>\n     EXPIRED: The mandate has expired and cannot be further renewed. The user will have to request a new mandate to\n     continue receiving the service.",
                        "type": "string",
                        "enum": [
                            "TO_BE_RENEWED",
                            "RENEWAL_REQUESTED",
                            "EXPIRED"
                        ]
                    }
                },
                "type": "object"
            },
            "MandateResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "description": "The status of the call, it displays “ok” if it is successful.",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MandateDataDTO"
                    }
                },
                "type": "object"
            },
            "PostDatahubMandateDTO": {
                "properties": {
                    "success_url": {
                        "description": "Redirection route in case of a successful mandate creation. It must be a valid URL.",
                        "type": "string",
                        "example": "https://example.com/success"
                    },
                    "failure_url": {
                        "description": "Redirection route in case of a failed mandate creation. It must be a valid URL.",
                        "type": "string",
                        "example": "https://example.com/failure"
                    }
                },
                "type": "object"
            },
            "DebugDataDTO": {
                "required": [
                    "user",
                    "group",
                    "households"
                ],
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "households": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugHouseholdDTO"
                        }
                    }
                },
                "type": "object"
            },
            "DebugEnergyMeterDTO": {
                "required": [
                    "id",
                    "eui64",
                    "meteringDeviceType"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "eui64": {
                        "type": "string"
                    },
                    "meteringDeviceType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DebugHouseholdDTO": {
                "required": [
                    "id",
                    "energyMeters"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "physicalGateway": {
                        "type": "string"
                    },
                    "generatedGateway": {
                        "type": "string"
                    },
                    "energyMeters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugEnergyMeterDTO"
                        }
                    }
                },
                "type": "object"
            },
            "DebugResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/DebugDataDTO"
                    }
                },
                "type": "object"
            },
            "DisaggregationDataDTO": {
                "required": [
                    "electricity",
                    "production",
                    "gas"
                ],
                "properties": {
                    "electricity": {
                        "$ref": "#/components/schemas/DisaggregationReportDTO"
                    },
                    "production": {
                        "$ref": "#/components/schemas/DisaggregationProductionDTO"
                    },
                    "gas": {
                        "$ref": "#/components/schemas/DisaggregationReportDTO"
                    }
                },
                "type": "object"
            },
            "DisaggregationProductionDTO": {
                "required": [
                    "total_produced",
                    "produced"
                ],
                "properties": {
                    "total_produced": {
                        "description": "The cost of produced energy during the month for which data is requested.",
                        "type": "number"
                    },
                    "produced": {
                        "$ref": "#/components/schemas/DisaggregationReportDTO"
                    }
                },
                "type": "object"
            },
            "DisaggregationReportDTO": {
                "required": [
                    "Total",
                    "categories"
                ],
                "properties": {
                    "Total": {
                        "$ref": "#/components/schemas/DisaggregationUsageDTO"
                    },
                    "categories": {
                        "description": "Breakdown of the total monthly energy usage into disaggregation categories.",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/DisaggregationUsageDTO"
                        }
                    }
                },
                "type": "object"
            },
            "DisaggregationResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/DisaggregationDataDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DisaggregationUsageDTO": {
                "required": [
                    "usage",
                    "cost"
                ],
                "properties": {
                    "usage": {
                        "description": "The usage in energy units.",
                        "type": "number"
                    },
                    "cost": {
                        "description": "The cost of the usage in currency units or 0 if tariffs are not set.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "DisaggregationForecastBudgetDTO": {
                "required": [
                    "total_budget",
                    "total_budget_usage",
                    "remaining_budget"
                ],
                "properties": {
                    "total_budget": {
                        "description": "The total budget in currency units that is specified for the period of the disaggregation result.\nThe budget value defined here does not include fixed costs but only the budget related to energy usage.",
                        "type": "number"
                    },
                    "total_budget_usage": {
                        "description": "The total energy usage in energy units that can be used based on the defined total_budget.\nThis calculation takes into account the tariff information that have been set up for the given period.",
                        "type": "number"
                    },
                    "remaining_budget": {
                        "$ref": "#/components/schemas/DisaggregationReportDTO"
                    }
                },
                "type": "object"
            },
            "DisaggregationForecastDataDTO": {
                "required": [
                    "electricity",
                    "production",
                    "gas"
                ],
                "properties": {
                    "electricity": {
                        "$ref": "#/components/schemas/DisaggregationForecastBudgetDTO"
                    },
                    "production": {
                        "$ref": "#/components/schemas/DisaggregationProductionDTO"
                    },
                    "gas": {
                        "$ref": "#/components/schemas/DisaggregationForecastBudgetDTO"
                    }
                },
                "type": "object"
            },
            "DisaggregationForecastResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp",
                    "days_left"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/DisaggregationForecastDataDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    },
                    "days_left": {
                        "description": "Days left until the end of the current month.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DisaggregationHistoryBudgetDTO": {
                "required": [
                    "used_budget",
                    "total_budget",
                    "total_budget_usage"
                ],
                "properties": {
                    "used_budget": {
                        "$ref": "#/components/schemas/DisaggregationReportDTO"
                    },
                    "total_budget": {
                        "description": "The total budget in currency units that is specified for the period of the disaggregation result.\nThe budget value defined here does not include fixed costs but only the budget related to energy usage.",
                        "type": "number"
                    },
                    "total_budget_usage": {
                        "description": "The total energy usage in energy units that can be used based on the defined total_budget.\nThis calculation takes into account the tariff information that have been set up for the given period.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "DisaggregationHistoryDataDTO": {
                "required": [
                    "electricity",
                    "production",
                    "gas"
                ],
                "properties": {
                    "electricity": {
                        "$ref": "#/components/schemas/DisaggregationHistoryBudgetDTO"
                    },
                    "production": {
                        "$ref": "#/components/schemas/DisaggregationProductionDTO"
                    },
                    "gas": {
                        "$ref": "#/components/schemas/DisaggregationHistoryBudgetDTO"
                    }
                },
                "type": "object"
            },
            "DisaggregationHistoryResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/DisaggregationHistoryDataDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventsDailyDataDTO": {
                "required": [
                    "Total"
                ],
                "properties": {
                    "Total": {
                        "description": "The usage of the appliance in kWh.",
                        "type": "number"
                    }
                },
                "type": "object",
                "additionalProperties": {
                    "description": "The list of appliance events items for this activity.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/components/schemas/EventsDailyUsageDTO"
                    }
                }
            },
            "EventsDailyResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp",
                    "day"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/EventsDailyDataDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    },
                    "day": {
                        "description": "The day for which we requested data in “YYYY-MM-DD” format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventsDailyUsageDTO": {
                "required": [
                    "usage",
                    "cost"
                ],
                "properties": {
                    "usage": {
                        "description": "The usage of the appliance in kWh.",
                        "type": "number"
                    },
                    "cost": {
                        "description": "The cost of the usage.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "EventsHourlyDataDTO": {
                "required": [
                    "Total"
                ],
                "properties": {
                    "Total": {
                        "description": "The usage of the appliance in kWh.",
                        "type": "number"
                    }
                },
                "type": "object",
                "additionalProperties": {
                    "description": "The list of appliance events items for this activity.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventsHourlyUsageDTO"
                        }
                    }
                }
            },
            "EventsHourlyResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/EventsHourlyDataDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventsHourlyUsageDTO": {
                "required": [
                    "timestamp_start",
                    "timestamp_stop",
                    "usage",
                    "cost"
                ],
                "properties": {
                    "timestamp_start": {
                        "description": "The timestamp when the appliance event started (Y-m-dTH:m:s+timezone).",
                        "type": "string"
                    },
                    "timestamp_stop": {
                        "description": "The timestamp when the appliance event ended (Y-m-dTH:m:s+timezone).",
                        "type": "string"
                    },
                    "usage": {
                        "description": "The usage of the appliance in kWh.",
                        "type": "number"
                    },
                    "cost": {
                        "description": "The cost of the usage.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "EventsSummaryDataDTO": {
                "required": [
                    "count",
                    "usage",
                    "cost"
                ],
                "properties": {
                    "count": {
                        "description": "The total count of the events.",
                        "type": "integer"
                    },
                    "usage": {
                        "description": "The total usage in kWh.",
                        "type": "number"
                    },
                    "cost": {
                        "description": "The total cost of the usage.",
                        "type": "number"
                    },
                    "first_event": {
                        "description": "The timestamp of the start of the first event.",
                        "type": "string"
                    },
                    "last_event": {
                        "description": "The timestamp of the start of the last event.",
                        "type": "string"
                    }
                },
                "type": "object",
                "additionalProperties": {
                    "description": "The list of appliance events items for this activity.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/components/schemas/EventsSummaryUsageDTO"
                    }
                }
            },
            "EventsSummaryResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/EventsSummaryDataDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventsSummaryUsageDTO": {
                "required": [
                    "count",
                    "usage",
                    "cost"
                ],
                "properties": {
                    "count": {
                        "description": "The count of the events.",
                        "type": "integer"
                    },
                    "usage": {
                        "description": "The usage of the appliance in kWh.",
                        "type": "number"
                    },
                    "cost": {
                        "description": "The cost of the usage.",
                        "type": "number"
                    },
                    "first_event": {
                        "description": "The timestamp of the start of the first event.",
                        "type": "string"
                    },
                    "last_event": {
                        "description": "The timestamp of the start of the last event.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FeedinDailyDataDTO": {
                "required": [
                    "usage",
                    "cost",
                    "timestamp"
                ],
                "properties": {
                    "usage": {
                        "description": "The usage is Watts fed back into the grid.",
                        "type": "number",
                        "example": 43
                    },
                    "cost": {
                        "description": "The total cost of the feedin.",
                        "type": "number",
                        "example": 22.3
                    },
                    "timestamp": {
                        "description": "The current time in a timestamp form.",
                        "type": "string",
                        "example": "2022-11-21T00:00:00+01:00"
                    }
                },
                "type": "object"
            },
            "FeedinDailyResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/FeedinDailyDataDTO"
                    }
                },
                "type": "object"
            },
            "GetFeedinDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetFeedinDataDTO"
                        }
                    }
                },
                "type": "object"
            },
            "GetFeedinDataDTO": {
                "required": [
                    "timestamp"
                ],
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "example": "2022-11-21T00:00:00+01:00"
                    },
                    "measured": {
                        "type": "number",
                        "example": 233
                    },
                    "cost_measured": {
                        "type": "number",
                        "example": 0
                    },
                    "calculated": {
                        "type": "number",
                        "example": 0
                    },
                    "cost_calculated": {
                        "type": "number",
                        "example": 0
                    },
                    "fixed_cost": {
                        "type": "number",
                        "example": 0
                    }
                },
                "type": "object"
            },
            "FeedtypeDataDTO": {
                "required": [
                    "electricity",
                    "gas",
                    "amr_electricity",
                    "amr_gas"
                ],
                "properties": {
                    "electricity": {
                        "type": "integer"
                    },
                    "gas": {
                        "type": "integer"
                    },
                    "amr_electricity": {
                        "type": "integer"
                    },
                    "amr_gas": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "GetFeedtypeResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/FeedtypeDataDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HomestateConfigDTO": {
                "required": [
                    "thresholds",
                    "hyperthreshold_timestamp"
                ],
                "properties": {
                    "thresholds": {
                        "description": "Contains the threshold values (Chill, Normal, Hyper).",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            232,
                            398,
                            671
                        ]
                    },
                    "hyperthreshold_timestamp": {
                        "description": "Contains the hyperactive threshold timestamp in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HomestateConfigResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/HomestateConfigDTO"
                    }
                },
                "type": "object"
            },
            "HomestateCurrentDTO": {
                "required": [
                    "current_zone",
                    "since"
                ],
                "properties": {
                    "current_zone": {
                        "description": "The ID of the home state zone:\n0: Chill\n1: Normal\n2: High\n3: Hyper\n4: Unknown",
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    "since": {
                        "description": "Last change of current_zone in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HomestateCurrentResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/HomestateCurrentDTO"
                    }
                },
                "type": "object"
            },
            "GetInitialisationResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ProfileDTO"
                    }
                },
                "type": "object"
            },
            "InitialisationDataDTO": {
                "required": [
                    "labelpartner",
                    "labelpartner_id",
                    "context_id",
                    "customer_name",
                    "product_name",
                    "timezone",
                    "hardware_version",
                    "firmware_version",
                    "meter_serial_number",
                    "smartbridge_mac",
                    "layer",
                    "has_electricity_meter",
                    "has_amr_electricity_meter",
                    "has_gas_meter",
                    "has_amr_gas_meter",
                    "opt_in",
                    "meter_unit_electricity_usage",
                    "meter_unit_gas_usage",
                    "electricity_current_usage",
                    "currency",
                    "electricity_usage",
                    "gas_usage",
                    "meter_status_electricity",
                    "install_code",
                    "gateway_ip"
                ],
                "properties": {
                    "labelpartner": {
                        "description": "The labelpartner's name.",
                        "type": "string"
                    },
                    "labelpartner_id": {
                        "description": "The labelpartner of the user (internal id).",
                        "type": "integer"
                    },
                    "context_id": {
                        "type": "integer"
                    },
                    "customer_name": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "product_name": {
                        "description": "The name of the energy product.",
                        "type": "string"
                    },
                    "timezone": {
                        "description": "The name of user's timezone, used for conversions from UTC to local time.",
                        "type": "string"
                    },
                    "hardware_version": {
                        "description": "The hardware version of the SmartBridge.",
                        "type": "string"
                    },
                    "firmware_version": {
                        "description": "The firmware version of the SmartBridge.",
                        "type": "string"
                    },
                    "meter_serial_number": {
                        "description": "The meter serial number of electricity meter",
                        "type": "string"
                    },
                    "smartbridge_mac": {
                        "type": "string"
                    },
                    "layer": {
                        "description": "The layer which the user is in.",
                        "type": "string"
                    },
                    "has_electricity_meter": {
                        "description": "Returns 1 if a user has an electricity meter.",
                        "type": "integer"
                    },
                    "has_amr_electricity_meter": {
                        "description": "Returns 1 if a user has an amr electricity meter.",
                        "type": "integer"
                    },
                    "has_gas_meter": {
                        "description": "Returns 1 if a user has an gas meter.",
                        "type": "integer"
                    },
                    "has_amr_gas_meter": {
                        "description": "Returns 1 if a user has an amr gas meter.",
                        "type": "integer"
                    },
                    "opt_in": {
                        "description": "Retuns 1 if a user is opt in.",
                        "type": "integer"
                    },
                    "meter_unit_electricity_usage": {
                        "description": "Unit for electricity consumption metering (“Wh”).",
                        "type": "string"
                    },
                    "meter_unit_gas_usage": {
                        "description": "Unit for gas consumption metering (“m3”).",
                        "type": "string"
                    },
                    "electricity_current_usage": {
                        "description": "Unit for electricity power metering (“W”).",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Currency (“Euro”,” Yen”, “Dollar”,”Pound”).",
                        "type": "string"
                    },
                    "electricity_usage": {
                        "description": "Units to be used for visualisations of electricity consumption (“kWh”).",
                        "type": "string"
                    },
                    "gas_usage": {
                        "description": "Units to be used for visualisations of gas consumption (“M3”).",
                        "type": "string"
                    },
                    "meter_status_electricity": {
                        "description": "The status of electricity meter connection. Values: 0: meter connected, 1: meter not connected, 255: meter never connected",
                        "type": "integer"
                    },
                    "install_code": {
                        "description": "The meter install code.",
                        "type": "string"
                    },
                    "gateway_ip": {
                        "description": "The IP of the Gateway.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProfileDTO": {
                "required": [
                    "profile"
                ],
                "properties": {
                    "profile": {
                        "$ref": "#/components/schemas/InitialisationDataDTO"
                    }
                },
                "type": "object"
            },
            "HasEfficiencies": {
                "properties": {
                    "overall_efficiency_score": {
                        "type": "integer"
                    },
                    "appliance_efficiency_score": {
                        "type": "integer"
                    },
                    "usage_efficiency_score": {
                        "type": "integer"
                    },
                    "overall_eei": {
                        "type": "integer"
                    },
                    "appliance_eei": {
                        "type": "integer"
                    },
                    "usage_eei": {
                        "type": "integer"
                    },
                    "frequency": {
                        "type": "integer"
                    },
                    "mean_energy": {
                        "type": "number"
                    },
                    "mode_temperature": {
                        "type": "integer"
                    },
                    "mean_duration": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InsightReportDataDTO": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/HasEfficiencies"
                    },
                    {
                        "properties": {
                            "status": {
                                "type": "string"
                            },
                            "relevance": {
                                "type": "number"
                            },
                            "is_positive": {
                                "type": "boolean"
                            },
                            "benchmark": {
                                "type": "number"
                            },
                            "usage": {
                                "type": "number"
                            },
                            "delta_kwh": {
                                "type": "number"
                            },
                            "delta_perc": {
                                "type": "number"
                            },
                            "last_updated": {
                                "type": "string"
                            },
                            "recommendations": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "InsightResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/InsightTypeReportDTO"
                        }
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InsightTimeOfUseReportDTO": {
                "properties": {
                    "total": {
                        "$ref": "#/components/schemas/InsightReportDataDTO"
                    },
                    "peak": {
                        "$ref": "#/components/schemas/InsightReportDataDTO"
                    }
                },
                "type": "object"
            },
            "InsightTypeReportDTO": {
                "properties": {
                    "peer": {
                        "$ref": "#/components/schemas/InsightTimeOfUseReportDTO"
                    },
                    "self": {
                        "$ref": "#/components/schemas/InsightTimeOfUseReportDTO"
                    }
                },
                "type": "object"
            },
            "InstantaneousApplianceDTO": {
                "required": [
                    "power",
                    "appliance_instance_id"
                ],
                "properties": {
                    "power": {
                        "description": "Approximation of the instantaneous demand that is used by the appliance category in W.",
                        "type": "number"
                    },
                    "appliance_instance_id": {
                        "description": "Appliance category for which the power is reported. The applicable values are: AON,Solar,REF,LIG,ENT,WM,IH,EV,APP,OTH",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstantaneousAppliancesDataDTO": {
                "required": [
                    "timestamp",
                    "electricity",
                    "appliances"
                ],
                "properties": {
                    "timestamp": {
                        "description": "Timestamp when response to API call was returned from platform.",
                        "type": "number"
                    },
                    "electricity": {
                        "$ref": "#/components/schemas/InstantaneousAppliancesElectricityDTO"
                    },
                    "appliances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstantaneousApplianceDTO"
                        }
                    }
                },
                "type": "object"
            },
            "InstantaneousAppliancesElectricityDTO": {
                "required": [
                    "power",
                    "L1",
                    "L2",
                    "L3"
                ],
                "properties": {
                    "power": {
                        "description": "The last instantaneous demand delivered as reported by the electricity meter in W.",
                        "type": "number"
                    },
                    "L1": {
                        "description": "The last instantaneous demand delivered as reported by the electricity meter for endpoint EP 0x1f (phase 1) in W",
                        "type": "number"
                    },
                    "L2": {
                        "description": "TThe last instantaneous demand delivered as reported by the electricity meter for endpoint EP 0x20 (phase 2) in W.",
                        "type": "number"
                    },
                    "L3": {
                        "description": "The last instantaneous demand delivered as reported by the electricity meter for endpoint EP 0x21 (phase 3) in W.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "InstantaneousAppliancesResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/InstantaneousAppliancesDataDTO"
                    }
                },
                "type": "object"
            },
            "InstantaneousDemandDTO": {
                "required": [
                    "timestamp"
                ],
                "properties": {
                    "ranges": {
                        "$ref": "#/components/schemas/InstantaneousRangesDTO"
                    },
                    "electricity": {
                        "$ref": "#/components/schemas/InstantaneousElectricityDTO"
                    },
                    "gas": {
                        "$ref": "#/components/schemas/InstantaneousGasDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of when response to API call was returned from platform in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstantaneousDemandResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/InstantaneousDemandDTO"
                    }
                },
                "type": "object"
            },
            "InstantaneousElectricityDTO": {
                "properties": {
                    "power": {
                        "description": "The last instantaneous demand delivered as reported by the electricity meter in W.",
                        "type": "number"
                    },
                    "current_summation": {
                        "description": "The latest consumption metering registration measured in Wh.",
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Timestamp for last received result in electricity block in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstantaneousGasDTO": {
                "properties": {
                    "gas_hourly": {
                        "description": "Average gas consumption metering value per hour in liters.",
                        "type": "number"
                    },
                    "current_summation": {
                        "description": "The latest consumption metering registration measured in liters.",
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Timestamp for last received result in gas block in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstantaneousPhasesDataDTO": {
                "properties": {
                    "power_min": {
                        "description": "The lowest reported instantaneous demand delivered as reported in the requested period of time, measured in Watts (W).",
                        "type": "number"
                    },
                    "power_max": {
                        "description": "The highest reported instantaneous demand delivered as reported in the requested period of time, measured in Watts (W).",
                        "type": "number"
                    },
                    "power_avg": {
                        "description": "The average reported instantaneous demand delivered as reported in the requested period of time, measured in Watts (W).",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "InstantaneousPhasesResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "description": "An array containing all the data, in case of 3-phases the array has 4 elements namely L1, L2,L3 and the total data, in case of 1-phase the array has only the total data.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstantaneousPhasesDataDTO"
                        }
                    }
                },
                "type": "object"
            },
            "InstantaneousPowerDTO": {
                "required": [
                    "results"
                ],
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstantaneousPowerResultsDTO"
                        }
                    },
                    "ranges": {
                        "$ref": "#/components/schemas/InstantaneousPowerRangesDTO"
                    }
                },
                "type": "object"
            },
            "InstantaneousPowerRangesDTO": {
                "properties": {
                    "power_min": {
                        "description": "The lowest reported instantaneous demand delivered as reported in the last 24 hours in W.",
                        "type": "number"
                    },
                    "power_max": {
                        "description": "The highest reported instantaneous demand delivered as reported in the last 24 hours in W. If no values can be found an empty array will be returned.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "InstantaneousPowerResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/InstantaneousPowerDTO"
                    }
                },
                "type": "object"
            },
            "InstantaneousPowerResultsDTO": {
                "properties": {
                    "power": {
                        "description": "The instantaneous demand delivered in W.",
                        "type": "number"
                    },
                    "timestamp": {
                        "description": "The timestamp of when the instantaneous demand was recorded.",
                        "type": "string",
                        "example": "2022-08-01T00:12:00+10:00"
                    }
                },
                "type": "object"
            },
            "InstantaneousRangesDTO": {
                "properties": {
                    "power_min": {
                        "description": "The lowest reported instantaneous demand delivered as reported in the last 12 hours in W. If there is no IDD\ndelivered in the last 12 hours, no value will be reported.",
                        "type": "integer"
                    },
                    "power_max": {
                        "description": "The highest reported instantaneous demand delivered as reported in the last 12 hours in W. If there is no IDD\ndelivered in the last 12 hours, no value will be reported.",
                        "type": "integer"
                    },
                    "gas_hour_low": {
                        "description": "Lowest hourly gas consumption in the last 30 days. In case that a Gas meter is present but no consumption is\navailable in the last 30 days, default value is 0. It is measured in m3.",
                        "type": "number"
                    },
                    "gas_hour_high": {
                        "description": "Highest hourly gas consumption in the last 30 days. In case that a Gas meter is present but no consumption is\navailable in the last 30 days,default value is 2. It is measured in m3.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "LanTokenDataDTO": {
                "properties": {
                    "user_lan_token": {
                        "description": "Lan token of user. It is used for calls to the gateway using the LAN API.",
                        "type": "string"
                    },
                    "expires_in": {
                        "description": "Token expiration time in seconds (max 24hrs).",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "LanTokenResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/LanTokenDataDTO"
                    }
                },
                "type": "object"
            },
            "ConnectedWithMeterDTO": {
                "properties": {
                    "inclusion": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactWithMeterDTO": {
                "properties": {
                    "connection": {
                        "type": "boolean"
                    },
                    "activation_counter": {
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DLMSAuthRequestDTO": {
                "properties": {
                    "encryption_key": {
                        "type": "string"
                    },
                    "authentication_key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MeDAAuthRequestDTO": {
                "properties": {
                    "activation_code": {
                        "type": "string"
                    },
                    "iv": {
                        "type": "string"
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "info_counter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MeterAuthRequestDTO": {
                "properties": {
                    "power_pal": {
                        "$ref": "#/components/schemas/PowerPalAuthRequestDTO"
                    },
                    "serial_number": {
                        "type": "string"
                    },
                    "meda": {
                        "$ref": "#/components/schemas/MeDAAuthRequestDTO"
                    },
                    "smart_reader": {
                        "$ref": "#/components/schemas/SmartReaderAuthRequestDTO"
                    },
                    "dlms": {
                        "$ref": "#/components/schemas/DLMSAuthRequestDTO"
                    }
                },
                "type": "object"
            },
            "MeterElectricityDataDTO": {
                "properties": {
                    "CSD": {
                        "description": "The mains offtake meter reading.",
                        "type": "integer"
                    },
                    "T1D": {
                        "description": "The offtake meter reading for Tier 1 (Day or Night).",
                        "type": "integer"
                    },
                    "T2D": {
                        "description": "The offtake meter reading for Tier 2 (Night or Day).",
                        "type": "integer"
                    },
                    "CSR": {
                        "description": "The mains feed-in meter reading.",
                        "type": "integer"
                    },
                    "T1R": {
                        "description": "The feed-in meter reading for Tier 1 (Day or Night).",
                        "type": "integer"
                    },
                    "T2R": {
                        "description": "The feed-in meter reading for Tier 2 (Night or Day).",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MeterGasDataDTO": {
                "properties": {
                    "CSD": {
                        "description": "The offtake meter reading.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MeterInfoDataDTO": {
                "properties": {
                    "Electricity": {
                        "$ref": "#/components/schemas/MeterElectricityDataDTO"
                    },
                    "Gas": {
                        "$ref": "#/components/schemas/MeterGasDataDTO"
                    },
                    "Serialnumber": {
                        "description": "The serial number of the meter.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MeterInfoResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MeterInfoDataDTO"
                    }
                },
                "type": "object"
            },
            "MeterStatusDTO": {
                "properties": {
                    "meter_txrssi": {
                        "type": "integer"
                    },
                    "wlan_rssi": {
                        "type": "integer"
                    },
                    "lora_mode": {
                        "type": "integer"
                    },
                    "current_status": {
                        "type": "string"
                    },
                    "ready_for_meter_inclusion": {
                        "$ref": "#/components/schemas/ReadyForMeterInclusionDTO"
                    },
                    "contact_with_meter": {
                        "$ref": "#/components/schemas/ContactWithMeterDTO"
                    },
                    "connected_with_meter": {
                        "$ref": "#/components/schemas/ConnectedWithMeterDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MeterStatusResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MeterStatusDTO"
                    }
                },
                "type": "object"
            },
            "PowerPalAuthRequestDTO": {
                "properties": {
                    "pairing_code": {
                        "type": "string"
                    },
                    "implulse_rate": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ReadyForMeterInclusionDTO": {
                "properties": {
                    "inclusion_started": {
                        "type": "boolean"
                    },
                    "KMS_activation_counter": {
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SmartReaderAuthRequestDTO": {
                "properties": {
                    "pincode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConnectDTO": {
                "description": "Is present when the commissioning process of the SmartBridge and the MeDA meter has completed successfully and the SmartBridge can receive consumption data from the meter.",
                "properties": {
                    "active": {
                        "description": "When the connection is successful and consumption data is received.",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "The SmartBridge status. 0 means that the connection is successful. Any other value signifies that an issue is present.",
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.\nThe timestamp when the last SmartBridge status was reported by the SmartBridge.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactDTO": {
                "description": "Is present when the KMS activation process has started, but the commissioning has not completely established yet.",
                "properties": {
                    "active": {
                        "description": "Shows that the radio negotiation between the meter and the SmartBridge has completed and the activation counter received by the meter is the same with the KMS activation counter.",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "The value of the activation counter received by the MeDA meter.",
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.\nThe timestamp when the last activation counter was received from the meter.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ElectricityEmptyDTO": {
                "properties": {
                    "electricity": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ElectricityMedaDTO": {
                "properties": {
                    "electricity": {
                        "$ref": "#/components/schemas/MedaDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ElectricityOpticalSmartbridgeDTO": {
                "properties": {
                    "electricity": {
                        "$ref": "#/components/schemas/OpticalSmartbridgeDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ElectricitySmartReaderDTO": {
                "properties": {
                    "electricity": {
                        "$ref": "#/components/schemas/SmartReaderDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InclusionDTO": {
                "description": "This object provides information about the commissioning progress between a SmartBridge and a MeDA meter. It is present when the radio negotiation between the two devices has not yet completed.",
                "properties": {
                    "active": {
                        "description": "True when the KMS keys were received by the KMS service and the KMS activation counter is greater than 0.",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "The value of the KMS activation counter.",
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.\nThe timestamp when the last KMS activation counter was received from the KMS service.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MedaAttributesDTO": {
                "properties": {
                    "wlan_rssi": {
                        "description": "WLAN Receive Signal Strength (Defaults to 0).",
                        "type": "integer"
                    },
                    "meter_trx_rssi": {
                        "description": "Uplink Signal Strength (Defaults to 0).",
                        "type": "integer"
                    },
                    "lora_mode": {
                        "description": "Lora spreading factor setting (Defaults to 0).",
                        "type": "integer"
                    },
                    "KMS_activation_counter": {
                        "description": "Activation Counter received from KMS.",
                        "type": "integer"
                    },
                    "activation_counter": {
                        "description": "Meter Activation Counter.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MedaDTO": {
                "properties": {
                    "meda": {
                        "$ref": "#/components/schemas/MedaAttributesDTO"
                    },
                    "inclusion": {
                        "$ref": "#/components/schemas/InclusionDTO"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/ContactDTO"
                    },
                    "connect": {
                        "$ref": "#/components/schemas/ConnectDTO"
                    },
                    "meter_reader_connection_type": {
                        "description": "The type of meter (powerpal, smartreader, meda).",
                        "type": "string",
                        "enum": [
                            "powerpal",
                            "smartreader",
                            "meda"
                        ]
                    },
                    "current_status": {
                        "description": "The current status of the meter </br>\nINITIAL: The MeDA Meter was identified but it hasn’t reported all the required attributes yet or valid KMS haven’t been sent by the platform.</br>\nREADY_FOR_METER_INCLUSION: The gateway did receive a valid KMS key from the platform to start the inclusion process. </br>\nCONTACT_WITH_METER: The activation counter of the gateway and the KMS are the same so it was verified that the gateway can contact the meter. </br>\nCONNECTED_WITH_METER: The meter status is only set to 0 when the full inclusion and configuration cycle is complete.",
                        "type": "string",
                        "enum": [
                            "INITIAL",
                            "READY_FOR_METER_INCLUSION",
                            "CONTACT_WITH_METER",
                            "CONNECTED_WITH_METER"
                        ]
                    }
                },
                "type": "object"
            },
            "MeterReaderCommissionRequestDTO": {
                "required": [
                    "mac_address"
                ],
                "properties": {
                    "mac_address": {
                        "description": "Mac address of the meter reader",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MeterReaderStatusEmptyResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ElectricityEmptyDTO"
                    }
                },
                "type": "object"
            },
            "MeterReaderStatusMedaResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ElectricityMedaDTO"
                    }
                },
                "type": "object"
            },
            "MeterReaderStatusSmartReaderResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ElectricitySmartReaderDTO"
                    }
                },
                "type": "object"
            },
            "OpticalSmartbridgeDTO": {
                "properties": {
                    "current_status": {
                        "description": "The current status of the meter </br>VERIFYING_PIN: The process of unlocking the meter using the PIN code is in progress </br>CONNECTED_WITH_METER: The gateway is successfully connected to the meter and receives meter data </br>PIN_FAILED: The meter unlock process has failed </br>CONTACT_NO_DATA_FROM_METER: Connection with the meter is fine but the meter doesn't report any data due to a connection error e.g. probe error </br>CONTACT_WRONG_METER_SERIAL: The SmartBridge is connected to the meter but the meter serial number reported is not the same with the provisioned one </br>UNKNOWN_ERROR: An unexpected error has occurred </br>",
                        "type": "string",
                        "enum": [
                            "CONNECTED_WITH_METER",
                            "CONTACT_NO_DATA_FROM_METER",
                            "CONTACT_WRONG_METER_SERIAL",
                            "PIN_FAILED",
                            "VERIFYING_PIN",
                            "UNKNOWN_ERROR"
                        ]
                    },
                    "meter_id_read": {
                        "description": "The meter ID reported by the gateway.",
                        "type": "string"
                    },
                    "meter_id_provisioned": {
                        "description": "The customer's meter ID.",
                        "type": "string"
                    },
                    "pin_entry_mode": {
                        "description": "The actions/modes that can unlock the meter and enable it.</br>1. optical: The meter can be unlocked via the optical interface of the SmartBridge without any user intervention. </br>2. manual_push_button: The meter can be unlocked via manual user intervention, using the relevant button(s) on the meter itself. </br>3. manual_torch: The meter can be unlocked by the end user, via light signals from a torch or a flashlight. </br>4. NA: The meter doesn't have to be unlocked or this feature is irrelevant to the existing meter. </br>5. unknown: The unlocking procedure of the meter is unknown to NET2GRID. </br>",
                        "type": "string",
                        "enum": [
                            "optical",
                            "manual_push_button",
                            "manual_torch",
                            "NA",
                            "unknown"
                        ]
                    },
                    "pincode": {
                        "description": "The pincode that is set and reported by the gateway.",
                        "type": "string"
                    },
                    "key_retries": {
                        "description": "The number of attempts to unlock the meter after the last unlock request.",
                        "type": "string"
                    },
                    "meter_unlocked": {
                        "description": "Signifies whether the meter is unlocked or not.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "OpticalSmartbridgeStatusResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ElectricityOpticalSmartbridgeDTO"
                    }
                },
                "type": "object"
            },
            "SmartReaderAttributesDTO": {
                "properties": {
                    "meter_id_read": {
                        "description": "The meter ID reported by the gateway.",
                        "type": "string"
                    },
                    "meter_id_provisioned": {
                        "description": "The customer’s meter ID.",
                        "type": "string"
                    },
                    "pin_entry_mode": {
                        "description": "The actions/modes that can unlock the meter and enable it.</br>\n1. optical: The meter can be unlocked via the optical interface of the smart reader without any user intervention. </br>\n2. manual_push_button: The meter can be unlocked via manual user intervention, using the relevant button(s) on the meter itself. </br>\n3. manual_torch: The meter can be unlocked by the end user, via light signals from a torch or a flashlight. </br>\n4. NA: The meter doesn't have to be unlocked or this feature is irrelevant to the existing meter. </br>\n5. unknown: The unlocking procedure of the meter is unknown to NET2GRID. </br>",
                        "type": "string",
                        "enum": [
                            "optical",
                            "manual_push_button",
                            "manual_torch",
                            "NA",
                            "unknown"
                        ]
                    },
                    "pincode": {
                        "description": "The pincode that is set and reported by the gateway.",
                        "type": "string"
                    },
                    "mode": {
                        "description": "The reporting mode that the meter reader uses to report data to the platform.",
                        "type": "string",
                        "enum": [
                            "RT",
                            "AMR",
                            "RT_INACTIVE",
                            "LC",
                            "STATUS",
                            "THRESHOLD",
                            "UNKNOWN"
                        ]
                    },
                    "key_retries": {
                        "description": "The number of attempts to unlock the meter after the last unlock request.",
                        "type": "string"
                    },
                    "meter_unlocked": {
                        "description": "Signifies whether the meter is unlocked or not.",
                        "type": "boolean"
                    },
                    "key_data_configured": {
                        "description": "Signifies whether the meter key data configuration has been stored in the gateway.",
                        "type": "boolean"
                    },
                    "signal_strength": {
                        "description": "Downlink Signal Strength.",
                        "type": "integer"
                    },
                    "battery_status": {
                        "description": "The state of the battery:</br>\n0: external power supply </br>\n1: Alarm </br>\n2: Low </br>\n3: Okay </br>\n4: Good </br>\n5: Excellent",
                        "type": "integer",
                        "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5"
                        ]
                    },
                    "firmware_status": {
                        "description": "The firmware status for the meter reader.",
                        "type": "string",
                        "enum": [
                            "OK",
                            "UPDATE_AVAILABLE",
                            "CHECKING"
                        ]
                    },
                    "firmware_update_progress": {
                        "description": "The progress of firmware update as integer value 0-100. This field will be displayed only if current_status=UPDATE_INSTALLING.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SmartReaderDTO": {
                "properties": {
                    "smartreader": {
                        "$ref": "#/components/schemas/SmartReaderAttributesDTO"
                    },
                    "meter_reader_connection_type": {
                        "description": "The type of meter (powerpal, smartreader, meda).",
                        "type": "string"
                    },
                    "current_status": {
                        "description": "The current status of the meter </br>\nINITIAL: The SmartReader was identified but it hasn’t reported all the required attributes yet or the radio link reported an error </br>\nREADY_FOR_METER_INCLUSION: The gateway hasn’t been connected to a smart reader </br>\nCOMMISSION_IN_PROGRESS: The smart reader is being commissioned with the gateway </br>\nVERIFYING_PIN: The process of unlocking the meter using the PIN code is in progress </br>\nCONNECTED_WITH_METER: The gateway is successfully connected to the meter and receives meter data </br>\nPIN_FAILED: The meter unlock process has failed </br>\nCONTACT_NO_DATA_FROM_METER: Connection with the smart reader is fine but the meter doesn’t report any data due to a connection error e.g. probe error </br>\nCONTACT_WRONG_METER_SERIAL: This status will be returned when the meter serial number set to the gateway is different from the one that is read by the smart reader </br>\nRADIO_LINK_LOST: The radio connection between the smart reader and the gateway is lost </br>\nUNKNOWN_ERROR: An unexpected error has occurred </br>\nUPDATE_INSTALLING: A firmware update is being installed </br>",
                        "type": "string",
                        "enum": [
                            "INITIAL",
                            "READY_FOR_METER_INCLUSION",
                            "COMMISSION_IN_PROGRESS",
                            "VERIFYING_PIN",
                            "CONNECTED_WITH_METER",
                            "PIN_FAILED",
                            "CONTACT_NO_DATA_FROM_METER",
                            "RADIO_LINK_LOST",
                            "UNKNOWN_ERROR",
                            "UPDATE_INSTALLING"
                        ]
                    }
                },
                "type": "object"
            },
            "FirstLastValuesDataDTO": {
                "required": [
                    "first_value",
                    "first_value_timestamp",
                    "last_value",
                    "last_value_timestamp",
                    "timestamp"
                ],
                "properties": {
                    "first_value": {
                        "description": "First value of the time series.",
                        "type": "integer"
                    },
                    "first_value_timestamp": {
                        "description": "The timestamp of the first value in ISO-8601 format.",
                        "type": "string"
                    },
                    "last_value": {
                        "description": "Last value of the time series.",
                        "type": "integer"
                    },
                    "last_value_timestamp": {
                        "description": "The timestamp of the last value in ISO-8601 format.",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "The timestamp of the call in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FirstLastValuesResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/FirstLastValuesDataDTO"
                    }
                },
                "type": "object"
            },
            "MigrateUserBodyDTO": {
                "required": [
                    "email_address",
                    "old_password",
                    "new_password",
                    "new_password_confirmed"
                ],
                "properties": {
                    "email_address": {
                        "description": "Email address of user to be migrated",
                        "type": "string"
                    },
                    "old_password": {
                        "description": "The current password of the user",
                        "type": "string"
                    },
                    "new_password": {
                        "description": "New password of user",
                        "type": "string"
                    },
                    "new_password_confirmed": {
                        "description": "User confirms his new password with the same value.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NilmAppliancesStatusReportDTO": {
                "properties": {
                    "available": {
                        "type": "boolean"
                    },
                    "profileComplete": {
                        "type": "boolean"
                    },
                    "profileAdded": {
                        "type": "boolean"
                    },
                    "models": {
                        "type": "integer"
                    },
                    "attemptsLeft": {
                        "type": "integer"
                    },
                    "timestamp": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NilmNonTimeBasedActivitiesStatusReportDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NilmAppliancesStatusReportDTO"
                    }
                ]
            },
            "NilmNonTimeBasedAppliancesStatusReportDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NilmAppliancesStatusReportDTO"
                    }
                ]
            },
            "NilmServicesStatusReportDTO": {
                "properties": {
                    "available": {
                        "type": "boolean"
                    },
                    "profileComplete": {
                        "type": "boolean"
                    },
                    "monthComplete": {
                        "type": "boolean"
                    },
                    "timestamp": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NilmStatusReportDTO": {
                "properties": {
                    "nilmStatus": {
                        "type": "integer"
                    },
                    "goodDataDays": {
                        "type": "integer"
                    },
                    "poorDataDays": {
                        "type": "integer"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NilmServicesStatusReportDTO"
                        }
                    },
                    "nonTimeBasedAppliances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NilmNonTimeBasedAppliancesStatusReportDTO"
                        }
                    },
                    "timeBasedAppliances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NilmTimeBasedAppliancesStatusReportDTO"
                        }
                    },
                    "nonTimeBasedActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NilmNonTimeBasedActivitiesStatusReportDTO"
                        }
                    },
                    "retrainSchedule": {
                        "type": "array",
                        "items": {}
                    },
                    "date": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NilmStatusReportResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/NilmStatusReportDTO"
                    }
                },
                "type": "object"
            },
            "NilmTimeBasedAppliancesStatusReportDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NilmAppliancesStatusReportDTO"
                    }
                ]
            },
            "GetChannelStatusDataDTO": {
                "properties": {
                    "enabled": {
                        "description": "Indicates whether the notification of the provided channel type is enabled or not",
                        "type": "boolean"
                    },
                    "mutedTopics": {
                        "description": "Contains the topics that are muted for the provided channel in a comma separated string",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "GetChannelStatusResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/GetChannelStatusDataDTO"
                    }
                },
                "type": "object"
            },
            "GetMessagesDataDTO": {
                "properties": {
                    "object_id": {
                        "description": "The object_id for the specific message, the same message_code can appear multiple times",
                        "type": "integer"
                    },
                    "message_code": {
                        "description": "The identifier for the specific message",
                        "type": "string"
                    },
                    "is_read": {
                        "description": "Indicates the current message status, if it is read or not",
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "The time the message was sent to the user (in Y-m-dTH:i:s+timezone for example: 2016-09-07T19:27:08+02:00)",
                        "type": "string"
                    },
                    "category": {
                        "description": "The category of the inbox message. Can be report|system",
                        "type": "string"
                    },
                    "attributes": {
                        "description": "Optional array of key/value attributes",
                        "type": "object"
                    },
                    "attachments": {
                        "description": "Optional object of key/value attributes. Key can be used to specify the name of the downloaded file",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetMessagesResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetMessagesDataDTO"
                        }
                    }
                },
                "type": "object"
            },
            "GetPushCheckDataDTO": {
                "required": [
                    "push"
                ],
                "properties": {
                    "push": {
                        "description": "Checking whether push notifications are enabled or not.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "GetPushCheckResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/GetPushCheckDataDTO"
                    }
                },
                "type": "object"
            },
            "PostDispatchNotificationBodyDTO": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "description": "The identifier for the specific message",
                        "type": "string"
                    },
                    "attributes": {
                        "description": "The extra attributes that can be specified for the notification that will be sent.\nEach element should contain the “name” of the attribute and the “value”.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "gateway_eui": {
                        "description": "The Gateway EUI the notification corresponds to. When provided, it can be used as the recipient identifier\nof the notification to be dispatched.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PostNotificationPushBodyDTO": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "description": "The identifier for the specific message",
                        "type": "string"
                    },
                    "gateway_eui": {
                        "description": "The Gateway EUI the notification corresponds to. When provided, it can be used as the recipient identifier\nof the notification to be dispatched.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PutChannelDisableDTO": {
                "required": [
                    "channel"
                ],
                "properties": {
                    "device_id": {
                        "description": "The identifier of the device that wants to receive push notifications",
                        "type": "string"
                    },
                    "channel": {
                        "description": "The channel for which push needs to be disabled",
                        "type": "string",
                        "enum": [
                            "INBOX",
                            "MOBILE_PUSH",
                            "EMAIL",
                            "REST"
                        ]
                    }
                },
                "type": "object"
            },
            "PutChannelEnableDTO": {
                "required": [
                    "channel"
                ],
                "properties": {
                    "device_id": {
                        "description": "The identifier of the device that wants to receive push notifications",
                        "type": "string"
                    },
                    "device_type": {
                        "description": "Identifies the type of device that wants to receive push notifications",
                        "type": "string",
                        "default": "ANDROID",
                        "enum": [
                            "ANDROID",
                            "IOS"
                        ]
                    },
                    "device_token": {
                        "description": "Token to use to gain permission to send push notifications to the device on the relevant platform (GCM or APNS)",
                        "type": "string"
                    },
                    "channel": {
                        "description": "The channel for which push needs to be disabled",
                        "type": "string",
                        "enum": [
                            "INBOX",
                            "MOBILE_PUSH",
                            "EMAIL",
                            "REST"
                        ]
                    },
                    "app_identifier": {
                        "description": "The identifier that is used when more than one app should be supported for ANDROID or IOS. The value defined here should be agreed with NET2GRID",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StopRepetitiveAlarmDTO": {
                "properties": {
                    "code": {
                        "description": "The code of the notification we want to cancel.",
                        "type": "string",
                        "enum": [
                            "OL002.1R"
                        ]
                    }
                },
                "type": "object"
            },
            "TopicBodyDTO": {
                "required": [
                    "channel",
                    "topic"
                ],
                "properties": {
                    "device_id": {
                        "description": "The identifier of the device that wants to interact with the topic",
                        "type": "string"
                    },
                    "channel": {
                        "description": "The channel for which topic will be muted/unmuted",
                        "type": "string",
                        "enum": [
                            "INBOX",
                            "MOBILE_PUSH",
                            "EMAIL",
                            "REST"
                        ]
                    },
                    "topic": {
                        "description": "The topic that will be muted/unmuted",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OptinStatusDTO": {
                "required": [
                    "enabled"
                ],
                "properties": {
                    "enabled": {
                        "description": "indicates whether Optin flag is enabled or not for user",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "OptinStatusResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/OptinStatusDTO"
                    }
                },
                "type": "object"
            },
            "PutOptinStatusDTO": {
                "required": [
                    "enable"
                ],
                "properties": {
                    "enable": {
                        "description": "indicates whether Optin flag is enabled or not for user",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "GetPlugRelayDataDTO": {
                "required": [
                    "relay",
                    "timestamp"
                ],
                "properties": {
                    "relay": {
                        "$ref": "#/components/schemas/RelayDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp at the time of execution in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetPlugRelayResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/GetPlugRelayDataDTO"
                    }
                },
                "type": "object"
            },
            "PlugRelayRequestDTO": {
                "required": [
                    "on_off"
                ],
                "properties": {
                    "on_off": {
                        "description": "On-off value of relay. 0 sets the relay state to Off, 1 sets the relay state to On, 2 toggles the relay state.",
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    }
                },
                "type": "object"
            },
            "RelayDTO": {
                "required": [
                    "on_off",
                    "timestamp"
                ],
                "properties": {
                    "on_off": {
                        "description": "On-off value of relay. 0 if the relay is off, 1 if the relay is on.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "timestamp": {
                        "description": "The UTC timestamp when the state was last reported by the Smart Plug in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PowerThresholdsConfigDataDTO": {
                "properties": {
                    "mains": {
                        "description": "The power thresholds configuration map for mains. The map keys are the thresholds that the user has previously\nset.",
                        "maxProperties": 4,
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ThresholdConfigDataDTO"
                        }
                    },
                    "phase_1": {
                        "description": "The power thresholds configuration map for phase 1. The map keys are the thresholds that the user has\npreviously set.",
                        "maxProperties": 2,
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ThresholdConfigDataDTO"
                        }
                    },
                    "phase_2": {
                        "description": "The power thresholds configuration map for phase 2. The map keys are the thresholds that the user has\npreviously set.",
                        "maxProperties": 2,
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ThresholdConfigDataDTO"
                        }
                    },
                    "phase_3": {
                        "description": "The power thresholds configuration map for phase 3. The map keys are the thresholds that the user has\npreviously set.",
                        "maxProperties": 2,
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ThresholdConfigDataDTO"
                        }
                    }
                },
                "type": "object"
            },
            "PowerThresholdsConfigResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/PowerThresholdsConfigDataDTO"
                    }
                },
                "type": "object"
            },
            "SetPowerThresholdsConfigDTO": {
                "properties": {
                    "mains": {
                        "description": "The power thresholds configuration map for mains. The map keys are the thresholds that are going to be updated.\nValid keys are \"threshold_0\", \"threshold_1\", \"threshold_2\", and \"threshold_3\".",
                        "maxProperties": 4,
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SetThresholdConfigDTO"
                        }
                    },
                    "phase_1": {
                        "description": "The power thresholds configuration map for phase 1. The map keys are the thresholds that are going to be\nupdated. Valid keys are \"threshold_0\" and \"threshold_1\".",
                        "maxProperties": 2,
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SetThresholdConfigDTO"
                        }
                    },
                    "phase_2": {
                        "description": "The power thresholds configuration map for phase 2. The map keys are the thresholds that are going to be\nupdated. Valid keys are \"threshold_0\" and \"threshold_1\".",
                        "maxProperties": 2,
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SetThresholdConfigDTO"
                        }
                    },
                    "phase_3": {
                        "description": "The power thresholds configuration map for phase 3. The map keys are the thresholds that are going to be\nupdated. Valid keys are \"threshold_0\" and \"threshold_1\".",
                        "maxProperties": 2,
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SetThresholdConfigDTO"
                        }
                    }
                },
                "type": "object"
            },
            "SetThresholdConfigDTO": {
                "required": [
                    "threshold_value",
                    "enabled",
                    "alert_type"
                ],
                "properties": {
                    "enabled": {
                        "description": "Indicates the status of power alerts configuration.",
                        "type": "boolean"
                    },
                    "threshold_value": {
                        "description": "Contains threshold value in Watts.",
                        "type": "integer"
                    },
                    "alert_type": {
                        "description": "Indicates whether the threshold is upper (the alert triggers when power exceeds the threshold), lower (the\nalert triggers when power falls below the threshold) or both upper and lower.",
                        "type": "string",
                        "enum": [
                            "upper",
                            "lower",
                            "both",
                            "none"
                        ]
                    },
                    "cooldown": {
                        "description": "Indicates the cooldown period, in seconds, between two consecutive reported alerts.\nThe default cooldown period is 15 seconds.",
                        "type": "integer"
                    },
                    "aggregation_method": {
                        "description": "Indicates the aggregation method to use (mean, mode, median, or none). The default aggregation method is \"mean\".",
                        "type": "string",
                        "enum": [
                            "mean",
                            "median",
                            "mode",
                            "none"
                        ]
                    },
                    "aggregation_sample_count": {
                        "description": "Indicates the number of samples to consider for aggregation, with a default configuration of 5 samples.",
                        "type": "integer"
                    },
                    "aggregation_sample_interval": {
                        "description": "Indicates the interval between samples, in seconds, for aggregation, with a default configuration of 1 second.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ThresholdConfigDataDTO": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SetThresholdConfigDTO"
                    },
                    {
                        "properties": {
                            "last_updated": {
                                "description": "The timestamp when the threshold was last updated.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "GetInstallationsSelectionResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstallationSelectionDTO"
                        }
                    }
                },
                "type": "object"
            },
            "GetPrimaryInstallationResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/InstallationSelectionDTO"
                    }
                },
                "type": "object"
            },
            "InstallationSelectionDTO": {
                "required": [
                    "external_installation_id",
                    "country_code",
                    "postal_code"
                ],
                "properties": {
                    "external_installation_id": {
                        "description": "The external installation id of the installation.",
                        "type": "string"
                    },
                    "label": {
                        "description": "The label of the installation as defined by the end-user.",
                        "type": "string"
                    },
                    "country_code": {
                        "description": "The country code of the country where the installation is located.",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "The country code of the country where the installation is located.",
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "street_no": {
                        "type": "string"
                    },
                    "house_no": {
                        "type": "string"
                    },
                    "suffix": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PutLabelNameDTO": {
                "required": [
                    "label_name"
                ],
                "properties": {
                    "label_name": {
                        "description": "Τhe label name for the installation.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetProfileAttributesResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ProfileAttributesDataDTO"
                    }
                },
                "type": "object"
            },
            "GetProfileCompleteDataDTO": {
                "required": [
                    "complete"
                ],
                "properties": {
                    "complete": {
                        "description": "Returns true if the profile is complete and false if it's not.",
                        "type": "boolean"
                    },
                    "fractionComplete": {
                        "description": "Contains the fraction of profile completion, based on the profile attributes set.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "GetProfileCompleteResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "description": "The status of the call, “ok” if it was successful, “error” if it went wrong.",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/GetProfileCompleteDataDTO"
                    }
                },
                "type": "object"
            },
            "GetProfileDataDTO": {
                "properties": {
                    "profile": {
                        "$ref": "#/components/schemas/ProfileInfoDTO"
                    }
                },
                "type": "object"
            },
            "GetProfileResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/GetProfileDataDTO"
                    }
                },
                "type": "object"
            },
            "PostProfileBodyDTO": {
                "required": [
                    "budget_bill"
                ],
                "properties": {
                    "reset_tariffs": {
                        "description": "When is set to true any existing definitions with a start date-time on or after the start date-time of the provided definition will be replaced.\nOtherwise, the new information will be added to the tariff agreement. Defaults to false.",
                        "type": "boolean"
                    },
                    "g_tariff": {
                        "description": "Τhe gas tariff of the user per unit of measure. The unit of measure is configured in labelpartner level.\nDefaults to labelpartner's value.",
                        "type": "string"
                    },
                    "g_fixed_tariff": {
                        "description": "The annual fixed gas tariff of the user. Defaults to labelpartner's value.",
                        "type": "string"
                    },
                    "g_last_jar": {
                        "description": "The user's gas consumption in the last year.",
                        "type": "string"
                    },
                    "budget_bill": {
                        "description": "The budget bill of the user, the amount of budget the user has per month both for gas and electricity (including fixed costs).\nThe specified ‘g_last_jar’ and ‘e_last_jar’ are used to calculate the percentage of the ‘budget_bill’ that applies to electricity and gas (gFactor).\nWhen set to -1, budget definition of user will not be updated. Defaults to labelpartner's value.",
                        "type": "string"
                    },
                    "e_tariff": {
                        "description": "The electricity tariff of the user per unit of measure. The unit of measure is configured on the labelpartner of the user.\nDefaults to the average of e_tariff_tier_1 and e_tariff_tier_2, if both are provided, otherwise defaults to labelpartner's value.",
                        "type": "string"
                    },
                    "e_fixed_tariff": {
                        "description": "The annual fixed tariff for electricity. Defaults to labelpartner's value.",
                        "type": "string"
                    },
                    "e_last_jar": {
                        "description": "The user's electricity consumption in the last year.",
                        "type": "string"
                    },
                    "e_tariff_tier_1": {
                        "description": "Τhe electricity tariff of the user for tier-1. Tier-1 is either day or night depending on the platform. Defaults to -1.\nThe value -1 means that the existing value will not be updated and new value will not be set.\nIn order to delete an existing value then 0 value should be provided.",
                        "type": "string"
                    },
                    "e_tariff_tier_2": {
                        "description": "Τhe electricity tariff of the user for tier-2. Tier-2 is either day or night depending on the platform. Defaults to -1.",
                        "type": "string"
                    },
                    "feedin_tariff": {
                        "description": "Τhe tariff for the amount of electricity produced and returned to the grid. Defaults to 0.",
                        "type": "string"
                    },
                    "feedin_tariff_tier_1": {
                        "description": "Τhe tariff for the amount of electricity produced and returned to the grid for tier-1. Defaults to -1.",
                        "type": "string"
                    },
                    "feedin_tariff_tier_2": {
                        "description": "Τhe tariff for the amount of electricity produced and returned to the grid for tier-2. Defaults to -1.",
                        "type": "string"
                    },
                    "start_timestamp": {
                        "description": "The timestamp (UTC in unix time) when the provided budget and/or tariff definition starts.\nIf not provided and previous tariff exists the new values are set to start at time of call execution.\nDefaults to 1/1/2000.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ProfileAttributesDataDTO": {
                "properties": {
                    "Attributes": {
                        "properties": {
                            "PropertyLocation": {
                                "description": "Property Location",
                                "type": "string"
                            },
                            "PropertyCountry": {
                                "description": "Property country",
                                "type": "string"
                            },
                            "PropertyType": {
                                "description": "Property type",
                                "type": "string"
                            },
                            "PropertySize": {
                                "description": "Property size",
                                "type": "string"
                            },
                            "PropertyAge": {
                                "description": "Property age",
                                "type": "string"
                            },
                            "Ownership": {
                                "description": "Property ownership",
                                "type": "string"
                            },
                            "Occupants": {
                                "description": "Number of occupants",
                                "type": "string"
                            },
                            "OccupantType": {
                                "description": "Occupant type",
                                "type": "string"
                            },
                            "SpaceHeating": {
                                "description": "Space heating type",
                                "type": "string"
                            },
                            "WaterHeating": {
                                "description": "Water heating type",
                                "type": "string"
                            },
                            "StoveHeating": {
                                "description": "Stove heating type",
                                "type": "string"
                            },
                            "GrillHeating": {
                                "description": "Grill heating type",
                                "type": "string"
                            },
                            "OvenHeating": {
                                "description": "Oven heating type",
                                "type": "string"
                            },
                            "SpaceHeatingExchangerType": {
                                "description": "Space heating exchanger type",
                                "type": "string"
                            },
                            "Photovoltaic": {
                                "description": "Photovoltaic solar power",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "additionalProperties": {
                            "description": "Additional properties",
                            "type": "string"
                        }
                    },
                    "Appliances": {
                        "description": "Optional list of all the appliances and the amount of them that a user has.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer"
                        }
                    },
                    "ApplianceMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "properties": {
                                    "description": {
                                        "description": "Appliance description",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "Appliance ID",
                                        "type": "string"
                                    },
                                    "applianceAge": {
                                        "description": "Appliance age",
                                        "type": "string"
                                    },
                                    "applianceType": {
                                        "description": "Appliance type",
                                        "type": "string"
                                    },
                                    "applianceVolume": {
                                        "description": "Appliance volume",
                                        "type": "string"
                                    },
                                    "applianceSetup": {
                                        "description": "Appliance setup",
                                        "type": "string"
                                    },
                                    "batterySize": {
                                        "description": "Size of the battery in kWh",
                                        "type": "string"
                                    },
                                    "brand": {
                                        "description": "Appliance brand",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "additionalProperties": {
                                    "description": "Additional properties",
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "type": "object"
            },
            "ProfileInfoDTO": {
                "properties": {
                    "g_tariff": {
                        "description": "Τhe gas tariff of the user per unit of measure. The unit of measure is configured on the labelpartner of the user.",
                        "type": "string"
                    },
                    "g_fixed_tariff": {
                        "description": "The annual fixed gas tariff of the user.",
                        "type": "string"
                    },
                    "g_last_jar": {
                        "description": "The user's gas consumption in the last year.",
                        "type": "string"
                    },
                    "budget_bill": {
                        "description": "Τhe amount of budget the user has per month for gas and electricity including fixed costs. The specified ‘g_last_jar’ and ‘e_last_jar’ are used to calculate the percentage of the ‘budget_bill’ that applies to electricity and gas (gFactor). If the fields are not provided then the gFactor set in labelpartner configuration will be used to calculate the electricity and gas budget.",
                        "type": "string"
                    },
                    "e_tariff": {
                        "description": "Τhe electricity tariff of the user per unit of measure. The unit of measure is configured on the labelpartner of the user.",
                        "type": "string"
                    },
                    "e_fixed_tariff": {
                        "description": "The annual fixed tariff for electricity.",
                        "type": "string"
                    },
                    "e_last_jar": {
                        "description": "The user's electricity consumption in the last year.",
                        "type": "string"
                    },
                    "e_tariff_tier_1": {
                        "description": "Τhe electricity tariff of the user for tier-1. Tier-1 is either day or night depending on the platform.",
                        "type": "string"
                    },
                    "e_tariff_tier_2": {
                        "description": "Τhe electricity tariff of the user for tier-2. Tier-2 is either day or night depending on the platform.",
                        "type": "string"
                    },
                    "feedin_tariff": {
                        "description": "Τhe tariff for the amount of electricity produced and returned to the grid.",
                        "type": "string"
                    },
                    "feedin_tariff_tier_1": {
                        "description": "Τhe tariff for the amount of electricity produced and returned to the grid for tier-1.",
                        "type": "string"
                    },
                    "feedin_tariff_tier_2": {
                        "description": "Τhe tariff for the amount of electricity produced and returned to the grid for tier-2.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RecommendationsDTO": {
                "properties": {
                    "id": {
                        "description": "The id code of the recommendation.",
                        "type": "string"
                    },
                    "relevance": {
                        "description": "The relevance of the recommendation to the user.",
                        "type": "number"
                    },
                    "disaggregation_category": {
                        "description": "The disaggregation category of the recommendation.",
                        "type": "string"
                    },
                    "appliance": {
                        "description": "Name of corresponding appliance.",
                        "type": "string"
                    },
                    "electric": {
                        "description": "If the recommendation could be for electric.",
                        "type": "string"
                    },
                    "gas": {
                        "description": "If the recommendation could be for gas.",
                        "type": "string"
                    },
                    "action_type": {
                        "description": "What type of action the recommendations is.",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp when response to API call was returned from platform in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RecommendationsReportDTO": {
                "properties": {
                    "id": {
                        "description": "The id code of the recommendation.",
                        "type": "string"
                    },
                    "deltaPerc": {
                        "description": "This is the difference, as a percentage value, between the usage and the benchmark value.",
                        "type": "number",
                        "nullable": true
                    },
                    "potentialSavingsCost": {
                        "description": "The consumption saving costs in KWh.",
                        "type": "number",
                        "nullable": true
                    },
                    "disaggregation_category": {
                        "description": "The disaggregation category of the recommendation.",
                        "type": "string"
                    },
                    "appliance": {
                        "description": "Name of corresponding appliance.",
                        "type": "string"
                    },
                    "action_type": {
                        "description": "What type of action the recommendations is.",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp when response to API call was returned from platform in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RecommendationsReportResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecommendationsReportDTO"
                        }
                    },
                    "timestamp": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RecommendationsResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecommendationsDTO"
                        }
                    }
                },
                "type": "object"
            },
            "ActivateAccountDTO": {
                "required": [
                    "email_address",
                    "pincode"
                ],
                "properties": {
                    "email_address": {
                        "description": "The email address of a provisioned user.",
                        "type": "string"
                    },
                    "pincode": {
                        "description": "The password that will be associated with this account.",
                        "type": "string"
                    },
                    "voucher_code": {
                        "description": "The voucher code that is associated with the provisioned email address used. In the platform, this value is represented by the webshop_coupon.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChangePasswordDTO": {
                "required": [
                    "oldpass",
                    "newpass1",
                    "newpass2"
                ],
                "properties": {
                    "oldpass": {
                        "description": "The old password that will be updated.",
                        "type": "string"
                    },
                    "newpass1": {
                        "description": "The new password that will be set.",
                        "type": "string"
                    },
                    "newpass2": {
                        "description": "The new password again, to verify it.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EmailAddressDTO": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "description": "The email address that will be updated.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProvisionAccountDTO": {
                "required": [
                    "email_address",
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "email_address": {
                        "description": "The email address of the user.",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "The first name of the user.",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The last name of the user.",
                        "type": "string"
                    },
                    "labelpartner": {
                        "description": "The name of the labelpartner. Defaults to platform default labelpartner.",
                        "type": "string"
                    },
                    "imported": {
                        "description": "In case the imported flag is true then we expect the user to be already provisioned\n            and the call is used to verify the email. Defaults to false.",
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object"
            },
            "RegistrationDTO": {
                "required": [
                    "external_provider_access_token",
                    "primary_identifier",
                    "primary_identifier_type"
                ],
                "properties": {
                    "external_provider_access_token": {
                        "description": "It is the token that is returned from the sign in the external provider. This token will be used in the back end to initiate the introspection call.",
                        "type": "string"
                    },
                    "primary_identifier": {
                        "description": "The main identifier that is used to identify a customer in NET2GRID backend",
                        "type": "string"
                    },
                    "primary_identifier_type": {
                        "description": "Type of primary identifier. Allowed values email, external_identifier",
                        "type": "string"
                    },
                    "secondary_identifier": {
                        "description": "Optional attribute.If provided it will be used as additional validation attribute",
                        "type": "string"
                    },
                    "secondary_identifier_type": {
                        "description": "Optional attribute.Type of secondary identifier. Allowed values email external_identifier and should not be the same with the primary_identifier_type.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegistrationOptInBodyDTO": {
                "required": [
                    "opt_in"
                ],
                "properties": {
                    "opt_in": {
                        "description": "The opt-in status can influence the attributes that are submitted (or not)\n     * to the platform. 0=opted-out; 1=opted-in ",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    }
                },
                "type": "object"
            },
            "RegistrationOptinStatusDTO": {
                "required": [
                    "opt_in"
                ],
                "properties": {
                    "opt_in": {
                        "description": "indicates the registration optin status for the user",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RegistrationOptinStatusResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/RegistrationOptinStatusDTO"
                    }
                },
                "type": "object"
            },
            "ErrorDTO": {
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ErrorResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ErrorDTO"
                    }
                },
                "type": "object"
            },
            "OAuthErrorResponseDTO": {
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "description": "The type of error returned.",
                        "type": "string"
                    },
                    "error_description": {
                        "description": "The error uri returned.",
                        "type": "string",
                        "nullable": true
                    },
                    "error_uri": {
                        "description": "The error message returned.",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OkResponseDTO": {
                "required": [
                    "status",
                    "message"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SmartbridgeConnectionDTO": {
                "properties": {
                    "gateway_ip": {
                        "description": "The IP address V4 Lan Config.",
                        "type": "string"
                    },
                    "wlan_rssi": {
                        "type": "integer"
                    },
                    "interface_name": {
                        "type": "string"
                    },
                    "status": {
                        "description": "The smartbridge status. It can take one of the four following values “online”,”offline”,”unreachable” or ”unknown”.",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "The timestamp of smartbridge’s last available status.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SmartbridgeDataDTO": {
                "properties": {
                    "smartbridge_mac": {
                        "type": "string"
                    },
                    "hardware_version": {
                        "type": "string"
                    },
                    "firmware_version": {
                        "type": "string"
                    },
                    "model_identifier": {
                        "type": "string"
                    },
                    "connection": {
                        "$ref": "#/components/schemas/SmartbridgeConnectionDTO"
                    },
                    "factory_eui": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SmartbridgeDeviceDTO": {
                "properties": {
                    "device": {
                        "description": "Contains smartbridge info",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartbridgeDataDTO"
                        }
                    }
                },
                "type": "object"
            },
            "SmartbridgeLCThresholdDataDTO": {
                "properties": {
                    "load_curve_threshold": {
                        "description": "The load curve threshold used by the smart reader and define when measurements should be communicated to the gateway, measured in Watts.",
                        "type": "integer"
                    },
                    "load_curve_threshold_requested": {
                        "description": "The load curve threshold that has been requested by the corresponding PUT endpoint. Is useful to inform about the user specified setting  as the gateway might take several minutes to receive the configuration.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SmartbridgeLCThresholdRequestDTO": {
                "properties": {
                    "lc_threshold": {
                        "description": "The load curve threshold will be used by the smart reader and define when measurements should be communicated\nto the gateway. This threshold is expressed in Watts.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SmartbridgeLCThresholdResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/SmartbridgeLCThresholdDataDTO"
                    }
                },
                "type": "object"
            },
            "SmartbridgeRealTimeOverrideDTO": {
                "properties": {
                    "duration": {
                        "description": "Duration for which the gateway will report in real-time mode in seconds.\n    If no value is given, it will fallback to the default of 5 minutes. The maximum duration is 15 minutes",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SmartbridgeStatusResponseDTO": {
                "required": [
                    "status",
                    "data",
                    "timestamp"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/SmartbridgeDeviceDTO"
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BaseSolarProductionDataDTO": {
                "properties": {
                    "PeakTime": {
                        "description": "The timestamp when the peak value of solar production was monitored for that specific day, in iso-8601 format. The current day is not included.\nFor Weekly / Monthly / Yearly level, the peak_time will contain the peak time when the highest produced power in the specified period was observed.",
                        "type": "string"
                    },
                    "PeakValue": {
                        "description": "The active power level of produced energy at the peak timestamp, in W. This value is positive, even though the actual active power in the mains time series at that time may be negative. The current day is not included.\nFor Weekly / Monthly / Yearly level, this attribute will contain the peak power level that was observed in the specified period (e.g. 4000W)",
                        "type": "number"
                    },
                    "EfficiencyAnnual": {
                        "description": "A percentage showing the annual efficiency of the solar panel for a specific day, comparing the daily solar production with the optimal yearly solar production of the solar panel.",
                        "type": "number"
                    },
                    "EfficiencyMonth": {
                        "description": "A percentage showing the monthly efficiency of the solar panel for a specific day, comparing the daily solar production with the optimal solar production of the solar panel for that specific month.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "DailySolarProductionDataDTO": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseSolarProductionDataDTO"
                    },
                    {
                        "properties": {
                            "Delivered": {
                                "description": "Total energy consumed from the grid for the specified day, in kWh.\nThis field contains data up to the last day of the specified period that we have solar production metrics reported for, as of the consumer’s timezone, including that day as well.\nThe current day is not included.",
                                "type": "number"
                            },
                            "Received": {
                                "description": "Total energy returned to the grid for the specified day, in kWh.\nThis field contains data up to the last day of the specified period that we have solar production metrics reported for, as of the consumer’s timezone, including that day as well.\nThe current day is not included.",
                                "type": "number"
                            },
                            "DailyProduction": {
                                "description": "The estimated produced energy from PV panels for the day, in kWh.",
                                "type": "number"
                            },
                            "ProductionCost": {
                                "description": "Calculated cost for the specified production period",
                                "type": "number"
                            },
                            "OverproductionPercentage": {
                                "description": "The percentage of overproduction during the sunlight period of the day. It corresponds to the period from sunrise to sunset, not the whole day.\nIt describes the percentage of time within the day that the solar production is greater than the consumption. 0 means that for the entire course of the day the produced energy is self consumed.",
                                "type": "number"
                            },
                            "PerHour": {
                                "description": "Production by hour 0-23, in kWh.",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "PeriodicSolarProductionDataDTO": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseSolarProductionDataDTO"
                    },
                    {
                        "properties": {
                            "Delivered": {
                                "description": "Total energy consumed from the grid for the specified period, in kWh.\nThis field contains data up to the last day of the specified period that we have solar production metrics reported for, as of the consumer’s timezone, including that day as well.\nThe current day is not included.",
                                "type": "number"
                            },
                            "Received": {
                                "description": "Total energy returned to the grid for the specified period, in kWh.\nThis field contains data up to the last day of the specified period that we have solar production metrics reported for, as of the consumer’s timezone, including that day as well.\nThe current day is not included.",
                                "type": "number"
                            },
                            "Production": {
                                "description": "The estimated produced energy from PV panels for the specified period, in kWh.",
                                "type": "number"
                            },
                            "ProductionCost": {
                                "description": "Calculated cost for the specified production period",
                                "type": "number"
                            },
                            "UsedProduction": {
                                "description": "Percentage of production used. The percentage of the estimated solar production that was used by the installation for self-consumption purposes. \n0 means that all produced energy was returned back to the grid, while 1 means that all produced energy was self consumed. Can be 0 or positive",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SolarProductionResponseDTO": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DailySolarProductionDataDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PeriodicSolarProductionDataDTO"
                            }
                        ]
                    },
                    "timestamp": {
                        "description": "Timestamp of response in ISO-8601 format.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetTariffDefinitionResponseDTO": {
                "required": [
                    "status",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/TariffDefinitionDTO"
                    }
                },
                "type": "object"
            },
            "PostTariffDefinitionRequestDTO": {
                "required": [
                    "tariff_definition"
                ],
                "properties": {
                    "tariff_definition": {
                        "$ref": "#/components/schemas/TariffDefinitionDTO"
                    },
                    "reset_future_definitions": {
                        "description": "This flag should be enabled when the provided definition should overwrite any existing definitions that may be applicable for the user and are later in time than the provided timestamp in applicable_since field.",
                        "type": "boolean",
                        "default": "false",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TariffDefinitionDTO": {
                "description": "Tariff values for the user. The tariff values fetched from this API are expected to have up to 6 decimal digits.",
                "properties": {
                    "electricity_yearly_fixed_cost": {
                        "description": "The annual fixed cost for electricity. Defaults to 0.",
                        "type": "number",
                        "default": "0"
                    },
                    "electricity_tariff": {
                        "description": "The tariff for electricity consumed from the grid. The applicable unit of measure is configured on the labelpartner of the user. In case the user is billed based on tiers it should be set to relevant value that will be used in results that apply to events or refer to total consumptions. Defaults to 0.",
                        "type": "number",
                        "default": "0"
                    },
                    "electricity_tariff_tier_1": {
                        "description": "Τhe tariff for electricity consumed from the grid from tier-1. Tier-1 is either day or night depending on the platform.",
                        "type": "number",
                        "default": "0"
                    },
                    "electricity_tariff_tier_2": {
                        "description": "Τhe tariff for electricity consumed from the grid from tier-2. Tier-2 is either day or night depending on the platform.",
                        "type": "number",
                        "default": "0"
                    },
                    "feedin_tariff": {
                        "description": "Τhe tariff for the amount of electricity produced and returned to the grid. The unit of measure is the electricity unit configured on the labelpartner of the user. In case the user is billed based on tiers it should be set to a relevant value that will be used in results that apply to events or refer to total consumptions and tier values cannot be calculated.",
                        "type": "number",
                        "default": "0"
                    },
                    "feedin_tariff_tier_1": {
                        "description": "Τhe electricity tariff for electricity produced and returned to the grid for tier-1. Tier-1 is either day or night depending on the platform.",
                        "type": "number",
                        "default": "0"
                    },
                    "feedin_tariff_tier_2": {
                        "description": "Τhe electricity tariff for electricity produced and returned to the grid for tier-2. Tier-2 is either day or night depending on the platform.",
                        "type": "number",
                        "default": "0"
                    },
                    "gas_yearly_fixed_cost": {
                        "description": "The annual fixed cost for gas.",
                        "type": "number",
                        "default": "0"
                    },
                    "gas_tariff": {
                        "description": "The tariff for gas consumed. The applicable unit of measure is configured on the labelpartner of the user.",
                        "type": "number",
                        "default": "0"
                    },
                    "applicable_since": {
                        "description": "The point in time when the provided tariff definition becomes valid in ISO-8601 format. If not specified defaults to 2000-01-01T00:00:00Z.",
                        "type": "string",
                        "default": "2000-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "examples": {
            "GetAppliancesCategoriesMappingExample": {
                "summary": "Get Appliances Categories Mapping 200 response.",
                "value": {
                    "status": "ok",
                    "data": {
                        "AirCondition": "Space Heating",
                        "AlwaysOn": "Always On",
                        "DishWasher": "Laundry",
                        "Dryer": "Laundry",
                        "ElectricVehicle": "Electric Vehicle",
                        "Entertainment": "Entertainment",
                        "FlowHeater": "Water Heating",
                        "GasBoiler": "Space Heating",
                        "Grill": "Cooking",
                        "HeatPumps": "Space Heating",
                        "Hob": "Cooking",
                        "ImmersionHeater": "Water Heating",
                        "Kettle": "Cooking",
                        "Lighting": "Lighting",
                        "Microwave": "Always On",
                        "Other": "Other",
                        "OtherProbabilistic": "Other Probabilistic",
                        "OtherResistive": "Other Resistive",
                        "Oven": "Cooking",
                        "PoolOrSauna": "Pool Or Sauna",
                        "Refrigeration": "Refrigeration",
                        "SolarProduction": "Production",
                        "SpaceHeating": "Space Heating",
                        "WashingMachine": "Laundry",
                        "WaterHeating": "Water Heating"
                    }
                }
            },
            "GetAppliancesDefinitionsExample": {
                "summary": "Get Appliances Definitions response.",
                "value": {
                    "status": "ok",
                    "data": {
                        "A.01": {
                            "description": "Fridge",
                            "identifier": "refrigerator"
                        },
                        "A.02": {
                            "description": "Freezer",
                            "identifier": "freezer"
                        },
                        "A.03": {
                            "description": "Combi fridge / freezer",
                            "identifier": "fridgeCombo"
                        },
                        "A.04": {
                            "description": "Oven",
                            "identifier": "oven"
                        },
                        "A.05": {
                            "description": "Grill",
                            "identifier": "grill"
                        },
                        "A.06": {
                            "description": "Hob",
                            "identifier": "hob"
                        },
                        "A.07": {
                            "description": "Microwave",
                            "identifier": "microwave"
                        },
                        "A.08": {
                            "description": "Kettle",
                            "identifier": "kettle"
                        },
                        "A.09": {
                            "description": "Toaster",
                            "identifier": "toaster"
                        },
                        "A.10": {
                            "description": "Dishwasher",
                            "identifier": "dishwasher",
                            "attributes": [
                                {
                                    "attributeName": "applianceAge",
                                    "allowedValues": {
                                        "AA.01": "new",
                                        "AA.02": "not-so-new",
                                        "AA.03": "old"
                                    }
                                },
                                {
                                    "attributeName": "applianceType",
                                    "allowedValues": {
                                        "DT.01": "full-width",
                                        "DT.02": "half-width",
                                        "DT.03": "over-the-counter"
                                    }
                                },
                                {
                                    "attributeName": "applianceVolume",
                                    "allowedValues": {
                                        "AV.01": "small",
                                        "AV.02": "medium",
                                        "AV.03": "large"
                                    }
                                },
                                {
                                    "attributeName": "brand"
                                },
                                {
                                    "attributeName": "description"
                                }
                            ]
                        },
                        "A.11": {
                            "description": "Washing Machine",
                            "identifier": "washingMachine",
                            "attributes": [
                                {
                                    "attributeName": "applianceAge",
                                    "allowedValues": {
                                        "AA.01": "new",
                                        "AA.02": "not-so-new",
                                        "AA.03": "old"
                                    }
                                },
                                {
                                    "attributeName": "applianceType",
                                    "allowedValues": {
                                        "WT.01": "front-load",
                                        "WT.02": "top-load"
                                    }
                                },
                                {
                                    "attributeName": "applianceVolume",
                                    "allowedValues": {
                                        "AV.01": "small",
                                        "AV.02": "medium",
                                        "AV.03": "large"
                                    }
                                },
                                {
                                    "attributeName": "brand"
                                },
                                {
                                    "attributeName": "description"
                                }
                            ]
                        },
                        "A.12": {
                            "description": "Tumble Dryer",
                            "identifier": "tumbleDryer"
                        },
                        "A.13": {
                            "description": "Iron",
                            "identifier": "iron"
                        },
                        "A.14": {
                            "description": "TV",
                            "identifier": "TV"
                        },
                        "A.15": {
                            "description": "DVD or Bluray",
                            "identifier": "dvd"
                        },
                        "A.16": {
                            "description": "Digital TV Box",
                            "identifier": "cableBox"
                        },
                        "A.17": {
                            "description": "Games Console",
                            "identifier": "gameConsole"
                        },
                        "A.18": {
                            "description": "Computer",
                            "identifier": "computer"
                        },
                        "A.19": {
                            "description": "Tablet",
                            "identifier": "tablet"
                        },
                        "A.20": {
                            "description": "Electric Shower",
                            "identifier": "electricShower"
                        },
                        "A.21": {
                            "description": "EV Home Charger",
                            "identifier": "electricVehicle"
                        },
                        "A.22": {
                            "description": "Swimming Pool",
                            "identifier": "poolPump"
                        },
                        "A.23": {
                            "description": "Sauna",
                            "identifier": "sauna"
                        },
                        "A.24": {
                            "description": "Immersion Heater",
                            "identifier": "immersionHeater"
                        },
                        "A.25": {
                            "description": "Air Conditioning",
                            "identifier": "airCondition"
                        },
                        "A.26": {
                            "description": "Infrared panels",
                            "identifier": "infraredPanels"
                        },
                        "A.27": {
                            "description": "Close-in boiler",
                            "identifier": "closeInBoiler"
                        },
                        "A.28": {
                            "description": "Instant boiling water tap",
                            "identifier": "instantBoilingWaterTap"
                        },
                        "A.29": {
                            "description": "Battery Energy Storage System",
                            "identifier": "batteryEnergyStorageSystem",
                            "attributes": [
                                {
                                    "attributeName": "batterySize"
                                }
                            ]
                        },
                        "A.30": {
                            "description": "Heat Pump",
                            "identifier": "heatPump",
                            "attributes": [
                                {
                                    "attributeName": "applianceSetup",
                                    "allowedValues": {
                                        "full-electric": "full-electric",
                                        "hybrid": "hybrid"
                                    }
                                },
                                {
                                    "attributeName": "applianceType",
                                    "allowedValues": {
                                        "air-to-air": "air-to-air",
                                        "air-to-water": "air-to-water",
                                        "water-to-water": "water-to-water",
                                        "ground-to-water": "ground-to-water",
                                        "exhaust-air": "exhaust-air"
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "GetBillPredictionExample": {
                "summary": "Get Bill Prediction Response Example",
                "value": {
                    "status": "ok",
                    "data": {
                        "billing_period_from": "2019-01-01T00:00:00+01:00",
                        "billing_period_until": "2020-01-01T00:00:00+01:00",
                        "planned_meter_reading": "2020-01-01T00:00:00+01:00",
                        "actual_consumption": 194.079,
                        "estimated_consumption_billing_period": 938.8471,
                        "base_fee": 365,
                        "current_tariff": 0.24,
                        "sum_of_prepayments": 5000,
                        "energy_covered_by_prepayments": 5432.1,
                        "estimated_cost_billing_period": 636.9023,
                        "timestamp": "2019-03-05T19:10:30+01:00"
                    }
                }
            },
            "GetCapacityPeakExample": {
                "summary": "Get monthly capacity peak response",
                "value": {
                    "status": "ok",
                    "data": {
                        "usage": 1,
                        "capacity_peak": 0.06,
                        "start": "2022-06-13T19:45:00+02:00",
                        "end": "2022-06-13T20:00:00+02:00",
                        "timestamp": "2022-07-20T22:50:58+02:00"
                    }
                }
            },
            "GetDailyConsumptionExample": {
                "summary": "Get today's consumption response",
                "value": {
                    "status": "ok",
                    "data": {
                        "usage": 2941,
                        "cost": 2.2873,
                        "timestamp": "2022-12-16T15:09:12+01:00",
                        "fixed_cost": 0
                    }
                }
            },
            "GetConsumptionCompareExample": {
                "summary": "Get previous and this months's comparison",
                "value": {
                    "status": "ok",
                    "data": {
                        "historic_summation_delta": "122834",
                        "historic_cost_associated": "95.53",
                        "current_summation_delta": "127490",
                        "current_cost_associated": "99.15",
                        "timestamp": "2022-12-16T10:58:53+01:00"
                    }
                }
            },
            "DatahubExampleResponse": {
                "summary": "Response if a datahub has been defined for the installation",
                "value": {
                    "status": "ok",
                    "data": {
                        "datahub": "edsn"
                    }
                }
            },
            "NoDatahubExampleResponse": {
                "summary": "Response in case the datahub has not been defined for the installation",
                "value": {
                    "status": "ok",
                    "data": {
                        "datahub": ""
                    }
                }
            },
            "GetDebugDetailsUserExample": {
                "summary": "Get Debug Details User Example",
                "value": {
                    "status": "ok",
                    "data": {
                        "user": "jdoe",
                        "group": "6",
                        "households": [
                            {
                                "id": "5",
                                "physicalGateway": "9646442121258860576",
                                "energyMeters": [
                                    {
                                        "id": "6",
                                        "eui64": "9646442121258860576",
                                        "meteringDeviceType": "0"
                                    },
                                    {
                                        "id": "8",
                                        "eui64": "9646442121258860576",
                                        "meteringDeviceType": "128"
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            "GetDebugAdminExample": {
                "summary": "Get Debug Admin Example",
                "value": {
                    "status": "ok",
                    "data": "The current user is not an admin."
                }
            },
            "GetExportAcceptedResponse": {
                "summary": "Response in case the endpoint isnt't executed but receives the request",
                "value": {
                    "status": "accepted",
                    "message": "Exports may only be requested once every 7 days."
                }
            },
            "GetFeedinCompareExample": {
                "summary": "Get previous and this months's feed-in comparison.",
                "value": {
                    "status": "ok",
                    "data": {
                        "historic_summation_delta": 34802,
                        "current_summation_delta": 3788,
                        "current_cost_associated": 0,
                        "timestamp": "2022-12-16T15:32:02+01:00"
                    }
                }
            },
            "GetInstantaneousAppliancesExample": {
                "summary": "Instantaneous demand data.",
                "value": {
                    "status": "ok",
                    "data": {
                        "timestamp": 1667566089,
                        "electricity": {
                            "power": 10000,
                            "L1": 0,
                            "L2": 0,
                            "L3": 0
                        },
                        "appliances": [
                            {
                                "power": -6489,
                                "appliance_instance_id": "Solar"
                            },
                            {
                                "power": 31.375,
                                "appliance_instance_id": "AON"
                            },
                            {
                                "power": 39.4583,
                                "appliance_instance_id": "REF"
                            },
                            {
                                "power": 4.2,
                                "appliance_instance_id": "LIG"
                            },
                            {
                                "power": 12.7,
                                "appliance_instance_id": "ENT"
                            },
                            {
                                "power": 0,
                                "appliance_instance_id": "WM"
                            },
                            {
                                "power": 0,
                                "appliance_instance_id": "IH"
                            },
                            {
                                "power": 0,
                                "appliance_instance_id": "EV"
                            },
                            {
                                "power": 2000,
                                "appliance_instance_id": "APP"
                            },
                            {
                                "power": 14401.2667,
                                "appliance_instance_id": "OTH"
                            }
                        ]
                    },
                    "data_type": "current_power"
                }
            },
            "GetFirstLastValuesExample": {
                "summary": "Get the user's first and last value in gas mains.",
                "value": {
                    "status": "ok",
                    "data": {
                        "first_value": 12,
                        "first_value_timestamp": "2022-10-09T12:27:00+02:00",
                        "last_value": 1943424,
                        "last_value_timestamp": "2022-11-08T11:26:50+01:00",
                        "timestamp": "2022-11-08T11:35:55+01:00"
                    }
                }
            },
            "GetChannelExample": {
                "summary": "Get Channel Response",
                "value": {
                    "status": "ok",
                    "data": {
                        "enabled": true,
                        "mutedTopics": [
                            "HYPERACTIVE_ALARM"
                        ]
                    }
                }
            },
            "GetPushStatusExample": {
                "summary": "Get Channel Response",
                "value": {
                    "status": "ok",
                    "data": {
                        "push": true
                    }
                }
            },
            "PutPushEnableExample": {
                "summary": "Put Push Enable Body",
                "value": {
                    "device_id": "ecc70e3d-14cd-49fb-b107-c63ad9939e50",
                    "device_type": "ANDROID",
                    "device_token": "fS97tPY65t0:APA91bEThwsFynLHp1XT_Ff54_7XR6r78lbcalJPccD1mSQNMfj4lelzNDjC7KHEngMVv4h6IwiZnc9pkoMRngDerwLkOPzEv2uRNDeGoOuNe27LylpgZIF8Jk5oq2U0srOk8ehqw0W7",
                    "channel": "MOBILE_PUSH"
                }
            },
            "PutPushDisableExample": {
                "summary": "Put Push Disable Body",
                "value": {
                    "device_id": "ecc70e3d-14cd-49fb-b107-c63ad9939e50",
                    "channel": "MOBILE_PUSH"
                }
            },
            "NotificationPushExampleNoGatewayEui": {
                "summary": "Basic example",
                "value": {
                    "code": "M019"
                }
            },
            "NotificationPushExampleWithGatewayEui": {
                "summary": "Installation (gateway)-specific notification example",
                "value": {
                    "code": "M019",
                    "gateway_eui": "9574384526952497152"
                }
            },
            "GetMessagesExample": {
                "summary": "Get Messages Response",
                "value": {
                    "status": "ok",
                    "data": [
                        {
                            "object_id": 1,
                            "message_code": "M019",
                            "is_read": 0,
                            "timestamp": "2022-05-30T06:06:30+02:00",
                            "category": "report",
                            "attributes": [
                                {
                                    "attribute1_name": "attribute1_value"
                                }
                            ],
                            "attachments": []
                        }
                    ]
                }
            },
            "OkResponse": {
                "summary": "Success response",
                "value": {
                    "status": "ok",
                    "message": "ok"
                }
            },
            "GetPeriodicSolarProductionExample": {
                "summary": "Solar production response.",
                "value": {
                    "status": "ok",
                    "data": {
                        "Delivered": 1940.51,
                        "Received": 3993.493,
                        "Production": 219.484,
                        "ProductionCost": 28.5329,
                        "PeakTime": "2019-09-01T16:32:10+02:00",
                        "PeakValue": 6003,
                        "UsedProduction": 0,
                        "EfficiencyAnnual": 0.524,
                        "EfficiencyMonth": 0.524
                    },
                    "timestamp": "2022-08-18T10:22:36+02:00"
                }
            },
            "GetDailySolarProductionExample": {
                "summary": "Get daily solar production response",
                "value": {
                    "status": "ok",
                    "data": {
                        "DailyProduction": 54.871,
                        "PeakTime": "2019-09-01T16:32:10+02:00",
                        "PeakValue": 6003,
                        "OverproductionPercentage": 44.306,
                        "EfficiencyAnnual": 0.524,
                        "EfficiencyMonth": 0.524,
                        "PerHour": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0.077,
                            0.902,
                            1.746,
                            2.991,
                            4.413,
                            5.261,
                            5.567,
                            5.806,
                            5.973,
                            5.932,
                            5.465,
                            4.566,
                            3.396,
                            2.181,
                            0.572,
                            0,
                            0,
                            0
                        ]
                    },
                    "day": "2022-06-28",
                    "timestamp": "2022-08-18T10:16:23+02:00"
                }
            },
            "getNilmStatusResponse": {
                "summary": "Get NILM status report",
                "value": {
                    "status": "ok",
                    "data": {
                        "nilmStatus": 3,
                        "goodDataDays": 1619,
                        "poorDataDays": 4,
                        "services": {
                            "dailyDisaggregation": {
                                "available": true,
                                "profileComplete": true
                            },
                            "solarProductionMetrics": {
                                "available": true,
                                "profileComplete": false
                            },
                            "monthlyDisaggregation": {
                                "available": true,
                                "profileComplete": true,
                                "monthComplete": true
                            },
                            "insights": {
                                "available": true,
                                "profileComplete": true
                            },
                            "recommendations": {
                                "available": true,
                                "profileComplete": true
                            },
                            "hardwareParameters": {
                                "available": true,
                                "profileComplete": true
                            },
                            "applianceEfficiencies": {
                                "available": true,
                                "profileComplete": false
                            }
                        },
                        "nonTimeBasedAppliances": {
                            "alwaysOn": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 1
                            },
                            "refrigeration": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 1
                            },
                            "lighting": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 1
                            },
                            "entertainment": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 1
                            },
                            "waterBoiler": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 1
                            },
                            "heatPumps": {
                                "available": false,
                                "profileComplete": true,
                                "profileAdded": false
                            }
                        },
                        "timeBasedAppliances": {
                            "washingMachine": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 1
                            },
                            "dishWasher": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 3
                            },
                            "oven": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 2
                            },
                            "dryer": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 1
                            },
                            "flowHeater": {
                                "available": false,
                                "profileComplete": true,
                                "profileAdded": false,
                                "attemptsLeft": 0
                            },
                            "immersionHeater": {
                                "available": false,
                                "profileComplete": false,
                                "profileAdded": false,
                                "attemptsLeft": 0
                            },
                            "electricVehicle": {
                                "available": true,
                                "profileComplete": true,
                                "profileAdded": false,
                                "models": 1,
                                "timestamp": "2021-01-18T14:12:05+01:00"
                            },
                            "airConditioning": {
                                "available": false,
                                "profileComplete": false,
                                "profileAdded": false,
                                "attemptsLeft": 0
                            }
                        },
                        "retrainSchedule": {
                            "refrigeration": "20210706",
                            "electricVehicle": "20210706",
                            "airConditioning": "20210706"
                        },
                        "date": "20210706"
                    }
                }
            },
            "MFAStatusResponse": {
                "summary": "Returns mfa status for user. True or false depending on whether mfa is enabled or not for this user.",
                "value": {
                    "status": "ok",
                    "data": {
                        "mfa_status": false
                    }
                }
            },
            "SecretCodeResponse": {
                "summary": "6-digit code returned to be given as input to the authenticator app to enable MFA.",
                "value": {
                    "status": "ok",
                    "data": {
                        "secret_code": "5G5CNH5AFODUNIUKXA7MXAO7S5LXJPFDG5PMPOJLMCXL6LZ2HSXQ"
                    }
                }
            },
            "TokenResponse": {
                "summary": "Token response.",
                "value": {
                    "access_token": "eyJraWQiOiJIU5cL0c5SENmV2NPVVwvc0tzbnBHOFF2amZtY0JwQ1p4NTZkbGNZN2x3NnM9IiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJiYjBmNmFkMC1kZmUyLTRkNDctOTQ5Ny01ZDgyYjAyYTk4YjIiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9qOWxHUEtkcEgiLCJjbGllbnRfaWQiOiIycnFkMTFkb3VvMDNxZXJxM3BqY2xmYzZidCIsIm9yaWdpbl9qdGkiOiI2YjJhNWYxMy1hMGM4LTQ2MDAtOTM3Yy01ZWVmYzQ1OTBmNGMiLCJldmVudF9pZCI6IjlmNzVlOTk5LTUyMDUtNDliMy05MGVkLTE1NTdhNTkwZWZkOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NTkwMDgwMjksImV4cCI6MTY1OTAxMTYyOSwiaWF0IjoxNjU5MDA4MDI5LCJqdGkiOiJjNWIyYTRmZi02MTcwLTQ4N2MtODNiNy02YmUyMmMxYmM4YTMiLCJ1c2VybmFtZSI6ImJiMGY2YWQwLWRmZTItNGQ0Ny05NDk3LTVkODJiMDJhOThiMiJ9.c_mg4R3dn_xapqX6TDcLDpIIRhmFlHlSi9lHucKzxg-BbZLuS7yvuNpkxIIkq_d8LkXZl_Ma2yVyuaVKf92OefQFV-UDOGCwxeIJQrVO2_JBvj35bzzf9hYHxejMopxTAN4oRmLUqD6qkGRh6ti758YTPNgq91a0fxM393dVj5JcW76fRKd33RTA12l6byJ8_M6elIXbhqaKhdJ5DQh0iD1dsgBfrs04EQhnGjao8JZw2f4TsH_UbfGU-9kT5uyVHNmLFjrbfMoyfo9Un1129CwEKcsPO_mM6jxMVbCNwfgg73B_NWPUTp52dOyMzmbpJCk9fw0hDcN2ywGpFPGBMQ",
                    "refresh_token": "eyJjdHkiOiJK1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.BuIuXAjcrO_k7t02NPt5tr7t5vj-kUB46IPuCIrTTc2LIzn5ieMS7uVhWFuFFkBZgViBXQ9_I8DTE9KVKcBxofIqA18fKocEZDFmpUWwmZuiX3_F8cWSiuajkV4kT0Qi7ckKE-DGfpIj9NcKeOfYiq5xgMmeBTqyePcn18l8NHEQ-6Jb3XZTjHi8-z_xExaJAZo6YDCDQ5TouPzgNsFdwCmEgmgcTBOfqpFox9BpB8KBjXUrEt-aG25wAaHe7rGXW-acU8WrI6hOjp8Uh7bWb6k9KfFr1RkiJtrdf1UsLiYDXPN8_5rcejxnFlGUpKSCeVSrytYSvvkmZX1y_hLZ5g.VaIPzSYJY-Xt0lUU.r5e5AzB3Xuk6ZfCblijWYI6GGsuqVEbXakN6EZiwISTjS8iXfYvSsAlPM90OFf2VakUQFiB-CExWflnyeS9XYa2gMBzxF4Vten7wnbG8Z7QSTd9BaWhAGOaYJ9cqEKngVsZbGXllkUSDRYwDDYvX7WoMWvmAwnm0ccu9owcGTUYohEVACw6LKSQhyVjTpZXAhIy_meSXUy8ZWc1toSskJCLuKaTfklRYOtsqdmF8FHoB0Cj7SIsjaSH9YtbgPp_uHvD7UXtqapwvU8A_Q6CIJdv06-hypZm2ojARxrNRLhuQpz1nLwrbXTvgPlS8ZzphQerF0H5a94Bu2E6usMm647hJntJE4EILnNbAEfkZThuh4jsZXufKPlmYGlUYp91gb0LNyQ_bjCMIQzWWqhfXWNWfuZy3k7ahwgWk5fKclKFMora2-vlGat3X2tDLPwiUlSzERMudUOWIyLpQgKkQSsK16ItFYeH3wHoZwgLl0_fVQKp8egH_YMQ3-hK9WV9vsFJBG3KyQl5achLN9YoulfVjYwrBVUPJtTzRtOUue2gamoGoqtfwCmBGx285DPZcd0eElpsAd96mipCaEUHV5Xvin8tuUGxSTaDaN5FSfnD0J_KXSchaHD6iCGk6eiVq03Wk1fQYmnlhPfFdoPyEaixqUW_J3cUSROXgHUsfOMhZWfIMeTR-jZLB1QXSgrVaJB510yEJgGd4RlNVte7P0h3X43calihtZOK4qIJuWvzYfJ1OcveZZxn6GWZFYy-VORBP7oyJfgxeP6VtSxRD6HiTF2--ULCJOfukJ08lL7KIzINT--50uBnPKxemEUcHoZWYqk5RNRlZfBWTkEbXgoviyM8C6S3r4ts3bf2yKgBDJAGTiZbAFWrhPg-WQcEm1mM1-96pg7av8WImKhRV7EZql94paFsmLrK8btuKf8ezcdPkxcVEM27wPfhYRz9t6eN6KP8MmVkjZwGzZmN9aX8DYMG5eEzLz_0FOKIo4oq2LFYyY07I2tncEqqwIV0uEmKeLTsNY9wYaAYLlnzyML4F14GNb7EMRNKIzCvPLKpGh7QtCu0xd7CUbLxX_zkk6JmU3S3NeFurpvrcCGO5N8XwmWQe1v_wRtnGT5vFgw1Y10YE59SCDJijePRhaTX7PPfyhlHJ65xTAfbrduNoTIQDH4_d8vKJaTpU8i39qbKLR7r3WeuWutQaWv-uxz_Amj-92so6MQ2xJtQxOACKM8O9wKd1Rl7RQLUjp_SLLwwICfgiGFZ89tB-JRDT3brV-NIkfGB33CT6IGCAUoyWvz4FejvKq0j4KsbpcHh8GPk4GQ13bzqgVL8GrEA.hE_-lqgYUFtWBXWIawgo0g",
                    "id_token": "eyJraWQiOiJUWGNVaVmWVBWa2RsTmdXUzdUSGFEaEt6U1VTWkh0MVJ3SU84QStsb3AwPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJiYjBmNmFkMC1kZmUyLTRkNDctOTQ5Ny01ZDgyYjAyYTk4YjIiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLmV1LXdlc3QtMS5hbWF6b25hd3MuY29tXC9ldS13ZXN0LTFfajlsR1BLZHBIIiwiY29nbml0bzp1c2VybmFtZSI6ImJiMGY2YWQwLWRmZTItNGQ0Ny05NDk3LTVkODJiMDJhOThiMiIsIm9yaWdpbl9qdGkiOiI2YjJhNWYxMy1hMGM4LTQ2MDAtOTM3Yy01ZWVmYzQ1OTBmNGMiLCJhdWQiOiIycnFkMTFkb3VvMDNxZXJxM3BqY2xmYzZidCIsImV2ZW50X2lkIjoiOWY3NWU5OTktNTIwNS00OWIzLTkwZWQtMTU1N2E1OTBlZmQ4IiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE2NTkwMDgwMjksImV4cCI6MTY1OTAxMTYyOSwiaWF0IjoxNjU5MDA4MDI5LCJqdGkiOiJjZWZjOWY3Mi1lYzVmLTRhZDctOGQwMC1mYzc1MGJkOWQwZDgiLCJlbWFpbCI6ImF0aGluYStmZWVkaW45QG5ldDJncmlkLmNvbSJ9.hshttnI_SBjkaEmy_FgtHOJL9RONg7JODxFjSp1ZhEtOH1ZtB_PPZ5pRnBQLyQI87HLSklXG_0mW2Y38u8VBiYirHfbNIkh3RxdIn39d21_dDDjWX9f8aBfls8hDcnSCOxvuDlMb2yqjZh1tzplEBRykAhrxLcAZm0eAeq6D5AINZRwlmAAC7xJ92EusWQWl3ibLODXWEe6bdSiV4kxmHpXsh20wduo85YUr8OlzSy9y-hOXao9xTFA0ULjsUnUj8dwCmhcY7AgtOPXlyOhzYNmHtOSZ54fX_hRlh2GniuND_M2ckeVvjYrfikkCvVbs6Dk_Ev0RG3xXo0EtfWLyhA",
                    "expires_in": 3600,
                    "token_type": "Bearer",
                    "scope": "[]"
                }
            },
            "TokenResponseCamelCase": {
                "summary": "Token response.",
                "value": {
                    "accessToken": "eyJraWQiOiJIU5cL0c5SENmV2NPVVwvc0tzbnBHOFF2amZtY0JwQ1p4NTZkbGNZN2x3NnM9IiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJiYjBmNmFkMC1kZmUyLTRkNDctOTQ5Ny01ZDgyYjAyYTk4YjIiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9qOWxHUEtkcEgiLCJjbGllbnRfaWQiOiIycnFkMTFkb3VvMDNxZXJxM3BqY2xmYzZidCIsIm9yaWdpbl9qdGkiOiI2YjJhNWYxMy1hMGM4LTQ2MDAtOTM3Yy01ZWVmYzQ1OTBmNGMiLCJldmVudF9pZCI6IjlmNzVlOTk5LTUyMDUtNDliMy05MGVkLTE1NTdhNTkwZWZkOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NTkwMDgwMjksImV4cCI6MTY1OTAxMTYyOSwiaWF0IjoxNjU5MDA4MDI5LCJqdGkiOiJjNWIyYTRmZi02MTcwLTQ4N2MtODNiNy02YmUyMmMxYmM4YTMiLCJ1c2VybmFtZSI6ImJiMGY2YWQwLWRmZTItNGQ0Ny05NDk3LTVkODJiMDJhOThiMiJ9.c_mg4R3dn_xapqX6TDcLDpIIRhmFlHlSi9lHucKzxg-BbZLuS7yvuNpkxIIkq_d8LkXZl_Ma2yVyuaVKf92OefQFV-UDOGCwxeIJQrVO2_JBvj35bzzf9hYHxejMopxTAN4oRmLUqD6qkGRh6ti758YTPNgq91a0fxM393dVj5JcW76fRKd33RTA12l6byJ8_M6elIXbhqaKhdJ5DQh0iD1dsgBfrs04EQhnGjao8JZw2f4TsH_UbfGU-9kT5uyVHNmLFjrbfMoyfo9Un1129CwEKcsPO_mM6jxMVbCNwfgg73B_NWPUTp52dOyMzmbpJCk9fw0hDcN2ywGpFPGBMQ",
                    "refreshToken": "eyJjdHkiOiJK1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.BuIuXAjcrO_k7t02NPt5tr7t5vj-kUB46IPuCIrTTc2LIzn5ieMS7uVhWFuFFkBZgViBXQ9_I8DTE9KVKcBxofIqA18fKocEZDFmpUWwmZuiX3_F8cWSiuajkV4kT0Qi7ckKE-DGfpIj9NcKeOfYiq5xgMmeBTqyePcn18l8NHEQ-6Jb3XZTjHi8-z_xExaJAZo6YDCDQ5TouPzgNsFdwCmEgmgcTBOfqpFox9BpB8KBjXUrEt-aG25wAaHe7rGXW-acU8WrI6hOjp8Uh7bWb6k9KfFr1RkiJtrdf1UsLiYDXPN8_5rcejxnFlGUpKSCeVSrytYSvvkmZX1y_hLZ5g.VaIPzSYJY-Xt0lUU.r5e5AzB3Xuk6ZfCblijWYI6GGsuqVEbXakN6EZiwISTjS8iXfYvSsAlPM90OFf2VakUQFiB-CExWflnyeS9XYa2gMBzxF4Vten7wnbG8Z7QSTd9BaWhAGOaYJ9cqEKngVsZbGXllkUSDRYwDDYvX7WoMWvmAwnm0ccu9owcGTUYohEVACw6LKSQhyVjTpZXAhIy_meSXUy8ZWc1toSskJCLuKaTfklRYOtsqdmF8FHoB0Cj7SIsjaSH9YtbgPp_uHvD7UXtqapwvU8A_Q6CIJdv06-hypZm2ojARxrNRLhuQpz1nLwrbXTvgPlS8ZzphQerF0H5a94Bu2E6usMm647hJntJE4EILnNbAEfkZThuh4jsZXufKPlmYGlUYp91gb0LNyQ_bjCMIQzWWqhfXWNWfuZy3k7ahwgWk5fKclKFMora2-vlGat3X2tDLPwiUlSzERMudUOWIyLpQgKkQSsK16ItFYeH3wHoZwgLl0_fVQKp8egH_YMQ3-hK9WV9vsFJBG3KyQl5achLN9YoulfVjYwrBVUPJtTzRtOUue2gamoGoqtfwCmBGx285DPZcd0eElpsAd96mipCaEUHV5Xvin8tuUGxSTaDaN5FSfnD0J_KXSchaHD6iCGk6eiVq03Wk1fQYmnlhPfFdoPyEaixqUW_J3cUSROXgHUsfOMhZWfIMeTR-jZLB1QXSgrVaJB510yEJgGd4RlNVte7P0h3X43calihtZOK4qIJuWvzYfJ1OcveZZxn6GWZFYy-VORBP7oyJfgxeP6VtSxRD6HiTF2--ULCJOfukJ08lL7KIzINT--50uBnPKxemEUcHoZWYqk5RNRlZfBWTkEbXgoviyM8C6S3r4ts3bf2yKgBDJAGTiZbAFWrhPg-WQcEm1mM1-96pg7av8WImKhRV7EZql94paFsmLrK8btuKf8ezcdPkxcVEM27wPfhYRz9t6eN6KP8MmVkjZwGzZmN9aX8DYMG5eEzLz_0FOKIo4oq2LFYyY07I2tncEqqwIV0uEmKeLTsNY9wYaAYLlnzyML4F14GNb7EMRNKIzCvPLKpGh7QtCu0xd7CUbLxX_zkk6JmU3S3NeFurpvrcCGO5N8XwmWQe1v_wRtnGT5vFgw1Y10YE59SCDJijePRhaTX7PPfyhlHJ65xTAfbrduNoTIQDH4_d8vKJaTpU8i39qbKLR7r3WeuWutQaWv-uxz_Amj-92so6MQ2xJtQxOACKM8O9wKd1Rl7RQLUjp_SLLwwICfgiGFZ89tB-JRDT3brV-NIkfGB33CT6IGCAUoyWvz4FejvKq0j4KsbpcHh8GPk4GQ13bzqgVL8GrEA.hE_-lqgYUFtWBXWIawgo0g",
                    "idToken": "eyJraWQiOiJUWGNVaVmWVBWa2RsTmdXUzdUSGFEaEt6U1VTWkh0MVJ3SU84QStsb3AwPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJiYjBmNmFkMC1kZmUyLTRkNDctOTQ5Ny01ZDgyYjAyYTk4YjIiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLmV1LXdlc3QtMS5hbWF6b25hd3MuY29tXC9ldS13ZXN0LTFfajlsR1BLZHBIIiwiY29nbml0bzp1c2VybmFtZSI6ImJiMGY2YWQwLWRmZTItNGQ0Ny05NDk3LTVkODJiMDJhOThiMiIsIm9yaWdpbl9qdGkiOiI2YjJhNWYxMy1hMGM4LTQ2MDAtOTM3Yy01ZWVmYzQ1OTBmNGMiLCJhdWQiOiIycnFkMTFkb3VvMDNxZXJxM3BqY2xmYzZidCIsImV2ZW50X2lkIjoiOWY3NWU5OTktNTIwNS00OWIzLTkwZWQtMTU1N2E1OTBlZmQ4IiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE2NTkwMDgwMjksImV4cCI6MTY1OTAxMTYyOSwiaWF0IjoxNjU5MDA4MDI5LCJqdGkiOiJjZWZjOWY3Mi1lYzVmLTRhZDctOGQwMC1mYzc1MGJkOWQwZDgiLCJlbWFpbCI6ImF0aGluYStmZWVkaW45QG5ldDJncmlkLmNvbSJ9.hshttnI_SBjkaEmy_FgtHOJL9RONg7JODxFjSp1ZhEtOH1ZtB_PPZ5pRnBQLyQI87HLSklXG_0mW2Y38u8VBiYirHfbNIkh3RxdIn39d21_dDDjWX9f8aBfls8hDcnSCOxvuDlMb2yqjZh1tzplEBRykAhrxLcAZm0eAeq6D5AINZRwlmAAC7xJ92EusWQWl3ibLODXWEe6bdSiV4kxmHpXsh20wduo85YUr8OlzSy9y-hOXao9xTFA0ULjsUnUj8dwCmhcY7AgtOPXlyOhzYNmHtOSZ54fX_hRlh2GniuND_M2ckeVvjYrfikkCvVbs6Dk_Ev0RG3xXo0EtfWLyhA",
                    "expiresIn": 3600,
                    "tokenType": "Bearer",
                    "scope": "[]"
                }
            },
            "ChallengeMFAResponse": {
                "summary": "Challenge MFA Response.",
                "value": {
                    "software_challenge_name": "SOFTWARE_TOKEN_MFA",
                    "user_id": "bb0f6adf0-dfe2-4d47-9497-5d82b02a98b2",
                    "session": "AYABeFAaddISx1XjESmLtR3leA0IAHQABAAdTZXJ2aWNlABBDb2duaXRvVXNlclBvb2xzAAEAB2F3cy1rbXMAS2Fybjphd3M6a21zOmV1LXdlc3QtMTo0NTU0NTg0OTMwODE6a2V5L2FiN2U3M2UzLWU2NDEtNDk5Zi1iNzc0LWZkZmM1MWM3NzFhYQC4AQIBAHigzwqzlp0D8sA0ltw8SHdsZPaJakxa-4NzPukgGo7dmgFEjhFn3vY5VWmB89H13N5HAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMiUC2VkAqwykEagyQAgEQgDutR9MJEWMFdXmg902OLoLFUba9IWYOOxOrSNBJD1eu3RlZE1GICm5qXh1_0ADirzlfdMgtUDeZU5XgXwIAAAAADAAAEAAAAAAAAAAAAAAAAADDE5kzx0UBJtdVlXWeCUCs_____wAAAAEAAAAAAAAAAAAAAAEAAAEBlEW-wXPJjXt1KtFgK8xY478tkOY_jPol_24wOcp_9QcKCSSa9G8J4-imWbSfI1V22jgVq1OqoM9VCZkhckM3zrVGEMnlt6VmpKA_4WdPG231ptpurFJeEcPGZEayOkrHcLLSNeiOm33dNheAE2jkaAi7r7AmxxiTb-6M3-JtiAZBN-0iCHlTYGJrdNUDy01gWZMFry2Crw9BE6kKd8uRR__OWfjz3DS-k1n1NHewAwoTiC7wT8UuJ6bRM3pURYzDDbLBNI7MpQsBq7o2KdDJOLGyL_RGYFRhEC84bhQZrNQGE-p3RwvLhd8eH49tyiNVyEZzXqd2dWeMmhZs66NXjrlfTTw0c_vDBI8yw9KD0g2k"
                }
            },
            "ResourceNotFoundExceptionException": {
                "summary": "User is not provision error.",
                "value": {
                    "status": "error",
                    "error": {
                        "code": 400,
                        "message": "User not provisioned"
                    }
                }
            },
            "DisaggregationForecastResponseExample": {
                "summary": "Get disaggregation forecast response",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity": {
                            "total_budget": 399.7999,
                            "total_budget_usage": 0,
                            "remaining_budget": {
                                "Total": {
                                    "usage": 65,
                                    "cost": 385.5
                                },
                                "categories": {
                                    "AlwaysOn": {
                                        "usage": 17.669,
                                        "cost": 104.79
                                    },
                                    "Refrigeration": {
                                        "usage": 7.4275,
                                        "cost": 44.05
                                    },
                                    "Other": {
                                        "usage": 9.9449,
                                        "cost": 58.98
                                    }
                                }
                            }
                        },
                        "production": {
                            "total_produced": 50.889,
                            "produced": {
                                "Total": {
                                    "usage": 50.889,
                                    "cost": 6.62
                                },
                                "categories": {
                                    "Solar": {
                                        "usage": 50.889,
                                        "cost": 6.62
                                    }
                                }
                            }
                        },
                        "gas": {
                            "total_budget": 22.5341,
                            "total_budget_usage": 36.3453,
                            "remaining_budget": {
                                "Total": {
                                    "usage": 0,
                                    "cost": 0
                                },
                                "categories": {
                                    "Other": {
                                        "usage": 0,
                                        "cost": 0
                                    }
                                }
                            }
                        }
                    },
                    "timestamp": "2022-08-09T09:49:13+02:00",
                    "days_left": 22
                }
            },
            "DisaggregationResponseExample": {
                "summary": "Get disaggregation data response",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity": {
                            "Total": {
                                "usage": 222.965,
                                "cost": 31.22
                            },
                            "categories": {
                                "AlwaysOn": {
                                    "usage": 60.6087,
                                    "cost": 8.49
                                },
                                "Refrigeration": {
                                    "usage": 25.4779,
                                    "cost": 3.57
                                },
                                "Other": {
                                    "usage": 34.1134,
                                    "cost": 4.78
                                }
                            }
                        },
                        "production": {
                            "total_produced": 50.889,
                            "produced": {
                                "Total": {
                                    "usage": 50.889,
                                    "cost": 6.62
                                },
                                "categories": {
                                    "Solar": {
                                        "usage": 50.889,
                                        "cost": 6.62
                                    }
                                }
                            }
                        },
                        "gas": {
                            "Total": {
                                "usage": 29.889,
                                "cost": 18.53
                            },
                            "categories": {
                                "SpaceHeating": {
                                    "usage": 0,
                                    "cost": 0
                                },
                                "WaterHeating": {
                                    "usage": 0,
                                    "cost": 0
                                },
                                "Cooking": {
                                    "usage": 0,
                                    "cost": 0
                                }
                            }
                        }
                    },
                    "timestamp": "2022-02-17T11:07:08+01:00"
                }
            },
            "DisaggregationHistoryResponseExample": {
                "summary": "Get disaggregation history response",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity": {
                            "used_budget": {
                                "Total": {
                                    "usage": 222.965,
                                    "cost": 49.05
                                },
                                "categories": {
                                    "AlwaysOn": {
                                        "usage": 60.6087,
                                        "cost": 13.33
                                    },
                                    "Refrigeration": {
                                        "usage": 25.4779,
                                        "cost": 5.61
                                    },
                                    "Other": {
                                        "usage": 34.1134,
                                        "cost": 7.5
                                    }
                                }
                            },
                            "total_budget": 430.7267,
                            "total_budget_usage": 0
                        },
                        "production": {
                            "total_produced": 50.889,
                            "produced": {
                                "Total": {
                                    "usage": 50.889,
                                    "cost": 6.62
                                },
                                "categories": {
                                    "Solar": {
                                        "usage": 50.889,
                                        "cost": 6.62
                                    }
                                }
                            }
                        },
                        "gas": {
                            "used_budget": {
                                "Total": {
                                    "usage": 29.889,
                                    "cost": 18.53
                                },
                                "categories": {
                                    "SpaceHeating": {
                                        "usage": 0,
                                        "cost": 0
                                    },
                                    "WaterHeating": {
                                        "usage": 0,
                                        "cost": 0
                                    },
                                    "Cooking": {
                                        "usage": 0,
                                        "cost": 0
                                    }
                                }
                            },
                            "total_budget": 24.2774,
                            "total_budget_usage": 39.1571
                        }
                    },
                    "timestamp": "2022-08-09T10:46:24+02:00"
                }
            },
            "ConsumptionAlwaysOnBreakdownExample": {
                "summary": "AlwaysOn Consumption breakdown.",
                "value": {
                    "status": "ok",
                    "data": [
                        {
                            "category": "Laundry",
                            "energy_wh": 2340,
                            "cost": 0,
                            "percentage": 2.732049036777583
                        },
                        {
                            "category": "Cooking",
                            "energy_wh": 9550,
                            "cost": 2,
                            "percentage": 11.150029188558086
                        },
                        {
                            "category": "HeatingCooling",
                            "energy_wh": 21320,
                            "cost": 4,
                            "percentage": 24.892002335084644
                        },
                        {
                            "category": "Computer",
                            "energy_wh": 34780,
                            "cost": 7,
                            "percentage": 40.607122008172794
                        },
                        {
                            "category": "Entertainment",
                            "energy_wh": 13760,
                            "cost": 3,
                            "percentage": 16.065382370110914
                        },
                        {
                            "category": "OtherAppliances",
                            "energy_wh": 3900,
                            "cost": 0,
                            "percentage": 4.553415061295971
                        }
                    ],
                    "timestamp": "2022-08-18T11:02:03+02:00"
                }
            },
            "EventsDailyResponseExample": {
                "summary": "Get daily events response",
                "value": {
                    "status": "ok",
                    "data": {
                        "Refrigeration": {
                            "Refrigeration": {
                                "usage": 0.749,
                                "cost": 0.17
                            }
                        },
                        "Always On": {
                            "AlwaysOn": {
                                "usage": 0.48,
                                "cost": 0.1
                            }
                        },
                        "Entertainment": {
                            "Entertainment": {
                                "usage": 1.261,
                                "cost": 0.27
                            }
                        },
                        "Lighting": {
                            "Lighting": {
                                "usage": 1.1239999999999999,
                                "cost": 0.25
                            }
                        },
                        "Production": {
                            "SolarProduction": {
                                "usage": 0.8280000000000001,
                                "cost": 0.18
                            }
                        },
                        "Laundry": {
                            "WashingMachine": {
                                "usage": 0.015,
                                "cost": 0
                            }
                        },
                        "Total": 0.97
                    },
                    "timestamp": "2022-08-17T08:22:15+02:00",
                    "day": "2022-06-02"
                }
            },
            "EventsHourlyResponseExample": {
                "summary": "Get hourly events response",
                "value": {
                    "status": "ok",
                    "data": {
                        "Refrigeration": {
                            "Refrigeration": [
                                {
                                    "timestamp_start": "2022-06-01T23:00:00+02:00",
                                    "timestamp_stop": "2022-06-02T22:59:59+02:00",
                                    "usage": 0.023,
                                    "cost": 0.005
                                }
                            ]
                        },
                        "Always On": {
                            "AlwaysOn": [
                                {
                                    "timestamp_start": "2022-06-01T23:00:00+02:00",
                                    "timestamp_stop": "2022-06-02T22:59:59+02:00",
                                    "usage": 0.158,
                                    "cost": 0.035
                                }
                            ]
                        },
                        "Entertainment": {
                            "Entertainment": [
                                {
                                    "timestamp_start": "2022-06-01T23:00:00+02:00",
                                    "timestamp_stop": "2022-06-02T22:59:59+02:00",
                                    "usage": 0.834,
                                    "cost": 0.184
                                }
                            ]
                        },
                        "Lighting": {
                            "Lighting": [
                                {
                                    "timestamp_start": "2022-06-01T23:00:00+02:00",
                                    "timestamp_stop": "2022-06-02T22:59:59+02:00",
                                    "usage": 0.169,
                                    "cost": 0.037
                                }
                            ]
                        },
                        "Production": {
                            "SolarProduction": [
                                {
                                    "timestamp_start": "2022-06-01T23:00:00+02:00",
                                    "timestamp_stop": "2022-06-02T22:59:59+02:00",
                                    "usage": 0.155,
                                    "cost": 0.034
                                }
                            ]
                        },
                        "Total": 0.295
                    },
                    "timestamp": "2022-08-17T09:28:09+02:00"
                }
            },
            "EventsSummaryResponseExample": {
                "summary": "Get events summary response",
                "value": {
                    "status": "ok",
                    "data": {
                        "Refrigeration": {
                            "Refrigeration": {
                                "count": 3,
                                "usage": 0.989,
                                "cost": 0.22000000000000003,
                                "first_event": "2022-05-31T23:00:00+02:00",
                                "last_event": "2022-06-02T23:00:00+02:00"
                            }
                        },
                        "Always On": {
                            "AlwaysOn": {
                                "count": 3,
                                "usage": 0.52,
                                "cost": 0.11,
                                "first_event": "2022-05-31T23:00:00+02:00",
                                "last_event": "2022-06-02T23:00:00+02:00"
                            }
                        },
                        "Entertainment": {
                            "Entertainment": {
                                "count": 3,
                                "usage": 1.865,
                                "cost": 0.4,
                                "first_event": "2022-05-31T23:00:00+02:00",
                                "last_event": "2022-06-02T23:00:00+02:00"
                            }
                        },
                        "Lighting": {
                            "Lighting": {
                                "count": 3,
                                "usage": 2.014,
                                "cost": 0.45,
                                "first_event": "2022-05-31T23:00:00+02:00",
                                "last_event": "2022-06-02T23:00:00+02:00"
                            }
                        },
                        "Production": {
                            "SolarProduction": {
                                "count": 3,
                                "usage": 1.708,
                                "cost": 0.37,
                                "first_event": "2022-05-31T23:00:00+02:00",
                                "last_event": "2022-06-02T23:00:00+02:00"
                            }
                        },
                        "Laundry": {
                            "WashingMachine": {
                                "count": 3,
                                "usage": 1.621,
                                "cost": 0.35,
                                "first_event": "2022-06-01T12:10:00+02:00",
                                "last_event": "2022-06-03T12:10:00+02:00"
                            }
                        },
                        "count": 18,
                        "usage": 8.717,
                        "cost": 1.9,
                        "first_event": "2022-06-01T12:10:00+02:00",
                        "last_event": "2022-06-03T12:10:00+02:00"
                    },
                    "timestamp": "2022-08-17T08:57:11+02:00"
                }
            },
            "GetCapacityPeaksConfigExample": {
                "summary": "Capacity peaks configuration",
                "value": {
                    "status": "ok",
                    "data": {
                        "threshold_value": 20,
                        "enabled": false,
                        "last_updated": "2022-02-17T11:07:08+01:00"
                    }
                }
            },
            "SetCapacityPeaksConfigExample": {
                "summary": "Set capacity peaks alerts threshold configuration",
                "value": {
                    "status": "ok",
                    "data": {
                        "message": "ok"
                    },
                    "timestamp": "2022-10-13T20:37:53+02:00"
                }
            },
            "GetMeterStatusResponse": {
                "summary": "Get the meter status report information.",
                "value": {
                    "status": "ok",
                    "data": {
                        "current_status": "CONNECTED_WITH_METER",
                        "connected_with_meter": {
                            "inclusion": true,
                            "status": 0,
                            "timestamp": "2022-11-22T12:08:00+01:00"
                        },
                        "timestamp": "2022-11-28T11:03:30+01:00"
                    }
                }
            },
            "GetRecommendationsResponse": {
                "summary": "Retrieve user recommendations for a specific time period.",
                "value": {
                    "status": "ok",
                    "data": {
                        "id": "T360",
                        "relevance": 0.969022,
                        "disaggregation_category": "Refrigeration",
                        "appliance": "Refrigeration",
                        "electric": "true",
                        "gas": "false",
                        "action_type": "Behaviour",
                        "timestamp": "2023-01-09T14:17:31+00:00"
                    }
                }
            },
            "GetRecommendationsReportResponse": {
                "summary": "Recommendations for a month/week.",
                "value": {
                    "status": "ok",
                    "data": {
                        "id": "T360",
                        "deltaPerc": 25,
                        "potentialSavingsKWh": 10,
                        "disaggregation_category": "Refrigeration",
                        "appliance": "Refrigeration",
                        "action_type": "Behaviour",
                        "timestamp": "2023-01-09T14:17:31+00:00"
                    },
                    "timestamp": "2023-01-09T14:17:31+00:00"
                }
            },
            "GetRecommendationsReportFirstWeek": {
                "summary": "Recommendations for first week.",
                "value": {
                    "status": "ok",
                    "data": {
                        "id": "T360",
                        "disaggregation_category": "Refrigeration",
                        "appliance": "Refrigeration",
                        "action_type": "Behaviour",
                        "timestamp": "2023-01-09T14:17:31+00:00"
                    },
                    "timestamp": "2023-01-09T14:17:31+00:00"
                }
            },
            "InsightResponseExample": {
                "summary": "Get insights response",
                "value": {
                    "status": "ok",
                    "data": {
                        "totalElectricity": {
                            "self": {
                                "total": {
                                    "status": "1",
                                    "relevance": 0,
                                    "is_positive": false,
                                    "benchmark": 317,
                                    "usage": 224,
                                    "delta_kwh": -93,
                                    "delta_perc": -29,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            }
                        },
                        "alwaysOn": {
                            "peer": {
                                "total": {
                                    "status": "3",
                                    "relevance": 0,
                                    "is_positive": false,
                                    "benchmark": 19,
                                    "usage": 19,
                                    "delta_kwh": 0,
                                    "delta_perc": -3,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            },
                            "self": {
                                "total": {
                                    "status": "3",
                                    "relevance": 0,
                                    "is_positive": false,
                                    "benchmark": 19,
                                    "usage": 19,
                                    "delta_kwh": 0,
                                    "delta_perc": -3,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            }
                        },
                        "refrigeration": {
                            "self": {
                                "total": {
                                    "status": "4",
                                    "relevance": 0,
                                    "is_positive": true,
                                    "benchmark": 24,
                                    "usage": 26,
                                    "delta_kwh": 1,
                                    "delta_perc": 7,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            }
                        },
                        "dishWasher": {
                            "self": {
                                "total": {
                                    "overall_efficiency_score": 50,
                                    "appliance_efficiency_score": 100,
                                    "usage_efficiency_score": 50,
                                    "overall_eei": 54,
                                    "frequency": 56,
                                    "mean_energy": 0.64741075,
                                    "mode_temperature": 0,
                                    "mean_duration": 6188,
                                    "status": "0",
                                    "relevance": 1,
                                    "is_positive": false,
                                    "benchmark": 28,
                                    "usage": 12,
                                    "delta_kwh": -16,
                                    "delta_perc": -56,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            }
                        },
                        "washingMachine": {
                            "self": {
                                "total": {
                                    "overall_efficiency_score": 80,
                                    "appliance_efficiency_score": 100,
                                    "usage_efficiency_score": 50,
                                    "overall_eei": 38,
                                    "frequency": 40,
                                    "mean_energy": 0.45970002,
                                    "mean_duration": 4506,
                                    "status": "3",
                                    "relevance": 0,
                                    "is_positive": false,
                                    "benchmark": 18,
                                    "usage": 18,
                                    "delta_kwh": 0,
                                    "delta_perc": 0,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            }
                        },
                        "oven": {
                            "self": {
                                "total": {
                                    "status": "5",
                                    "relevance": 0,
                                    "is_positive": true,
                                    "benchmark": 12,
                                    "usage": 14,
                                    "delta_kwh": 2,
                                    "delta_perc": 16,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            }
                        },
                        "entertainment": {
                            "peer": {
                                "total": {
                                    "status": "0",
                                    "relevance": 0,
                                    "is_positive": false,
                                    "benchmark": 29,
                                    "usage": 16,
                                    "delta_kwh": -12,
                                    "delta_perc": -43,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            }
                        },
                        "immersionHeater": {
                            "self": {
                                "total": {
                                    "status": "1",
                                    "relevance": 0,
                                    "is_positive": false,
                                    "benchmark": 49,
                                    "usage": 35,
                                    "delta_kwh": -13,
                                    "delta_perc": -27,
                                    "last_updated": "2022-11-29T12:17:49+02:00",
                                    "recommendations": []
                                }
                            }
                        }
                    },
                    "timestamp": "2022-11-29T16:18:38+02:00"
                }
            },
            "GetConsumptionAppliancesResponse": {
                "summary": "Appliances' consumption.",
                "value": {
                    "status": "ok",
                    "data": {
                        "appliances": {
                            "start_time": 1667257200,
                            "energy_per_appliance": [
                                {
                                    "energy_ws": 305607600,
                                    "appliance_instance_id": "AON",
                                    "cost": 66.0223
                                },
                                {
                                    "energy_ws": 90741600,
                                    "appliance_instance_id": "DishWasher",
                                    "cost": 19.6035
                                },
                                {
                                    "energy_ws": 0,
                                    "appliance_instance_id": "Dryer",
                                    "cost": 0
                                },
                                {
                                    "energy_ws": 0,
                                    "appliance_instance_id": "EV",
                                    "cost": 0
                                },
                                {
                                    "energy_ws": 63831600,
                                    "appliance_instance_id": "ENT",
                                    "cost": 13.7899
                                },
                                {
                                    "energy_ws": 0,
                                    "appliance_instance_id": "FlowHeater",
                                    "cost": 0
                                },
                                {
                                    "energy_ws": 0,
                                    "appliance_instance_id": "IH",
                                    "cost": 0
                                },
                                {
                                    "energy_ws": 25207200,
                                    "appliance_instance_id": "LIG",
                                    "cost": 5.4457
                                },
                                {
                                    "energy_ws": 2491200,
                                    "appliance_instance_id": "Oven",
                                    "cost": 0.5382
                                },
                                {
                                    "energy_ws": 141246000,
                                    "appliance_instance_id": "REF",
                                    "cost": 30.5142
                                },
                                {
                                    "energy_ws": -274143600,
                                    "appliance_instance_id": "Solar",
                                    "cost": -59.2249
                                },
                                {
                                    "energy_ws": 51937200,
                                    "appliance_instance_id": "WM",
                                    "cost": 11.2203
                                }
                            ]
                        }
                    },
                    "timestamp": "2022-10-13T20:37:53+02:00"
                }
            },
            "GetInstantaneousPowerExample": {
                "summary": "Get power data series for a certain time range.",
                "value": {
                    "status": "ok",
                    "data": {
                        "results": [
                            {
                                "power": 132.1667,
                                "timestamp": "2022-12-12T00:00:00+01:00"
                            }
                        ],
                        "ranges": {
                            "power_min": 5.32,
                            "power_max": 2367.54
                        }
                    }
                }
            },
            "GetFeedinDailyExample": {
                "summary": "Get today's feedin value.",
                "value": {
                    "status": "ok",
                    "data": {
                        "usage": 323533,
                        "cost": 42.0593,
                        "timestamp": "2022-12-16T15:32:02+01:00"
                    }
                }
            },
            "GetInstantaneousPhasesIDD": {
                "summary": "Instantaneous phases IDD report.",
                "value": {
                    "status": "ok",
                    "data": {
                        "total": {
                            "power_min": -3830,
                            "power_max": 9770,
                            "power_avg": 595.5349
                        },
                        "L1": {
                            "power_min": 25,
                            "power_max": 1584,
                            "power_avg": 219.4306
                        },
                        "L2": {
                            "power_min": 0,
                            "power_max": 1430,
                            "power_avg": 505.6667
                        },
                        "L3": {
                            "power_min": 3,
                            "power_max": 1436,
                            "power_avg": 453.375
                        }
                    },
                    "timestamp": "2023-01-05T15:44:12+02:00"
                }
            },
            "GetUserLanApiTokenExample": {
                "summary": "Get lan token response.",
                "value": {
                    "status": "ok",
                    "data": {
                        "user_lan_token": "100",
                        "expires_in": 84992
                    }
                }
            },
            "GetPlugRelayExample": {
                "summary": "Get plug relay response",
                "value": {
                    "status": "ok",
                    "data": {
                        "relay": {
                            "on_off": 0,
                            "timestamp": "2023-03-20T10:06:00+02:00"
                        },
                        "timestamp": "2023-03-20T13:11:56+02:00"
                    }
                }
            },
            "MeterReaderCommission": {
                "summary": "Request body",
                "value": {
                    "mac_address": "6802:E2FF:F1B4:7341"
                }
            },
            "PutSmartbridgeLCThresholdRequest": {
                "summary": "Request body",
                "value": {
                    "lc_threshold": 110
                }
            },
            "PutPlugRelayRequest": {
                "summary": "Request body",
                "value": {
                    "on_off": 1
                }
            },
            "GetMeterReaderStatusSmartReaderResponse": {
                "summary": "Meter reader response for SmartReader case.",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity": {
                            "smartreader": {
                                "meter_id_read": "1DZG0044037253",
                                "meter_id_provisioned": "1DZG0044037253",
                                "pin_entry_mode": "unknown",
                                "mode": "RT_INACTIVE",
                                "key_retries": 0,
                                "meter_unlocked": true,
                                "key_data_configured": false,
                                "signal_strength": -68,
                                "battery_status": 5,
                                "firmware_status": "OK"
                            },
                            "meter_reader_connection_type": "smartreader",
                            "current_status": "CONNECTED_WITH_METER"
                        },
                        "timestamp": "2023-01-17T12:41:40+01:00"
                    }
                }
            },
            "GetMeterReaderStatusPowerPalResponse": {
                "summary": "Meter reader response for PowerPal case.",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity": {
                            "powerpal": {
                                "candidate_count": 30,
                                "signal_strength": -100
                            },
                            "inclusion": {
                                "active": true,
                                "status": 0,
                                "timestamp": "2023-01-16T14:02:00+01:00"
                            },
                            "contact": {
                                "active": true,
                                "status": 0,
                                "timestamp": "2023-01-16T14:02:00+01:00"
                            },
                            "connect": {
                                "active": false,
                                "status": 1,
                                "timestamp": "2023-01-16T14:02:00+01:00"
                            },
                            "meter_reader_connection_type": "powerpal",
                            "signal_strength": -100,
                            "current_status": "CONTACT_NO_DATA_FROM_METER"
                        },
                        "timestamp": "2023-01-17T15:50:42+01:00"
                    }
                }
            },
            "GetMeterReaderStatusMedaResponse": {
                "summary": "Meter reader response for MeDA case.",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity": {
                            "meda": {
                                "wlan_rssi": -36,
                                "meter_txrssi": -67,
                                "lora_mode": 0,
                                "KMS_activation_counter": 433,
                                "activation_counter": 0
                            },
                            "inclusion": {
                                "active": true,
                                "status": 433,
                                "timestamp": "2023-01-20T04:58:00+01:00"
                            },
                            "connect": {
                                "active": true,
                                "status": 0,
                                "timestamp": "2023-01-20T07:58:00+01:00"
                            },
                            "meter_reader_connection_type": "meda",
                            "current_status": "CONNECTED_WITH_METER"
                        },
                        "timestamp": "2023-01-20T08:45:39+01:00"
                    }
                }
            },
            "GetOpticalSmartbridgeStatusResponse": {
                "summary": "Optical Meter Status response.",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity": {
                            "current_status": "CONNECTED_WITH_METER",
                            "meter_id_read": "1DZG0044037253",
                            "meter_id_provisioned": "1DZG0044037253",
                            "pin_entry_mode": "optical",
                            "pincode": "1234",
                            "key_retries": 0,
                            "meter_unlocked": true
                        },
                        "timestamp": "2023-01-20T08:45:39+01:00"
                    }
                }
            },
            "GetEnergyMeasurementDaysExample": {
                "summary": "Complete measurements",
                "value": {
                    "status": "ok",
                    "data": [
                        {
                            "timestamp": "2022-12-15T00:00:00+02:00",
                            "measured": "67225",
                            "cost_measured": "14.7895"
                        }
                    ]
                }
            },
            "GetEnergyMeasurementWithMissingDataExample": {
                "summary": "Measurements with missing data",
                "value": {
                    "status": "ok",
                    "data": [
                        {
                            "timestamp": "2022-12-15T00:00:00+02:00"
                        },
                        {
                            "timestamp": "2022-12-16T00:00:00+02:00"
                        },
                        {
                            "timestamp": "2022-12-17T00:00:00+02:00",
                            "measured": "84235",
                            "cost_measured": "16.7845"
                        },
                        {
                            "timestamp": "2022-12-19T00:00:00+02:00",
                            "measured": "67225",
                            "cost_measured": "14.7895"
                        }
                    ]
                }
            },
            "GetEnergyMeasurementWeeksExample": {
                "summary": "Complete measurements.",
                "value": {
                    "status": "ok",
                    "data": [
                        {
                            "timestamp": "2022-12-15T00:00:00+02:00",
                            "measured": "67225",
                            "cost_measured": "14.7895"
                        }
                    ]
                }
            },
            "GetEnergyMeasurementMonthsExample": {
                "summary": "Complete measurements.",
                "value": {
                    "status": "ok",
                    "data": [
                        {
                            "timestamp": "2022-12-01T00:00:00+02:00",
                            "measured": "67225",
                            "cost_measured": "14.7895"
                        }
                    ]
                }
            },
            "InvalidEnergyType": {
                "summary": "Invalid enrgy type.",
                "value": {
                    "status": "error",
                    "error": {
                        "code": 422,
                        "message": "Invalid input: Invalid energy type"
                    }
                }
            },
            "GetInstantaneousExample": {
                "summary": "Instantaneous Response",
                "value": {
                    "status": "ok",
                    "data": {
                        "ranges": {
                            "power_min": 0,
                            "power_max": 10000,
                            "gas_hour_low": 0,
                            "gas_hour_high": 2
                        },
                        "electricity": {
                            "power": 6668,
                            "current_summation": 14001643,
                            "timestamp": "2022-11-02T11:19:50+01:00"
                        },
                        "gas": {
                            "gas_hourly": 2.43,
                            "current_summation": 13988578,
                            "timestamp": "2022-11-02T11:19:50+01:00"
                        },
                        "timestamp": "2022-11-02T11:23:12+01:00"
                    }
                }
            },
            "PostMandateCreation": {
                "summary": "Mandate Creation",
                "value": {
                    "status": "ok",
                    "data": {
                        "customer_id": "12345678",
                        "url": "https://some_datahub_url?id=<mandate_request_id>"
                    }
                }
            },
            "GetHomestateCurrent": {
                "summary": "Homestate Current",
                "value": {
                    "status": "ok",
                    "data": {
                        "current_zone": 2,
                        "since": "1980-11-07T10:07:03+02:00"
                    }
                }
            },
            "GetHomestateConfig": {
                "summary": "Homestate Config",
                "value": {
                    "status": "ok",
                    "data": {
                        "thresholds": [
                            232,
                            398,
                            671
                        ],
                        "hyperthreshold_timestamp": "2020-06-30T10:23:33+02:00"
                    }
                }
            },
            "GetApprovedMandateWithoutRenewalStatus": {
                "summary": "Approved mandate - No expiration within three months",
                "value": {
                    "status": "ok",
                    "data": {
                        "customer_id": "<customer-id>",
                        "status": "APPROVED",
                        "url": "https://<datahub-url>?id=<mandate-request-id>",
                        "metering_points": {
                            "<electricity-EAN>": {
                                "commodity": "ELECTRICITY",
                                "status": "APPROVED",
                                "granularity": "PT15M",
                                "data_access_period": {
                                    "start": "2024-01-01T00:00:00Z"
                                },
                                "expiration_date": "2027-04-01T00:00:00Z"
                            },
                            "<gas-EAN>": {
                                "commodity": "GAS",
                                "status": "APPROVED",
                                "granularity": "PT15M",
                                "data_access_period": {
                                    "start": "2024-01-01T00:00:00Z"
                                },
                                "expiration_date": "2027-04-01T00:00:00Z"
                            }
                        }
                    }
                }
            },
            "GetApprovedMandateWithRenewalStatus": {
                "summary": "Approved mandate - Expiration within three months",
                "value": {
                    "status": "ok",
                    "data": {
                        "customer_id": "<customer-id>",
                        "status": "APPROVED",
                        "url": "https://<datahub-url>?id=<mandate-request-id>",
                        "metering_points": {
                            "<electricity-EAN>": {
                                "commodity": "ELECTRICITY",
                                "status": "APPROVED",
                                "granularity": "PT15M",
                                "data_access_period": {
                                    "start": "2024-01-01T00:00:00Z",
                                    "end": "2025-04-01T00:00:00Z"
                                },
                                "expiration_date": "2025-04-01T00:00:00Z",
                                "renewal_status": "TO_BE_RENEWED"
                            },
                            "<gas-EAN>": {
                                "commodity": "GAS",
                                "status": "APPROVED",
                                "granularity": "PT15M",
                                "data_access_period": {
                                    "start": "2024-01-01T00:00:00Z",
                                    "end": "2025-04-01T00:00:00Z"
                                },
                                "expiration_date": "2025-04-01T00:00:00Z",
                                "renewal_status": "TO_BE_RENEWED"
                            }
                        }
                    }
                }
            },
            "PutPowerThresholdsConfigExample": {
                "summary": "Set Power Thresholds Configuration Request Body Example",
                "value": {
                    "mains": {
                        "threshold_0": {
                            "enabled": true,
                            "threshold_value": 20,
                            "alert_type": "upper",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        },
                        "threshold_1": {
                            "enabled": true,
                            "threshold_value": 20,
                            "alert_type": "lower",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        },
                        "threshold_2": {
                            "enabled": false,
                            "threshold_value": 20,
                            "alert_type": "lower",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        },
                        "threshold_3": {
                            "enabled": false,
                            "threshold_value": 20,
                            "alert_type": "upper",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        }
                    },
                    "phase_1": {
                        "threshold_0": {
                            "enabled": true,
                            "threshold_value": 20,
                            "alert_type": "upper",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        },
                        "threshold_1": {
                            "enabled": true,
                            "threshold_value": 20,
                            "alert_type": "lower",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        }
                    },
                    "phase_2": {
                        "threshold_0": {
                            "enabled": true,
                            "threshold_value": 20,
                            "alert_type": "upper",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        },
                        "threshold_1": {
                            "enabled": true,
                            "threshold_value": 20,
                            "alert_type": "lower",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        }
                    },
                    "phase_3": {
                        "threshold_0": {
                            "enabled": true,
                            "threshold_value": 20,
                            "alert_type": "upper",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        },
                        "threshold_1": {
                            "enabled": true,
                            "threshold_value": 20,
                            "alert_type": "lower",
                            "cooldown": 3600,
                            "aggregation_method": "mean",
                            "aggregation_sample_count": 10,
                            "aggregation_sample_interval": 10
                        }
                    }
                }
            },
            "GetPowerThresholdsConfigExample": {
                "summary": "All Configurations Enabled",
                "value": {
                    "status": "ok",
                    "data": {
                        "mains": {
                            "threshold_0": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "upper",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            },
                            "threshold_1": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "lower",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            }
                        },
                        "phase_1": {
                            "threshold_0": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "upper",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            },
                            "threshold_1": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "lower",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            }
                        },
                        "phase_2": {
                            "threshold_0": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "upper",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            },
                            "threshold_1": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "lower",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            }
                        },
                        "phase_3": {
                            "threshold_0": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "upper",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            },
                            "threshold_1": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "lower",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            }
                        }
                    }
                }
            },
            "GetPowerThresholdsConfigExampleWithDisabledThreshold": {
                "summary": "Partial Configurations Disabled",
                "value": {
                    "status": "ok",
                    "data": {
                        "mains": {
                            "threshold_0": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "upper",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            },
                            "threshold_1": {
                                "enabled": false,
                                "threshold_value": 20,
                                "alert_type": "none",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            }
                        },
                        "phase_1": {
                            "threshold_0": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "upper",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            },
                            "threshold_1": {
                                "enabled": false,
                                "threshold_value": 20,
                                "alert_type": "none",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            }
                        },
                        "phase_2": {
                            "threshold_0": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "upper",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            },
                            "threshold_1": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "lower",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            }
                        },
                        "phase_3": {
                            "threshold_0": {
                                "enabled": false,
                                "threshold_value": 20,
                                "alert_type": "none",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            },
                            "threshold_1": {
                                "enabled": true,
                                "threshold_value": 20,
                                "alert_type": "lower",
                                "cooldown": 3600,
                                "aggregation_method": "mean",
                                "aggregation_sample_count": 10,
                                "aggregation_sample_interval": 10,
                                "last_updated": "2022-02-17T11:07:08+01:00"
                            }
                        }
                    }
                }
            },
            "StopRepetitiveAlarmExample": {
                "summary": "Stop repetitive alarm request body",
                "value": {
                    "code": "OL002.1R"
                }
            },
            "GetProfileExample": {
                "summary": "Get profile Response",
                "value": {
                    "status": "ok",
                    "data": {
                        "profile": {
                            "g_tariff": "0.621342",
                            "g_fixed_tariff": "100",
                            "g_last_jar": "100",
                            "budget_bill": "505",
                            "e_tariff": "0.224321",
                            "e_fixed_tariff": "20.123423",
                            "e_last_jar": "5000",
                            "e_tariff_tier_1": "0.184231",
                            "e_tariff_tier_2": "0.254325",
                            "feedin_tariff": "0.135234",
                            "feedin_tariff_tier_1": "0.155342",
                            "feedin_tariff_tier_2": "-1.354235"
                        }
                    }
                }
            },
            "PostProfileExample": {
                "summary": "Post profile body",
                "value": {
                    "reset_tariffs": false,
                    "g_tariff": "0.624234",
                    "g_fixed_tariff": "100",
                    "g_last_jar": "100",
                    "budget_bill": "505",
                    "e_tariff": "0.221234",
                    "e_fixed_tariff": "20",
                    "e_last_jar": "5000",
                    "e_tariff_tier_1": "0.18432",
                    "e_tariff_tier_2": "0.2412",
                    "feedin_tariff": "0.134321",
                    "feedin_tariff_tier_1": "0.143245",
                    "feedin_tariff_tier_2": "0.143",
                    "start_timestamp": "1679473799"
                }
            },
            "GetBudgetDefinitionExample": {
                "summary": "Get budget definition Response",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity_monthly_budget": 50,
                        "gas_monthly_budget": 30,
                        "applicable_since": "2000-01-01T00:00:00Z"
                    }
                }
            },
            "PostBudgetDefinitionExample": {
                "summary": "Post budget definition body",
                "value": {
                    "budget_definition": {
                        "electricity_monthly_budget": 50,
                        "gas_monthly_budget": 30,
                        "applicable_since": "2022-12-25T00:00:00+2Z"
                    }
                }
            },
            "PostTariffDefinitionExample": {
                "summary": "Post tariff definition body",
                "value": {
                    "tariff_definition": {
                        "electricity_yearly_fixed_cost": 200,
                        "electricity_tariff": 20,
                        "electricity_tariff_tier_1": 0.13254,
                        "electricity_tariff_tier_2": 0.126432,
                        "feedin_tariff": 0.144,
                        "feedin_tariff_tier_1": 0.1234,
                        "feedin_tariff_tier_2": 0.145432,
                        "gas_yearly_fixed_cost": 400,
                        "gas_tariff": 0.234562,
                        "applicable_since": "2020-10-10T00:00:00Z"
                    },
                    "reset_future_definitions": true
                }
            },
            "PostTariffDefinitionExample2": {
                "summary": "Post tariff definition body without providing reset_future_definitions",
                "value": {
                    "tariff_definition": {
                        "electricity_yearly_fixed_cost": 200,
                        "electricity_tariff": 20,
                        "electricity_tariff_tier_1": 0.13254,
                        "electricity_tariff_tier_2": 0.126432,
                        "feedin_tariff": 0.144,
                        "feedin_tariff_tier_1": 0.1234,
                        "feedin_tariff_tier_2": 0.145432,
                        "gas_yearly_fixed_cost": 400,
                        "gas_tariff": 0.234562,
                        "applicable_since": "2020-10-10T00:00:00Z"
                    }
                }
            },
            "PostTariffDefinitionExample3": {
                "summary": "Post tariff definition body with missing arguments",
                "value": {
                    "tariff_definition": {
                        "electricity_yearly_fixed_cost": 350,
                        "electricity_tariff": 0.222423,
                        "feedin_tariff": 0.245123
                    },
                    "reset_future_definitions": ""
                }
            },
            "GetTariffDefinitionExample": {
                "summary": "Get Tariff Definition Response",
                "value": {
                    "status": "ok",
                    "data": {
                        "electricity_yearly_fixed_cost": 0.62,
                        "electricity_tariff": 0.224532,
                        "electricity_tariff_tier_1": 0.253253,
                        "electricity_tariff_tier_2": 0.22453,
                        "feedin_tariff": 0.153,
                        "feedin_tariff_tier_1": 0.152345,
                        "feedin_tariff_tier_2": 0.1345,
                        "gas_yearly_fixed_cost": 340,
                        "gas_tariff": 0.33534,
                        "applicable_since": "2020-10-10T00:00:00Z"
                    }
                }
            },
            "GetProfilePropertiesExample": {
                "summary": "Get profile properties 200 response",
                "value": {
                    "PropertyType": [
                        "PT.01",
                        "PT.02",
                        "PT.03",
                        "PT.04",
                        "PT.05",
                        "PT.06"
                    ],
                    "PropertySize": [
                        "PS.01",
                        "PS.02",
                        "PS.03",
                        "PS.04"
                    ],
                    "PropertyAge": [
                        "PA.01",
                        "PA.02",
                        "PA.03",
                        "PA.04"
                    ],
                    "Ownership": [
                        "OWN.01",
                        "OWN.02"
                    ],
                    "Occupants": [
                        "OCC.01",
                        "OCC.02",
                        "OCC.03",
                        "OCC.04",
                        "OCC.05"
                    ],
                    "OccupantType": [
                        "OT.01",
                        "OT.02",
                        "OT.03",
                        "OT.04",
                        "OT.05",
                        "OT.06"
                    ],
                    "SpaceHeating": [
                        "SH.01",
                        "SH.02",
                        "SH.03",
                        "SH.04",
                        "SH.05",
                        "SH.06",
                        "SH.07",
                        "SH.08",
                        "SH.09",
                        "SH.10"
                    ],
                    "WaterHeating": [
                        "WH.01",
                        "WH.02",
                        "WH.03",
                        "WH.04",
                        "WH.05",
                        "WH.06",
                        "WH.07"
                    ],
                    "StoveHeating": [
                        "STH.00",
                        "STH.01",
                        "STH.02",
                        "STH.04"
                    ],
                    "GrillHeating": [
                        "GH.00",
                        "GH.01",
                        "GH.02",
                        "GH.04"
                    ],
                    "OvenHeating": [
                        "OH.00",
                        "OH.01",
                        "OH.02",
                        "OH.04"
                    ],
                    "Photovoltaic": [
                        "SOL.01",
                        "SOL.02"
                    ],
                    "Appliances": [
                        "A.01",
                        "A.02",
                        "A.03",
                        "A.04",
                        "A.05",
                        "A.06",
                        "A.07",
                        "A.08",
                        "A.09",
                        "A.10",
                        "A.11",
                        "A.12",
                        "A.13",
                        "A.14",
                        "A.15",
                        "A.16",
                        "A.17",
                        "A.18",
                        "A.19",
                        "A.20",
                        "A.21",
                        "A.22",
                        "A.23",
                        "A.24",
                        "A.25",
                        "A.26",
                        "A.27",
                        "A.28",
                        "A.29",
                        "A.30"
                    ]
                }
            },
            "GetProfileAttributesExample": {
                "summary": "Get profile attributes response.",
                "value": {
                    "status": "ok",
                    "data": {
                        "Attributes": {
                            "PropertyLocation": "00000",
                            "PropertyCountry": "NL"
                        },
                        "Appliances": {
                            "A.10": 3,
                            "A.11": 1
                        },
                        "ApplianceMetadata": {
                            "A.10": [
                                {
                                    "description": "basement",
                                    "id": "8b46ed4cc7945bd9",
                                    "applianceAge": "AA.03",
                                    "applianceType": "DT.02",
                                    "applianceVolume": "AV.01",
                                    "brand": "Bosch"
                                },
                                {
                                    "description": "main-floor",
                                    "id": "665ads65ad565",
                                    "applianceAge": "AA.01",
                                    "applianceType": "DT.01",
                                    "applianceVolume": "AV.01",
                                    "brand": "Bosch"
                                }
                            ],
                            "A.11": [
                                {
                                    "description": "1st floor",
                                    "id": "0991b544386a6038",
                                    "applianceAge": "AA.03",
                                    "applianceType": "WT.01",
                                    "applianceVolume": "AV.02",
                                    "brand": "Bosch"
                                }
                            ]
                        }
                    }
                }
            },
            "PostMinimalProfileInformationExample": {
                "summary": "Post Minimal Profile Information request body.",
                "value": {
                    "Attributes": {
                        "PropertyLocation": "52100",
                        "PropertyCountry": "GR",
                        "PropertySize": "PS.04",
                        "PropertyType": "PT.01",
                        "SpaceHeating": "SH.01",
                        "WaterHeating": "WH.01"
                    }
                }
            },
            "PostNormalProfileInformationExample": {
                "summary": "Post Normal Profile Information request body.",
                "value": {
                    "Attributes": {
                        "PropertyLocation": "52100",
                        "PropertyCountry": "GR",
                        "PropertySize": "PS.04",
                        "PropertyType": "PT.01",
                        "SpaceHeating": "SH.01",
                        "WaterHeating": "WH.01",
                        "PropertyAge": "PA.02",
                        "Occupants": "OCC.01",
                        "OccupantType": "OT.01",
                        "Photovoltaic": "SOL.01",
                        "OvenHeating": "OH.00"
                    },
                    "Appliances": {
                        "A.01": 1,
                        "A.11": 1,
                        "A.10": 1,
                        "A.12": 1,
                        "A.04": 1,
                        "A.07": 1,
                        "A.17": 2,
                        "A.20": 1,
                        "A.21": 1,
                        "A.22": 1,
                        "A.23": 1,
                        "A.24": 1,
                        "A.25": 1
                    },
                    "ApplianceMetadata": {
                        "A.10": [
                            {
                                "description": "basement",
                                "id": "8b46ed4cc7945bd9",
                                "applianceAge": "AA.03",
                                "applianceType": "DT.02",
                                "applianceVolume": "AV.01",
                                "brand": "Bosch"
                            }
                        ],
                        "A.11": [
                            {
                                "description": "1st floor",
                                "id": "0991b544386a6038",
                                "applianceAge": "AA.03",
                                "applianceType": "WT.01",
                                "applianceVolume": "AV.02",
                                "brand": "Bosch"
                            }
                        ]
                    }
                }
            },
            "PostFullProfileInformationExample": {
                "summary": "Post Full Profile Information request body.",
                "value": {
                    "Attributes": {
                        "PropertyLocation": "52100",
                        "PropertyCountry": "GR",
                        "PropertySize": "PS.04",
                        "PropertyType": "PT.01",
                        "PropertyAge": "PA.02",
                        "Ownership": "OWN.01",
                        "Occupants": "OCC.01",
                        "OccupantType": "OT.01",
                        "SpaceHeating": "SH.01",
                        "WaterHeating": "WH.06",
                        "StoveHeating": "STH.00",
                        "GrillHeating": "GH.01",
                        "OvenHeating": "OH.00",
                        "SpaceHeatingExchangerType": "SHET.01",
                        "Photovoltaic": "SOL.01"
                    },
                    "Appliances": {
                        "A.01": 1,
                        "A.02": 1,
                        "A.03": 1,
                        "A.04": 1,
                        "A.05": 3,
                        "A.06": 1,
                        "A.07": 1,
                        "A.08": 2,
                        "A.09": 1,
                        "A.10": 2,
                        "A.11": 1,
                        "A.12": 1,
                        "A.13": 2,
                        "A.14": 1,
                        "A.15": 1,
                        "A.16": 1,
                        "A.17": 1,
                        "A.18": 1,
                        "A.19": 2,
                        "A.20": 1,
                        "A.21": 1,
                        "A.22": 1,
                        "A.23": 1,
                        "A.24": 1,
                        "A.25": 1,
                        "A.26": 1,
                        "A.27": 2,
                        "A.28": 1,
                        "A.29": 1,
                        "A.30": 1
                    },
                    "ApplianceMetadata": {
                        "A.10": [
                            {
                                "description": "basement",
                                "id": "8b46ed4cc7945bd9",
                                "applianceAge": "AA.03",
                                "applianceType": "DT.02",
                                "applianceVolume": "AV.01",
                                "brand": "Bosch"
                            },
                            {
                                "description": "main-floor",
                                "id": "665ads65ad565",
                                "applianceAge": "AA.01",
                                "applianceType": "DT.01",
                                "applianceVolume": "AV.01",
                                "brand": "Bosch"
                            }
                        ],
                        "A.11": [
                            {
                                "description": "1st floor",
                                "id": "0991b544386a6038",
                                "applianceAge": "AA.03",
                                "applianceType": "WT.01",
                                "applianceVolume": "AV.02",
                                "brand": "Bosch"
                            }
                        ],
                        "A.29": [
                            {
                                "description": "Battery Energy Storage System",
                                "id": "8881b544386a6039",
                                "batterySize": "5"
                            }
                        ],
                        "A.30": [
                            {
                                "description": "1st floor",
                                "id": "d23ed23ed243eefd3",
                                "applianceType": "air-to-air",
                                "applianceSetup": "full-electric"
                            }
                        ]
                    }
                }
            },
            "PostFullProfileInformationExampleWithMultipleHeatingOptions": {
                "summary": "Post Full Profile Information With Multiple Heating Options request body.",
                "value": {
                    "Attributes": {
                        "PropertyLocation": "52100",
                        "PropertyCountry": "GR",
                        "PropertySize": "PS.04",
                        "PropertyType": "PT.01",
                        "PropertyAge": "PA.02",
                        "Ownership": "OWN.01",
                        "Occupants": "OCC.01",
                        "OccupantType": "OT.01",
                        "SpaceHeating": "SH.01,SH.02,SH.05",
                        "WaterHeating": "WH.06,WH.07",
                        "StoveHeating": "STH.00",
                        "GrillHeating": "GH.01",
                        "OvenHeating": "OH.00",
                        "SpaceHeatingExchangerType": "SHET.01",
                        "Photovoltaic": "SOL.01"
                    },
                    "Appliances": {
                        "A.01": 1,
                        "A.02": 1,
                        "A.03": 1,
                        "A.04": 1,
                        "A.05": 3,
                        "A.06": 1,
                        "A.07": 1,
                        "A.08": 2,
                        "A.09": 1,
                        "A.10": 2,
                        "A.11": 1,
                        "A.12": 1,
                        "A.13": 2,
                        "A.14": 1,
                        "A.15": 1,
                        "A.16": 1,
                        "A.17": 1,
                        "A.18": 1,
                        "A.19": 2,
                        "A.20": 1,
                        "A.21": 1,
                        "A.22": 1,
                        "A.23": 1,
                        "A.24": 1,
                        "A.25": 1,
                        "A.26": 1,
                        "A.27": 2,
                        "A.28": 1,
                        "A.29": 1,
                        "A.30": 2
                    },
                    "ApplianceMetadata": {
                        "A.10": [
                            {
                                "description": "basement",
                                "id": "8b46ed4cc7945bd9",
                                "applianceAge": "AA.03",
                                "applianceType": "DT.02",
                                "applianceVolume": "AV.01",
                                "brand": "Bosch"
                            },
                            {
                                "description": "main-floor",
                                "id": "665ads65ad565",
                                "applianceAge": "AA.01",
                                "applianceType": "DT.01",
                                "applianceVolume": "AV.01",
                                "brand": "Bosch"
                            }
                        ],
                        "A.11": [
                            {
                                "description": "1st floor",
                                "id": "0991b544386a6038",
                                "applianceAge": "AA.03",
                                "applianceType": "WT.01",
                                "applianceVolume": "AV.02",
                                "brand": "Bosch"
                            }
                        ],
                        "A.29": [
                            {
                                "description": "Battery Energy Storage System",
                                "id": "8881b544386a6039",
                                "batterySize": "5"
                            }
                        ],
                        "A.30": [
                            {
                                "description": "1st floor",
                                "id": "d23ed23ed243eefd3",
                                "applianceType": "air-to-air",
                                "applianceSetup": "full-electric"
                            },
                            {
                                "description": "2nd floor",
                                "id": "d23ed23ed243eefd4",
                                "applianceType": "air-to-water",
                                "applianceSetup": "hybrid"
                            }
                        ]
                    }
                }
            },
            "PutRegistrationOptInExample": {
                "summary": "Put Registration OptIn Body",
                "value": {
                    "opt_in": "1"
                }
            },
            "NilmRetrainingExample": {
                "summary": "Nilm Retraining Request Body Example",
                "value": {
                    "appliances": {
                        "alwaysOn": {
                            "immediate": true,
                            "removeOldModel": true
                        },
                        "refrigeration": {
                            "immediate": false,
                            "removeOldModel": true
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyAuth": {
                "type": "apiKey",
                "name": "X-API-KEY",
                "in": "header"
            },
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Registration"
        },
        {
            "name": "Authentication"
        },
        {
            "name": "Account Status"
        },
        {
            "name": "Installation Profile"
        },
        {
            "name": "Energy Measurements"
        },
        {
            "name": "NILM - Disaggregation"
        },
        {
            "name": "Energy Insights"
        },
        {
            "name": "Recommendations"
        },
        {
            "name": "Notifications"
        },
        {
            "name": "Edge Analytics and Alerts"
        },
        {
            "name": "Deprecated"
        },
        {
            "name": "Device Management",
            "description": "Device Management"
        }
    ],
    "x-explorer-enabled": false
}